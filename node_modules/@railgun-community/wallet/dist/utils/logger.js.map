{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/utils/logger.ts"],"names":[],"mappings":";;;AAAA,IAAI,GAAoC,CAAC;AACzC,IAAI,KAA8C,CAAC;AAE5C,MAAM,WAAW,GAAG,CAAC,GAAW,EAAE,EAAE;IACzC,IAAI,GAAG;QAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC;AAFW,QAAA,WAAW,eAEtB;AAEK,MAAM,gBAAgB,GAAG,CAAC,GAAmB,EAAE,EAAE;IACtD,IAAI,KAAK;QAAE,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC,CAAC;AAFW,QAAA,gBAAgB,oBAE3B;AAEK,MAAM,UAAU,GAAG,CACxB,OAAwC,EACxC,SAAkD,EAClD,EAAE;IACF,GAAG,GAAG,OAAO,CAAC;IACd,KAAK,GAAG,SAAS,CAAC;AACpB,CAAC,CAAC;AANW,QAAA,UAAU,cAMrB","sourcesContent":["let log: Optional<(msg: string) => void>;\nlet error: Optional<(err: Error | string) => void>;\n\nexport const sendMessage = (msg: string) => {\n  if (log) log(msg);\n};\n\nexport const sendErrorMessage = (err: Error | string) => {\n  if (error) error(err);\n};\n\nexport const setLoggers = (\n  logFunc: Optional<(msg: string) => void>,\n  errorFunc: Optional<(err: Error | string) => void>,\n) => {\n  log = logFunc;\n  error = errorFunc;\n};\n"]}