{"version":3,"file":"error.js","sourceRoot":"","sources":["../../src/utils/error.ts"],"names":[],"mappings":";;;AAAA,oEAAiE;AACjE,qCAA4C;AAErC,MAAM,sBAAsB,GAAG,CACpC,IAAY;AACZ,8DAA8D;AAC9D,GAAgB,EACT,EAAE;IACT,IAAA,yBAAgB,EAAC,uCAAuC,IAAI,EAAE,CAAC,CAAC;IAEhE,IAAI,GAAG,YAAY,KAAK,EAAE;QACxB,MAAM,KAAK,GAAG,IAAA,6BAAa,EAAC,GAAG,CAAC,CAAC;QACjC,IAAA,yBAAgB,EAAC,KAAK,CAAC,CAAC;QACxB,OAAO,KAAK,CAAC;KACd;IAED,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1D,IAAA,yBAAgB,EAAC,KAAK,CAAC,CAAC;IACxB,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAhBW,QAAA,sBAAsB,0BAgBjC","sourcesContent":["import { sanitizeError } from '@railgun-community/shared-models';\nimport { sendErrorMessage } from './logger';\n\nexport const reportAndSanitizeError = (\n  func: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  err: Error | any,\n): Error => {\n  sendErrorMessage(`Caught error in RAILGUN Wallet SDK: ${func}`);\n\n  if (err instanceof Error) {\n    const error = sanitizeError(err);\n    sendErrorMessage(error);\n    return error;\n  }\n\n  const error = new Error('Unknown error.', { cause: err });\n  sendErrorMessage(error);\n  return error;\n};\n"]}