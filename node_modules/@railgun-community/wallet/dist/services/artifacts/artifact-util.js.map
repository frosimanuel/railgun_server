{"version":3,"file":"artifact-util.js","sourceRoot":"","sources":["../../../src/services/artifacts/artifact-util.ts"],"names":[],"mappings":";;;;;;AAAA,oEAG0C;AAC1C,mEAAiD;AAEjD,MAAM,YAAY,GAAG,qBAAqB,CAAC;AAE3C,MAAM,0BAA0B,GAC9B,gDAAgD,CAAC;AAEnD,MAAM,uBAAuB,GAC3B,gDAAgD,CAAC;AAEtC,QAAA,kCAAkC,GAAG,KAAK,CAAC;AAEjD,MAAM,oBAAoB,GAAG,CAAC,qBAA6B,EAAE,EAAE;IACpE,IAAI,qBAAqB,CAAC,UAAU,CAAC,0CAAkC,CAAC,EAAE;QACxE,OAAO,+BAA+B,qBAAqB,EAAE,CAAC;KAC/D;IAED,OAAO,kBAAkB,qBAAqB,EAAE,CAAC;AACnD,CAAC,CAAC;AANW,QAAA,oBAAoB,wBAM/B;AAEK,MAAM,wBAAwB,GAAG,CACtC,UAAkB,EAClB,WAAmB,EACnB,EAAE;IACF,OAAO,GAAG,UAAU,IAAI,WAAW,EAAE,CAAC;AACxC,CAAC,CAAC;AALW,QAAA,wBAAwB,4BAKnC;AAEK,MAAM,2BAA2B,GAAG,CACzC,SAAiB,EACjB,UAAkB,EAClB,EAAE;IACF,OAAO,GAAG,0CAAkC,IAAI,SAAS,IAAI,UAAU,EAAE,CAAC;AAC5E,CAAC,CAAC;AALW,QAAA,2BAA2B,+BAKtC;AAEK,MAAM,qBAAqB,GAAG,CACnC,YAA0B,EAC1B,qBAA6B,EACrB,EAAE;IACV,QAAQ,YAAY,EAAE;QACpB,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,GAAG,IAAA,4BAAoB,EAAC,qBAAqB,CAAC,OAAO,CAAC;QAC/D,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,GAAG,IAAA,4BAAoB,EAAC,qBAAqB,CAAC,OAAO,CAAC;QAC/D,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,GAAG,IAAA,4BAAoB,EAAC,qBAAqB,CAAC,YAAY,CAAC;QACpE,KAAK,4BAAY,CAAC,GAAG;YACnB,OAAO,GAAG,IAAA,4BAAoB,EAAC,qBAAqB,CAAC,MAAM,CAAC;KAC/D;AACH,CAAC,CAAC;AAdW,QAAA,qBAAqB,yBAchC;AAEK,MAAM,yBAAyB,GAAG,CACvC,qBAA6B,EACZ,EAAE;IACnB,OAAO;QACL,CAAC,4BAAY,CAAC,IAAI,CAAC,EAAE,IAAA,6BAAqB,EACxC,4BAAY,CAAC,IAAI,EACjB,qBAAqB,CACtB;QACD,CAAC,4BAAY,CAAC,IAAI,CAAC,EAAE,IAAA,6BAAqB,EACxC,4BAAY,CAAC,IAAI,EACjB,qBAAqB,CACtB;QACD,CAAC,4BAAY,CAAC,IAAI,CAAC,EAAE,IAAA,6BAAqB,EACxC,4BAAY,CAAC,IAAI,EACjB,qBAAqB,CACtB;QACD,CAAC,4BAAY,CAAC,GAAG,CAAC,EAAE,IAAA,6BAAqB,EACvC,4BAAY,CAAC,GAAG,EAChB,qBAAqB,CACtB;KACF,CAAC;AACJ,CAAC,CAAC;AArBW,QAAA,yBAAyB,6BAqBpC;AAEK,MAAM,kBAAkB,GAAG,CAAC,WAAwB,EAAc,EAAE;IACzE,MAAM,UAAU,GAAG,oBAAqD,CAAC;IACzE,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC;AAHW,QAAA,kBAAkB,sBAG7B;AAEF,MAAM,uBAAuB,GAAG,CAC9B,YAA0B,EAC1B,qBAA6B,EAC7B,EAAE;IACF,QAAQ,YAAY,EAAE;QACpB,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,GAAG,qBAAqB,UAAU,CAAC;QAC5C,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,kBAAkB,qBAAqB,UAAU,CAAC;QAC3D,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,GAAG,qBAAqB,YAAY,CAAC;QAC9C,KAAK,4BAAY,CAAC,GAAG;YACnB,OAAO,iBAAiB,qBAAqB,SAAS,CAAC;KAC1D;IACD,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;AACvC,CAAC,CAAC;AAEF,MAAM,0BAA0B,GAAG,CAAC,YAA0B,EAAE,EAAE;IAChE,QAAQ,YAAY,EAAE;QACpB,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,SAAS,CAAC;QACnB,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,SAAS,CAAC;QACnB,KAAK,4BAAY,CAAC,IAAI;YACpB,OAAO,WAAW,CAAC;QACrB,KAAK,4BAAY,CAAC,GAAG;YACnB,OAAO,QAAQ,CAAC;KACnB;IACD,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;AACvC,CAAC,CAAC;AAEK,MAAM,cAAc,GAAG,CAC5B,YAA0B,EAC1B,qBAA6B,EAC7B,EAAE;IACF,IAAI,qBAAqB,CAAC,UAAU,CAAC,0CAAkC,CAAC,EAAE;QACxE,IACE,qBAAqB,KAAK,IAAA,mCAA2B,EAAC,CAAC,EAAE,CAAC,CAAC;YAC3D,qBAAqB,KAAK,IAAA,mCAA2B,EAAC,EAAE,EAAE,EAAE,CAAC,EAC7D;YACA,OAAO,GAAG,YAAY,SAAS,uBAAuB,IAAI,qBAAqB,IAAI,0BAA0B,CAC3G,YAAY,CACb,EAAE,CAAC;SACL;QACD,MAAM,IAAI,KAAK,CAAC,yBAAyB,qBAAqB,GAAG,CAAC,CAAC;KACpE;IAED,MAAM,gBAAgB,GAAG,uBAAuB,CAC9C,YAAY,EACZ,qBAAqB,CACtB,CAAC;IACF,OAAO,GAAG,YAAY,SAAS,0BAA0B,IAAI,gBAAgB,EAAE,CAAC;AAClF,CAAC,CAAC;AArBW,QAAA,cAAc,kBAqBzB","sourcesContent":["import {\n  ArtifactName,\n  ArtifactMapping,\n} from '@railgun-community/shared-models';\nimport brotliDecompress from 'brotli/decompress';\n\nconst IPFS_GATEWAY = 'https://ipfs-lb.com';\n\nconst MASTER_IPFS_HASH_ARTIFACTS =\n  'QmeBrG7pii1qTqsn7rusvDiqXopHPjCT9gR4PsmW7wXqZq';\n\nconst IPFS_HASH_ARTIFACTS_POI =\n  'QmZrP9zaZw2LwErT2yA6VpMWm65UdToQiKj4DtStVsUJHr';\n\nexport const ARTIFACT_VARIANT_STRING_POI_PREFIX = 'POI';\n\nexport const artifactDownloadsDir = (artifactVariantString: string) => {\n  if (artifactVariantString.startsWith(ARTIFACT_VARIANT_STRING_POI_PREFIX)) {\n    return `artifacts-v2.1/poi-nov-2-23/${artifactVariantString}`;\n  }\n\n  return `artifacts-v2.1/${artifactVariantString}`;\n};\n\nexport const getArtifactVariantString = (\n  nullifiers: number,\n  commitments: number,\n) => {\n  return `${nullifiers}x${commitments}`;\n};\n\nexport const getArtifactVariantStringPOI = (\n  maxInputs: number,\n  maxOutputs: number,\n) => {\n  return `${ARTIFACT_VARIANT_STRING_POI_PREFIX}_${maxInputs}x${maxOutputs}`;\n};\n\nexport const artifactDownloadsPath = (\n  artifactName: ArtifactName,\n  artifactVariantString: string,\n): string => {\n  switch (artifactName) {\n    case ArtifactName.WASM:\n      return `${artifactDownloadsDir(artifactVariantString)}/wasm`;\n    case ArtifactName.ZKEY:\n      return `${artifactDownloadsDir(artifactVariantString)}/zkey`;\n    case ArtifactName.VKEY:\n      return `${artifactDownloadsDir(artifactVariantString)}/vkey.json`;\n    case ArtifactName.DAT:\n      return `${artifactDownloadsDir(artifactVariantString)}/dat`;\n  }\n};\n\nexport const getArtifactDownloadsPaths = (\n  artifactVariantString: string,\n): ArtifactMapping => {\n  return {\n    [ArtifactName.ZKEY]: artifactDownloadsPath(\n      ArtifactName.ZKEY,\n      artifactVariantString,\n    ),\n    [ArtifactName.WASM]: artifactDownloadsPath(\n      ArtifactName.WASM,\n      artifactVariantString,\n    ),\n    [ArtifactName.VKEY]: artifactDownloadsPath(\n      ArtifactName.VKEY,\n      artifactVariantString,\n    ),\n    [ArtifactName.DAT]: artifactDownloadsPath(\n      ArtifactName.DAT,\n      artifactVariantString,\n    ),\n  };\n};\n\nexport const decompressArtifact = (arrayBuffer: ArrayBuffer): Uint8Array => {\n  const decompress = brotliDecompress as (input: Uint8Array) => Uint8Array;\n  return decompress(Buffer.from(arrayBuffer));\n};\n\nconst getArtifactIPFSFilepath = (\n  artifactName: ArtifactName,\n  artifactVariantString: string,\n) => {\n  switch (artifactName) {\n    case ArtifactName.ZKEY:\n      return `${artifactVariantString}/zkey.br`;\n    case ArtifactName.WASM:\n      return `prover/snarkjs/${artifactVariantString}.wasm.br`;\n    case ArtifactName.VKEY:\n      return `${artifactVariantString}/vkey.json`;\n    case ArtifactName.DAT:\n      return `prover/native/${artifactVariantString}.dat.br`;\n  }\n  throw new Error('Invalid artifact.');\n};\n\nconst getArtifactIPFSFilepathPOI = (artifactName: ArtifactName) => {\n  switch (artifactName) {\n    case ArtifactName.ZKEY:\n      return `zkey.br`;\n    case ArtifactName.WASM:\n      return `wasm.br`;\n    case ArtifactName.VKEY:\n      return `vkey.json`;\n    case ArtifactName.DAT:\n      return `dat.br`;\n  }\n  throw new Error('Invalid artifact.');\n};\n\nexport const getArtifactUrl = (\n  artifactName: ArtifactName,\n  artifactVariantString: string,\n) => {\n  if (artifactVariantString.startsWith(ARTIFACT_VARIANT_STRING_POI_PREFIX)) {\n    if (\n      artifactVariantString === getArtifactVariantStringPOI(3, 3) ||\n      artifactVariantString === getArtifactVariantStringPOI(13, 13)\n    ) {\n      return `${IPFS_GATEWAY}/ipfs/${IPFS_HASH_ARTIFACTS_POI}/${artifactVariantString}/${getArtifactIPFSFilepathPOI(\n        artifactName,\n      )}`;\n    }\n    throw new Error(`Invalid POI artifact: ${artifactVariantString}.`);\n  }\n\n  const artifactFilepath = getArtifactIPFSFilepath(\n    artifactName,\n    artifactVariantString,\n  );\n  return `${IPFS_GATEWAY}/ipfs/${MASTER_IPFS_HASH_ARTIFACTS}/${artifactFilepath}`;\n};\n"]}