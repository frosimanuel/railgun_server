{"version":3,"file":"artifact-downloader.js","sourceRoot":"","sources":["../../../src/services/artifacts/artifact-downloader.ts"],"names":[],"mappings":";;;;;;AAAA,oEAK0C;AAC1C,kDAA4C;AAC5C,mDAMyB;AAEzB,6CAA2D;AAC3D,+CAAiD;AACjD,mDAA2D;AAE3D,MAAa,kBAAkB;IACrB,aAAa,CAAgB;IAC7B,kBAAkB,CAAU;IAEpC,YAAY,aAA4B,EAAE,kBAA2B;QACnE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC/C,CAAC;IAED,iBAAiB,GAAG,KAAK,EAAE,qBAA6B,EAAiB,EAAE;QACzE,IAAA,oBAAW,EAAC,0BAA0B,qBAAqB,EAAE,CAAC,CAAC;QAE/D,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,aAAa,CAAC,GAAG,MAAM,IAAA,8BAAc,EAC9D,OAAO,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,gBAAgB,CAAC,4BAAY,CAAC,IAAI,EAAE,qBAAqB,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,4BAAY,CAAC,IAAI,EAAE,qBAAqB,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CACnB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,4BAAY,CAAC,GAAG,CAAC,CAAC,CAAC,4BAAY,CAAC,IAAI,EAC9D,qBAAqB,CACtB;SACF,CAAC,EACF,KAAK,EACL,IAAI,KAAK,CACP,4CAA4C,qBAAqB,6BAA6B,CAC/F,CACF,CAAC;QAEF,IAAI,CAAC,IAAA,yBAAS,EAAC,QAAQ,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,IAAA,yBAAS,EAAC,QAAQ,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,IAAA,yBAAS,EAAC,aAAa,CAAC,EAAE;YAC7B,MAAM,IAAI,KAAK,CACb,IAAI,CAAC,kBAAkB;gBACrB,CAAC,CAAC,kCAAkC;gBACpC,CAAC,CAAC,mCAAmC,CACxC,CAAC;SACH;IACH,CAAC,CAAC;IAEM,gBAAgB,GAAG,KAAK,EAC9B,YAA0B,EAC1B,qBAA6B,EACA,EAAE;QAC/B,MAAM,IAAI,GAAG,IAAA,qCAAqB,EAAC,YAAY,EAAE,qBAAqB,CAAC,CAAC;QACxE,IAAI,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QACD,IAAI;YACF,MAAM,GAAG,GAAG,IAAA,8BAAc,EAAC,YAAY,EAAE,qBAAqB,CAAC,CAAC;YAEhE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,eAAK,CAAC,GAAG,CAAgC,GAAG,EAAE;gBACnE,MAAM,EAAE,KAAK;gBACb,YAAY,EAAE,kBAAkB,CAAC,oBAAoB,CAAC,YAAY,CAAC;aACpE,CAAC,CAAC;YAEH,8BAA8B;YAC9B,oCAAoC;YACpC,yCAAyC;YAEzC,IAAI,aAA4C,CAAC;YAEjD,IAAI,IAAI,YAAY,WAAW,IAAI,IAAI,YAAY,MAAM,EAAE;gBACzD,aAAa,GAAG,IAAI,CAAC;aACtB;iBAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBACnC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACtC;iBAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBACnC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;aAClD;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aAClD;YAED,MAAM,gBAAgB,GAAG,kBAAkB,CAAC,eAAe,CACzD,aAAa,EACb,YAAY,CACb,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,IAAA,wCAAwB,EAC5C,gBAAgB,EAChB,YAAY,EACZ,qBAAqB,CACtB,CAAC;YACF,IAAI,OAAO,EAAE;gBACX,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAC5B,IAAA,oCAAoB,EAAC,qBAAqB,CAAC,EAC3C,IAAI,EACJ,gBAAgB,CACjB,CAAC;aACH;iBAAM;gBACL,MAAM,IAAI,KAAK,CACb,uCAAuC,YAAY,QAAQ,qBAAqB,GAAG,CACpF,CAAC;aACH;YAED,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,IAAA,8BAAsB,EAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC/D;IACH,CAAC,CAAC;IAEM,MAAM,CAAC,eAAe,GAAG,CAC/B,IAA0B,EAC1B,YAA0B,EACL,EAAE;QACvB,QAAQ,YAAY,EAAE;YACpB,KAAK,4BAAY,CAAC,IAAI;gBACpB,OAAO,IAAc,CAAC;YACxB,KAAK,4BAAY,CAAC,IAAI,CAAC;YACvB,KAAK,4BAAY,CAAC,GAAG,CAAC;YACtB,KAAK,4BAAY,CAAC,IAAI;gBACpB,OAAO,IAAA,kCAAkB,EAAC,IAAmB,CAAC,CAAC;SAClD;IACH,CAAC,CAAC;IAEM,MAAM,CAAC,oBAAoB,GAAG,CACpC,YAA0B,EACZ,EAAE;QAChB,QAAQ,YAAY,EAAE;YACpB,KAAK,4BAAY,CAAC,IAAI;gBACpB,OAAO,MAAM,CAAC;YAChB,KAAK,4BAAY,CAAC,IAAI,CAAC;YACvB,KAAK,4BAAY,CAAC,GAAG,CAAC;YACtB,KAAK,4BAAY,CAAC,IAAI;gBACpB,OAAO,aAAa,CAAC;SACxB;IACH,CAAC,CAAC;IAEM,qBAAqB,GAAG,KAAK,EACnC,IAAY,EACqB,EAAE;QACnC,IAAI;YACF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtD,OAAO,UAAU,CAAC;SACnB;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;IACH,CAAC,CAAC;IAEF,sBAAsB,GAAG,KAAK,EAC5B,qBAA6B,EACV,EAAE;QACrB,MAAM,sBAAsB,GAAG,IAAA,yCAAyB,EACtD,qBAAqB,CACtB,CAAC;QAEF,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YACxE,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,4BAAY,CAAC,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,4BAAY,CAAC,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,kBAAkB;gBACrB,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,4BAAY,CAAC,GAAG,CAAC,CAAC;gBACtE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC;YAC9B,CAAC,IAAI,CAAC,kBAAkB;gBACtB,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,4BAAY,CAAC,IAAI,CAAC,CAAC;gBACvE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC;SAC/B,CAAC,CAAC;QACH,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QACD,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QACD,IAAI,IAAI,CAAC,kBAAkB,IAAI,SAAS,IAAI,IAAI,EAAE;YAChD,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,UAAU,IAAI,IAAI,EAAE;YAClD,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QAED,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,UAAoB,CAAC;YACtC,IAAI,EAAE,UAAoB;YAC1B,IAAI,EAAE,UAAgC;YACtC,GAAG,EAAE,SAA+B;SACrC,CAAC;IACJ,CAAC,CAAC;;AAhLJ,gDAiLC","sourcesContent":["import {\n  Artifact,\n  ArtifactName,\n  isDefined,\n  promiseTimeout,\n} from '@railgun-community/shared-models';\nimport axios, { ResponseType } from 'axios';\nimport {\n  artifactDownloadsDir,\n  artifactDownloadsPath,\n  decompressArtifact,\n  getArtifactDownloadsPaths,\n  getArtifactUrl,\n} from './artifact-util';\nimport { ArtifactStore } from './artifact-store';\nimport { reportAndSanitizeError } from '../../utils/error';\nimport { sendMessage } from '../../utils/logger';\nimport { validateArtifactDownload } from './artifact-hash';\n\nexport class ArtifactDownloader {\n  private artifactStore: ArtifactStore;\n  private useNativeArtifacts: boolean;\n\n  constructor(artifactStore: ArtifactStore, useNativeArtifacts: boolean) {\n    this.artifactStore = artifactStore;\n    this.useNativeArtifacts = useNativeArtifacts;\n  }\n\n  downloadArtifacts = async (artifactVariantString: string): Promise<void> => {\n    sendMessage(`Downloading artifacts: ${artifactVariantString}`);\n\n    const [vkeyPath, zkeyPath, wasmOrDatPath] = await promiseTimeout(\n      Promise.all([\n        this.downloadArtifact(ArtifactName.VKEY, artifactVariantString),\n        this.downloadArtifact(ArtifactName.ZKEY, artifactVariantString),\n        this.downloadArtifact(\n          this.useNativeArtifacts ? ArtifactName.DAT : ArtifactName.WASM,\n          artifactVariantString,\n        ),\n      ]),\n      45000,\n      new Error(\n        `Timed out downloading artifact files for ${artifactVariantString} circuit. Please try again.`,\n      ),\n    );\n\n    if (!isDefined(vkeyPath)) {\n      throw new Error('Could not download vkey artifact.');\n    }\n    if (!isDefined(zkeyPath)) {\n      throw new Error('Could not download zkey artifact.');\n    }\n    if (!isDefined(wasmOrDatPath)) {\n      throw new Error(\n        this.useNativeArtifacts\n          ? 'Could not download dat artifact.'\n          : 'Could not download wasm artifact.',\n      );\n    }\n  };\n\n  private downloadArtifact = async (\n    artifactName: ArtifactName,\n    artifactVariantString: string,\n  ): Promise<string | undefined> => {\n    const path = artifactDownloadsPath(artifactName, artifactVariantString);\n    if (await this.artifactStore.exists(path)) {\n      return path;\n    }\n    try {\n      const url = getArtifactUrl(artifactName, artifactVariantString);\n\n      const { data } = await axios.get<ArrayBuffer | Buffer | object>(url, {\n        method: 'GET',\n        responseType: ArtifactDownloader.artifactResponseType(artifactName),\n      });\n\n      // NodeJS downloads as Buffer.\n      // Browser downloads as ArrayBuffer.\n      // Both will validate with the same hash.\n\n      let dataFormatted: ArrayBuffer | Buffer | string;\n\n      if (data instanceof ArrayBuffer || data instanceof Buffer) {\n        dataFormatted = data;\n      } else if (typeof data === 'object') {\n        dataFormatted = JSON.stringify(data);\n      } else if (typeof data === 'string') {\n        dataFormatted = JSON.stringify(JSON.parse(data));\n      } else {\n        throw new Error('Unexpected response data type');\n      }\n\n      const decompressedData = ArtifactDownloader.getArtifactData(\n        dataFormatted,\n        artifactName,\n      );\n\n      const isValid = await validateArtifactDownload(\n        decompressedData,\n        artifactName,\n        artifactVariantString,\n      );\n      if (isValid) {\n        await this.artifactStore.store(\n          artifactDownloadsDir(artifactVariantString),\n          path,\n          decompressedData,\n        );\n      } else {\n        throw new Error(\n          `Invalid hash for artifact download: ${artifactName} for ${artifactVariantString}.`,\n        );\n      }\n\n      return path;\n    } catch (err) {\n      throw reportAndSanitizeError(this.downloadArtifact.name, err);\n    }\n  };\n\n  private static getArtifactData = (\n    data: string | ArrayBuffer,\n    artifactName: ArtifactName,\n  ): string | Uint8Array => {\n    switch (artifactName) {\n      case ArtifactName.VKEY:\n        return data as string;\n      case ArtifactName.ZKEY:\n      case ArtifactName.DAT:\n      case ArtifactName.WASM:\n        return decompressArtifact(data as ArrayBuffer);\n    }\n  };\n\n  private static artifactResponseType = (\n    artifactName: ArtifactName,\n  ): ResponseType => {\n    switch (artifactName) {\n      case ArtifactName.VKEY:\n        return 'text';\n      case ArtifactName.ZKEY:\n      case ArtifactName.DAT:\n      case ArtifactName.WASM:\n        return 'arraybuffer';\n    }\n  };\n\n  private getDownloadedArtifact = async (\n    path: string,\n  ): Promise<string | Buffer | null> => {\n    try {\n      const storedItem = await this.artifactStore.get(path);\n      return storedItem;\n    } catch (err) {\n      return null;\n    }\n  };\n\n  getDownloadedArtifacts = async (\n    artifactVariantString: string,\n  ): Promise<Artifact> => {\n    const artifactDownloadsPaths = getArtifactDownloadsPaths(\n      artifactVariantString,\n    );\n\n    const [vkeyString, zkeyBuffer, datBuffer, wasmBuffer] = await Promise.all([\n      this.getDownloadedArtifact(artifactDownloadsPaths[ArtifactName.VKEY]),\n      this.getDownloadedArtifact(artifactDownloadsPaths[ArtifactName.ZKEY]),\n      this.useNativeArtifacts\n        ? this.getDownloadedArtifact(artifactDownloadsPaths[ArtifactName.DAT])\n        : Promise.resolve(undefined),\n      !this.useNativeArtifacts\n        ? this.getDownloadedArtifact(artifactDownloadsPaths[ArtifactName.WASM])\n        : Promise.resolve(undefined),\n    ]);\n    if (vkeyString == null) {\n      throw new Error('Could not retrieve vkey artifact.');\n    }\n    if (zkeyBuffer == null) {\n      throw new Error('Could not retrieve zkey artifact.');\n    }\n    if (this.useNativeArtifacts && datBuffer == null) {\n      throw new Error('Could not retrieve dat artifact.');\n    }\n    if (!this.useNativeArtifacts && wasmBuffer == null) {\n      throw new Error('Could not retrieve wasm artifact.');\n    }\n\n    return {\n      vkey: JSON.parse(vkeyString as string),\n      zkey: zkeyBuffer as Buffer,\n      wasm: wasmBuffer as Buffer | undefined,\n      dat: datBuffer as Buffer | undefined,\n    };\n  };\n}\n"]}