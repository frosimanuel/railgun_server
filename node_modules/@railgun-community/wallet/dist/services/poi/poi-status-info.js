"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSpendableReceivedChainTxids = exports.getChainTxidsStillPendingSpentPOIs = exports.refreshSpentPOIsForWallet = exports.refreshReceivePOIsForWallet = exports.generatePOIsForWallet = exports.generatePOIsForWalletAndRailgunTxid = exports.getTXOsSpentPOIStatusInfoForWallet = exports.getTXOsReceivedPOIStatusInfoForWallet = void 0;
const shared_models_1 = require("@railgun-community/shared-models");
const wallets_1 = require("../railgun/wallets/wallets");
const getTXOsReceivedPOIStatusInfoForWallet = (txidVersion, networkName, walletID) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    return wallet.getTXOsReceivedPOIStatusInfo(txidVersion, chain);
};
exports.getTXOsReceivedPOIStatusInfoForWallet = getTXOsReceivedPOIStatusInfoForWallet;
const getTXOsSpentPOIStatusInfoForWallet = (txidVersion, networkName, walletID) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    return wallet.getTXOsSpentPOIStatusInfo(txidVersion, chain);
};
exports.getTXOsSpentPOIStatusInfoForWallet = getTXOsSpentPOIStatusInfoForWallet;
const generatePOIsForWalletAndRailgunTxid = async (txidVersion, networkName, walletID, railgunTxid) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    await wallet.generatePOIsForRailgunTxid(chain, txidVersion, railgunTxid);
};
exports.generatePOIsForWalletAndRailgunTxid = generatePOIsForWalletAndRailgunTxid;
const generatePOIsForWallet = async (networkName, walletID) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    await wallet.refreshPOIsForAllTXIDVersions(chain);
};
exports.generatePOIsForWallet = generatePOIsForWallet;
const refreshReceivePOIsForWallet = (txidVersion, networkName, walletID) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    return wallet.refreshReceivePOIsAllTXOs(txidVersion, chain);
};
exports.refreshReceivePOIsForWallet = refreshReceivePOIsForWallet;
const refreshSpentPOIsForWallet = (txidVersion, networkName, walletID, railgunTxid) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    return wallet.refreshSpentPOIsAllSentCommitmentsAndUnshieldEvents(txidVersion, chain, railgunTxid);
};
exports.refreshSpentPOIsForWallet = refreshSpentPOIsForWallet;
const getChainTxidsStillPendingSpentPOIs = (txidVersion, networkName, walletID) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    return wallet.getChainTxidsStillPendingSpentPOIs(txidVersion, chain);
};
exports.getChainTxidsStillPendingSpentPOIs = getChainTxidsStillPendingSpentPOIs;
const getSpendableReceivedChainTxids = (txidVersion, networkName, walletID) => {
    const chain = shared_models_1.NETWORK_CONFIG[networkName].chain;
    const wallet = (0, wallets_1.walletForID)(walletID);
    return wallet.getSpendableReceivedChainTxids(txidVersion, chain);
};
exports.getSpendableReceivedChainTxids = getSpendableReceivedChainTxids;
//# sourceMappingURL=poi-status-info.js.map