{"version":3,"file":"poi-status-info.js","sourceRoot":"","sources":["../../../src/services/poi/poi-status-info.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  TXOsReceivedPOIStatusInfo,\n  TXOsSpentPOIStatusInfo,\n} from '@railgun-community/engine';\nimport {\n  NETWORK_CONFIG,\n  NetworkName,\n  TXIDVersion,\n} from '@railgun-community/shared-models';\nimport { walletForID } from '../railgun/wallets/wallets';\n\nexport const getTXOsReceivedPOIStatusInfoForWallet = (\n  txidVersion: TXIDVersion,\n  networkName: NetworkName,\n  walletID: string,\n): Promise<TXOsReceivedPOIStatusInfo[]> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  return wallet.getTXOsReceivedPOIStatusInfo(txidVersion, chain);\n};\n\nexport const getTXOsSpentPOIStatusInfoForWallet = (\n  txidVersion: TXIDVersion,\n  networkName: NetworkName,\n  walletID: string,\n): Promise<TXOsSpentPOIStatusInfo[]> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  return wallet.getTXOsSpentPOIStatusInfo(txidVersion, chain);\n};\n\nexport const generatePOIsForWalletAndRailgunTxid = async (\n  txidVersion: TXIDVersion,\n  networkName: NetworkName,\n  walletID: string,\n  railgunTxid: string,\n): Promise<void> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  await wallet.generatePOIsForRailgunTxid(chain, txidVersion, railgunTxid);\n};\n\nexport const generatePOIsForWallet = async (\n  networkName: NetworkName,\n  walletID: string,\n): Promise<void> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  await wallet.refreshPOIsForAllTXIDVersions(chain);\n};\n\nexport const refreshReceivePOIsForWallet = (\n  txidVersion: TXIDVersion,\n  networkName: NetworkName,\n  walletID: string,\n): Promise<void> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  return wallet.refreshReceivePOIsAllTXOs(txidVersion, chain);\n};\n\nexport const refreshSpentPOIsForWallet = (\n  txidVersion: TXIDVersion,\n  networkName: NetworkName,\n  walletID: string,\n  railgunTxid?: string,\n): Promise<void> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  return wallet.refreshSpentPOIsAllSentCommitmentsAndUnshieldEvents(\n    txidVersion,\n    chain,\n    railgunTxid,\n  );\n};\n\nexport const getChainTxidsStillPendingSpentPOIs = (\n  txidVersion: TXIDVersion,\n  networkName: NetworkName,\n  walletID: string,\n): Promise<string[]> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  return wallet.getChainTxidsStillPendingSpentPOIs(txidVersion, chain);\n};\n\nexport const getSpendableReceivedChainTxids = (\n  txidVersion: TXIDVersion,\n  networkName: NetworkName,\n  walletID: string,\n): Promise<string[]> => {\n  const chain = NETWORK_CONFIG[networkName].chain;\n  const wallet = walletForID(walletID);\n  return wallet.getSpendableReceivedChainTxids(txidVersion, chain);\n};\n"]}