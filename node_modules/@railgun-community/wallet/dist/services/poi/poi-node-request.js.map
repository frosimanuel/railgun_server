{"version":3,"file":"poi-node-request.js","sourceRoot":"","sources":["../../../src/services/poi/poi-node-request.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  TransactProofData,\n  ValidateTxidMerklerootParams,\n  SubmitTransactProofParams,\n  GetMerkleProofsParams,\n  MerkleProof,\n  Chain,\n  GetPOIsPerListParams,\n  BlindedCommitmentData,\n  POIsPerListMap,\n  ValidatedRailgunTxidStatus,\n  TXIDVersion,\n  GetLatestValidatedRailgunTxidParams,\n  SubmitLegacyTransactProofParams,\n  ValidatePOIMerklerootsParams,\n  SingleCommitmentProofsData,\n  SubmitSingleCommitmentProofsParams,\n  delay,\n  POIJSONRPCMethod,\n  promiseTimeout,\n} from '@railgun-community/shared-models';\nimport axios, { AxiosError } from 'axios';\nimport { sendErrorMessage } from '../../utils';\nimport { LegacyTransactProofData } from '@railgun-community/engine';\nimport { JsonRpcError, JsonRpcPayload, JsonRpcResult } from 'ethers';\n\nexport class POINodeRequest {\n  private nodeURLs: string[];\n\n  constructor(nodeURLs: string[]) {\n    this.nodeURLs = nodeURLs;\n  }\n\n  private currentNodeURLIndex = 0;\n\n  private getNextNodeURL = () => {\n    this.currentNodeURLIndex =\n      (this.currentNodeURLIndex + 1) % this.nodeURLs.length;\n    return this.getNodeURL(this.currentNodeURLIndex);\n  };\n\n  private getNodeURL = (nodeUrlAttemptIndex: number): string => {\n    return `${this.nodeURLs[nodeUrlAttemptIndex]}`;\n  };\n\n  private static async jsonRpcRequest<\n    Params extends any[] | Record<string, any>,\n    ResponseData,\n  >(\n    url: string,\n    method: POIJSONRPCMethod,\n    params: Params,\n  ): Promise<ResponseData> {\n    const payload: JsonRpcPayload = {\n      jsonrpc: '2.0',\n      method,\n      params,\n      id: Date.now(),\n    };\n\n    try {\n      const { data }: { data: JsonRpcResult | JsonRpcError } = await axios.post(\n        url,\n        payload,\n      );\n\n      // Check if the response contains an error\n      if ('error' in data) {\n        throw new Error(data.error.message);\n      }\n\n      // Assume the result will always be in the expected ResponseData format\n      return data.result as ResponseData;\n    } catch (cause) {\n      if (!(cause instanceof AxiosError)) {\n        throw new Error('Non-error thrown in axios post request.', { cause });\n      }\n      const err = new Error(`POI request error ${url}`, { cause });\n      sendErrorMessage(err);\n      throw err;\n    }\n  }\n\n  private async attemptRequestWithFallbacks<\n    Params extends any[] | Record<string, any>,\n    ResponseData,\n  >(\n    method: POIJSONRPCMethod,\n    params: Params,\n    nodeUrlAttemptIndex = 0,\n    finalAttempt = false,\n  ): Promise<ResponseData> {\n    try {\n      const url = this.getNodeURL(nodeUrlAttemptIndex);\n      const res = await promiseTimeout(\n        POINodeRequest.jsonRpcRequest<Params, ResponseData>(\n          url,\n          method,\n          params,\n        ),\n        60_000,\n      );\n      return res;\n    } catch (err) {\n      if (finalAttempt) {\n        throw err;\n      }\n      // If nodeUrlAttemptIndex is already at the last index, try one final time with the priority 0 nodeUrl\n      if (nodeUrlAttemptIndex === this.nodeURLs.length - 1) {\n        return this.attemptRequestWithFallbacks(\n          method,\n          params,\n          0, // nodeUrlAttemptIndex\n          true, // finalAttempt\n        );\n      }\n\n      // Retry with next priority node URL.\n      return this.attemptRequestWithFallbacks(\n        method,\n        params,\n        nodeUrlAttemptIndex + 1, // nodeUrlAttemptIndex\n        false, // finalAttempt\n      );\n    }\n  }\n\n  validateRailgunTxidMerkleroot = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    tree: number,\n    index: number,\n    merkleroot: string,\n  ): Promise<boolean> => {\n    const method = POIJSONRPCMethod.ValidateTXIDMerkleroot;\n    const isValid = await this.attemptRequestWithFallbacks<\n      ValidateTxidMerklerootParams,\n      boolean\n    >(method, {\n      chainType: chain.type.toString(),\n      chainID: chain.id.toString(),\n      txidVersion,\n      tree,\n      index,\n      merkleroot,\n    });\n    return isValid;\n  };\n\n  getLatestValidatedRailgunTxid = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n  ): Promise<ValidatedRailgunTxidStatus> => {\n    const method = POIJSONRPCMethod.ValidatedTXID;\n    const status = await this.attemptRequestWithFallbacks<\n      GetLatestValidatedRailgunTxidParams,\n      ValidatedRailgunTxidStatus\n    >(method, {\n      chainType: chain.type.toString(),\n      chainID: chain.id.toString(),\n      txidVersion,\n    });\n    return status;\n  };\n\n  validatePOIMerkleroots = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    poiMerkleroots: string[],\n    retryCount = 0,\n  ): Promise<boolean> => {\n    try {\n      const method = POIJSONRPCMethod.ValidatePOIMerkleroots;\n      const validated = await this.attemptRequestWithFallbacks<\n        ValidatePOIMerklerootsParams,\n        boolean\n      >(method, {\n        chainType: chain.type.toString(),\n        chainID: chain.id.toString(),\n        txidVersion,\n        listKey,\n        poiMerkleroots,\n      });\n      return validated;\n    } catch (cause) {\n      if (retryCount < 3) {\n        // Delay 2.5s and try again.\n        await delay(2500);\n        return this.validatePOIMerkleroots(\n          txidVersion,\n          chain,\n          listKey,\n          poiMerkleroots,\n          retryCount + 1,\n        );\n      }\n      throw new Error('Failed to validate POI merkleroots.', { cause });\n    }\n  };\n\n  getPOIsPerList = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKeys: string[],\n    blindedCommitmentDatas: BlindedCommitmentData[],\n  ): Promise<POIsPerListMap> => {\n    const method = POIJSONRPCMethod.POIsPerList;\n    const poiStatusListMap = await this.attemptRequestWithFallbacks<\n      GetPOIsPerListParams,\n      POIsPerListMap\n    >(method, {\n      chainType: chain.type.toString(),\n      chainID: chain.id.toString(),\n      txidVersion,\n      listKeys,\n      blindedCommitmentDatas,\n    });\n    return poiStatusListMap;\n  };\n\n  getPOIMerkleProofs = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    blindedCommitments: string[],\n  ): Promise<MerkleProof[]> => {\n    const method = POIJSONRPCMethod.MerkleProofs;\n\n    const merkleProofs = await this.attemptRequestWithFallbacks<\n      GetMerkleProofsParams,\n      MerkleProof[]\n    >(method, {\n      chainType: chain.type.toString(),\n      chainID: chain.id.toString(),\n      txidVersion,\n      listKey,\n      blindedCommitments,\n    });\n    return merkleProofs;\n  };\n\n  submitPOI = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    transactProofData: TransactProofData,\n  ) => {\n    const method = POIJSONRPCMethod.SubmitTransactProof;\n\n    await this.attemptRequestWithFallbacks<SubmitTransactProofParams, void>(\n      method,\n      {\n        chainType: chain.type.toString(),\n        chainID: chain.id.toString(),\n        txidVersion,\n        listKey,\n        transactProofData,\n      },\n    );\n  };\n\n  submitLegacyTransactProofs = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKeys: string[],\n    legacyTransactProofDatas: LegacyTransactProofData[],\n  ) => {\n    const method = POIJSONRPCMethod.SubmitLegacyTransactProofs;\n\n    await this.attemptRequestWithFallbacks<\n      SubmitLegacyTransactProofParams,\n      void\n    >(method, {\n      chainType: chain.type.toString(),\n      chainID: chain.id.toString(),\n      txidVersion,\n      listKeys,\n      legacyTransactProofDatas,\n    });\n  };\n\n  submitSingleCommitmentProof = async (\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    singleCommitmentProofsData: SingleCommitmentProofsData,\n  ) => {\n    const method = POIJSONRPCMethod.SubmitSingleCommitmentProofs;\n\n    await this.attemptRequestWithFallbacks<\n      SubmitSingleCommitmentProofsParams,\n      void\n    >(method, {\n      chainType: chain.type.toString(),\n      chainID: chain.id.toString(),\n      txidVersion,\n      singleCommitmentProofsData,\n    });\n  };\n}\n"]}