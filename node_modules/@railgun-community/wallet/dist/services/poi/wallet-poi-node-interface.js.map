{"version":3,"file":"wallet-poi-node-interface.js","sourceRoot":"","sources":["../../../src/services/poi/wallet-poi-node-interface.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Chain,\n  BlindedCommitmentData,\n  POIsPerList,\n  TXOPOIListStatus,\n  POINodeInterface,\n  LegacyTransactProofData,\n} from '@railgun-community/engine';\nimport { POINodeRequest } from './poi-node-request';\nimport {\n  MerkleProof,\n  POIStatus,\n  SnarkProof,\n  TXIDVersion,\n  TransactProofData,\n  delay,\n  isDefined,\n  networkForChain,\n  type POIsPerListMap,\n} from '@railgun-community/shared-models';\nimport { POIRequired } from './poi-required';\n\nexport type BatchListUpdateEvent = {\n  current: number;\n  total: number;\n  percent: number;\n  status: string;\n};\n\nexport class WalletPOINodeInterface extends POINodeInterface {\n  private poiNodeRequest: POINodeRequest;\n  private batchSize = 20;\n\n  private static isPaused = false;\n\n  private static isPausedMap: { [type: number]: { [id: number]: boolean } } =\n    {};\n\n  static isPausedForChain(chain: Chain): boolean {\n    return WalletPOINodeInterface.isPausedMap[chain.type]?.[chain.id] ?? false;\n  }\n\n  static listBatchCallback:\n    | ((batchData: BatchListUpdateEvent) => void)\n    | undefined;\n\n  constructor(poiNodeURLs: string[]) {\n    super();\n    this.poiNodeRequest = new POINodeRequest(poiNodeURLs);\n  }\n\n  private static poiStatusToTXOPOIStatus = (\n    poiStatus: POIStatus,\n  ): TXOPOIListStatus => {\n    switch (poiStatus) {\n      case POIStatus.Valid:\n        return TXOPOIListStatus.Valid;\n      case POIStatus.ShieldBlocked:\n        return TXOPOIListStatus.ShieldBlocked;\n      case POIStatus.ProofSubmitted:\n        return TXOPOIListStatus.ProofSubmitted;\n      case POIStatus.Missing:\n        return TXOPOIListStatus.Missing;\n    }\n  };\n\n  private static getPOISettings(chain: Chain) {\n    const network = networkForChain(chain);\n    if (!network) {\n      throw new Error(`No network found`);\n    }\n    const networkPOISettings = network.poi;\n    if (!networkPOISettings) {\n      throw new Error(`No POI settings found`);\n    }\n    return networkPOISettings;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isActive(chain: Chain): boolean {\n    return WalletPOINodeInterface.getPOISettings(chain) != null;\n  }\n\n  static pause(chain: Chain): void {\n    WalletPOINodeInterface.isPausedMap[chain.type] ??= {};\n    WalletPOINodeInterface.isPausedMap[chain.type][chain.id] = true;\n  }\n\n  static unpause(chain: Chain): void {\n    // would be good practice to unpause when loading providers, or resuming polling providers.\n    WalletPOINodeInterface.isPausedMap[chain.type] ??= {};\n    WalletPOINodeInterface.isPausedMap[chain.type][chain.id] = false;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async isRequired(chain: Chain): Promise<boolean> {\n    const network = networkForChain(chain);\n    if (!network) {\n      throw new Error(`No network for chain ${chain.type}:${chain.id}`);\n    }\n    return POIRequired.isRequiredForNetwork(network.name);\n  }\n\n  static setListBatchCallback = (\n    callback: (batchData: BatchListUpdateEvent) => void,\n  ): void => {\n    WalletPOINodeInterface.listBatchCallback = callback;\n  };\n\n  static clearListBatchStatus = (): void => {\n    if (isDefined(WalletPOINodeInterface.listBatchCallback)) {\n      WalletPOINodeInterface.listBatchCallback({\n        current: 0,\n        total: 0,\n        percent: 0,\n        status: '',\n      });\n    }\n  };\n\n  static emitListBatchCallback = (\n    current: number,\n    total: number,\n    message: string,\n  ) => {\n    if (isDefined(WalletPOINodeInterface.listBatchCallback)) {\n      const percent = (current / total) * 100;\n      const status = `${message} PPOI Batch (${current} of ${total}) ${percent.toFixed(\n        2,\n      )}%`;\n      WalletPOINodeInterface.listBatchCallback({\n        current,\n        total,\n        percent,\n        status,\n      });\n    }\n  };\n\n  async getPOIsPerList(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKeys: string[],\n    blindedCommitmentDatas: BlindedCommitmentData[],\n  ): Promise<{ [blindedCommitment: string]: POIsPerList }> {\n    const poisPerList: POIsPerListMap = {};\n    for (let i = 0; i < blindedCommitmentDatas.length; i += this.batchSize) {\n      if (WalletPOINodeInterface.isPausedForChain(chain)) {\n        WalletPOINodeInterface.clearListBatchStatus();\n        continue;\n      }\n      const batch = blindedCommitmentDatas.slice(i, i + this.batchSize);\n      const type = batch[0].type;\n      WalletPOINodeInterface.emitListBatchCallback(\n        i,\n        blindedCommitmentDatas.length,\n        `Verifying ${type}'s`,\n      );\n      const batchPoisPerList: POIsPerListMap =\n        // eslint-disable-next-line no-await-in-loop\n        await this.poiNodeRequest\n          .getPOIsPerList(txidVersion, chain, listKeys, batch)\n          .catch(() => {\n            return {};\n          });\n      WalletPOINodeInterface.emitListBatchCallback(\n        i + batch.length,\n        blindedCommitmentDatas.length,\n        `Received results for ${type}'s now Analyzing`,\n      );\n      // eslint-disable-next-line no-await-in-loop\n      await delay(100);\n      for (const blindedCommitment of Object.keys(batchPoisPerList)) {\n        poisPerList[blindedCommitment] = batchPoisPerList[blindedCommitment];\n      }\n    }\n\n    const poisPerListConverted: { [blindedCommitment: string]: POIsPerList } =\n      {};\n    for (const blindedCommitment of Object.keys(poisPerList)) {\n      poisPerListConverted[blindedCommitment] = {};\n      for (const listKey of Object.keys(poisPerList[blindedCommitment])) {\n        const poiStatus = poisPerList[blindedCommitment][listKey];\n        poisPerListConverted[blindedCommitment][listKey] =\n          WalletPOINodeInterface.poiStatusToTXOPOIStatus(poiStatus);\n      }\n    }\n    return poisPerListConverted;\n  }\n\n  async getPOIMerkleProofs(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    blindedCommitments: string[],\n  ): Promise<MerkleProof[]> {\n    return this.poiNodeRequest.getPOIMerkleProofs(\n      txidVersion,\n      chain,\n      listKey,\n      blindedCommitments,\n    );\n  }\n\n  async validatePOIMerkleroots(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    poiMerkleroots: string[],\n  ): Promise<boolean> {\n    return this.poiNodeRequest.validatePOIMerkleroots(\n      txidVersion,\n      chain,\n      listKey,\n      poiMerkleroots,\n    );\n  }\n\n  async submitPOI(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    snarkProof: SnarkProof,\n    poiMerkleroots: string[],\n    txidMerkleroot: string,\n    txidMerklerootIndex: number,\n    blindedCommitmentsOut: string[],\n    railgunTxidIfHasUnshield: string,\n  ): Promise<void> {\n    const transactProofData: TransactProofData = {\n      snarkProof,\n      poiMerkleroots,\n      txidMerkleroot,\n      txidMerklerootIndex,\n      blindedCommitmentsOut,\n      railgunTxidIfHasUnshield,\n    };\n    return this.poiNodeRequest.submitPOI(\n      txidVersion,\n      chain,\n      listKey,\n      transactProofData,\n    );\n  }\n\n  async submitLegacyTransactProofs(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKeys: string[],\n    legacyTransactProofDatas: LegacyTransactProofData[],\n  ): Promise<void> {\n    for (let i = 0; i < legacyTransactProofDatas.length; i += this.batchSize) {\n      if (WalletPOINodeInterface.isPausedForChain(chain)) {\n        continue;\n      }\n      const batch = legacyTransactProofDatas.slice(i, i + this.batchSize);\n      WalletPOINodeInterface.emitListBatchCallback(\n        i,\n        legacyTransactProofDatas.length,\n        'Submitting Legacy Transact Proofs',\n      );\n      // eslint-disable-next-line no-await-in-loop\n      await this.poiNodeRequest\n        .submitLegacyTransactProofs(txidVersion, chain, listKeys, batch)\n        .catch(() => {\n          return undefined;\n        });\n      WalletPOINodeInterface.emitListBatchCallback(\n        i + batch.length,\n        legacyTransactProofDatas.length,\n        'Submitted Legacy Transact Proofs',\n      );\n      // eslint-disable-next-line no-await-in-loop\n      await delay(100);\n    }\n  }\n}\n"]}