{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../src/services/railgun/core/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import { ArtifactGetter, PublicInputsRailgun } from '@railgun-community/engine';\nimport {\n  Artifact,\n  assertArtifactExists,\n  isDefined,\n} from '@railgun-community/shared-models';\nimport { ArtifactDownloader } from '../../artifacts/artifact-downloader';\nimport { ArtifactStore } from '../../artifacts/artifact-store';\nimport {\n  getArtifactVariantString,\n  getArtifactVariantStringPOI,\n} from '../../artifacts/artifact-util';\n\nlet artifactStore: ArtifactStore;\nlet useNativeArtifacts: boolean;\n\nexport const artifactCache: MapType<Artifact> = {};\n\nexport const setArtifactStore = (store: ArtifactStore) => {\n  artifactStore = store;\n};\nexport const setUseNativeArtifacts = (useNative: boolean) => {\n  useNativeArtifacts = useNative;\n};\n\nexport const getArtifacts = async (\n  inputs: PublicInputsRailgun,\n): Promise<Artifact> => {\n  const nullifiers = inputs.nullifiers.length;\n  const commitments = inputs.commitmentsOut.length;\n  assertArtifactExists(nullifiers, commitments);\n\n  if (useNativeArtifacts) {\n    if (commitments > 3) {\n      // native-prover-small only has INPUTS (1-10) and OUTPUTS (1-3)\n      throw new Error(\n        `Native artifacts (small) only support up to 3 circuit outputs. Cannot get artifacts for circuit: ${nullifiers}x${commitments}.`,\n      );\n    }\n  }\n\n  const artifactVariantString = getArtifactVariantString(\n    nullifiers,\n    commitments,\n  );\n\n  return downloadAndCacheArtifact(artifactVariantString);\n};\n\nconst downloadAndCacheArtifact = async (\n  artifactVariantString: string,\n): Promise<Artifact> => {\n  // Use artifact in cache if available.\n  const cachedArtifact = artifactCache[artifactVariantString];\n  if (isDefined(cachedArtifact)) {\n    return cachedArtifact;\n  }\n\n  const downloader = new ArtifactDownloader(artifactStore, useNativeArtifacts);\n\n  // Try to pull previously downloaded from storage.\n  try {\n    const downloadedArtifacts = await downloader.getDownloadedArtifacts(\n      artifactVariantString,\n    );\n    artifactCache[artifactVariantString] = downloadedArtifacts;\n    return downloadedArtifacts;\n  } catch (err) {\n    // No op. Artifacts not yet downloaded.\n  }\n\n  // Download anew. Throws upon error.\n  await downloader.downloadArtifacts(artifactVariantString);\n  const downloadedArtifacts = await downloader.getDownloadedArtifacts(\n    artifactVariantString,\n  );\n  artifactCache[artifactVariantString] = downloadedArtifacts;\n  return downloadedArtifacts;\n};\n\nconst getArtifactsPOI = (maxInputs: number, maxOutputs: number) => {\n  const artifactVariant = getArtifactVariantStringPOI(maxInputs, maxOutputs);\n  return downloadAndCacheArtifact(artifactVariant);\n};\n\nexport const artifactGetterDownloadJustInTime: ArtifactGetter = {\n  assertArtifactExists,\n  getArtifacts,\n  getArtifactsPOI,\n};\n\nexport const overrideArtifact = (\n  artifactVariant: string,\n  artifact: Artifact,\n) => {\n  artifactCache[artifactVariant] = artifact;\n};\n\nexport const clearArtifactCache = () => {\n  for (const key in artifactCache) {\n    if (isDefined(artifactCache[key])) {\n      delete artifactCache[key];\n    }\n  }\n};\n"]}