{"version":3,"file":"load-provider.js","sourceRoot":"","sources":["../../../../src/services/railgun/core/load-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Chain,\n  FallbackProviderJsonConfig,\n  LoadProviderResponse,\n  NETWORK_CONFIG,\n  NetworkName,\n  TXIDVersion,\n  createFallbackProviderFromJsonConfig,\n  isDefined,\n} from '@railgun-community/shared-models';\nimport { sendMessage } from '../../../utils';\nimport { reportAndSanitizeError } from '../../../utils/error';\nimport { WalletPOI } from '../../poi/wallet-poi';\nimport { getEngine } from './engine';\nimport {\n  PollingJsonRpcProvider,\n  RailgunVersionedSmartContracts,\n  createPollingJsonRpcProviderForListeners,\n} from '@railgun-community/engine';\nimport { FallbackProvider } from 'ethers'\nimport {\n  fallbackProviderMap,\n  pollingProviderMap,\n  setFallbackProviderForNetwork,\n  setPollingProviderForNetwork,\n} from './providers';\nimport { WalletPOINodeInterface } from '../../poi/wallet-poi-node-interface';\n\nconst createFallbackProviderForNetwork = async (\n  networkName: NetworkName,\n  fallbackProviderJsonConfig: FallbackProviderJsonConfig,\n): Promise<FallbackProvider> => {\n  const existingProvider = fallbackProviderMap[networkName];\n  if (existingProvider) {\n    return existingProvider;\n  }\n  const fallbackProvider = createFallbackProviderFromJsonConfig(\n    fallbackProviderJsonConfig,\n  );\n  setFallbackProviderForNetwork(networkName, fallbackProvider);\n  return fallbackProvider;\n};\n\nconst createPollingProviderForNetwork = async (\n  networkName: NetworkName,\n  fallbackProvider: FallbackProvider,\n  pollingInterval: number,\n): Promise<PollingJsonRpcProvider> => {\n  const existingProvider = pollingProviderMap[networkName];\n  if (existingProvider) {\n    return existingProvider;\n  }\n  const network = NETWORK_CONFIG[networkName];\n  if (!isDefined(network)) {\n    throw new Error('No network found');\n  }\n  const pollingProvider = await createPollingJsonRpcProviderForListeners(\n    fallbackProvider,\n    network.chain.id,\n    pollingInterval,\n  );\n  setPollingProviderForNetwork(networkName, pollingProvider);\n  return pollingProvider;\n};\n\nconst loadProviderForNetwork = async (\n  chain: Chain,\n  networkName: NetworkName,\n  fallbackProviderJsonConfig: FallbackProviderJsonConfig,\n  pollingInterval: number,\n) => {\n  sendMessage(`Load provider for network: ${networkName}`);\n\n  const fallbackProvider = await createFallbackProviderForNetwork(\n    networkName,\n    fallbackProviderJsonConfig,\n  );\n  const pollingProvider = await createPollingProviderForNetwork(\n    networkName,\n    fallbackProvider,\n    pollingInterval\n  );\n\n  const network = NETWORK_CONFIG[networkName];\n  const {\n    proxyContract,\n    relayAdaptContract,\n    poseidonMerkleAccumulatorV3Contract,\n    poseidonMerkleVerifierV3Contract,\n    tokenVaultV3Contract,\n    deploymentBlockPoseidonMerkleAccumulatorV3,\n    deploymentBlock,\n    publicName,\n    poi,\n    supportsV3,\n  } = network;\n  if (!proxyContract) {\n    throw new Error(`Could not find Proxy contract for network: ${publicName}`);\n  }\n  if (!relayAdaptContract) {\n    throw new Error(\n      `Could not find Relay Adapt contract for network: ${publicName}`,\n    );\n  }\n\n  const engine = getEngine();\n  if (!engine.isPOINode && isDefined(poi) && !WalletPOI.started) {\n    throw new Error(\n      'This network requires Proof Of Innocence. Pass \"poiNodeURL\" to startRailgunEngine to initialize POI before loading this provider.',\n    );\n  }\n\n  const deploymentBlocks: Record<TXIDVersion, number> = {\n    [TXIDVersion.V2_PoseidonMerkle]: deploymentBlock ?? 0,\n    [TXIDVersion.V3_PoseidonMerkle]:\n      deploymentBlockPoseidonMerkleAccumulatorV3 ?? 0,\n  };\n\n  // This function will set up the contracts for this chain.\n  // Throws if provider does not respond.\n  await engine.loadNetwork(\n    chain,\n    proxyContract,\n    relayAdaptContract,\n    poseidonMerkleAccumulatorV3Contract,\n    poseidonMerkleVerifierV3Contract,\n    tokenVaultV3Contract,\n    fallbackProvider,\n    pollingProvider,\n    deploymentBlocks,\n    poi?.launchBlock,\n    supportsV3,\n  );\n};\n\n/**\n * Note: The first provider listed in your fallback provider config is used as a polling provider\n * for new RAILGUN events (balance updates).\n */\nexport const loadProvider = async (\n  fallbackProviderJsonConfig: FallbackProviderJsonConfig,\n  networkName: NetworkName,\n  pollingInterval = 15000,\n): Promise<LoadProviderResponse> => {\n  try {\n    delete fallbackProviderMap[networkName];\n\n    const { chain, supportsV3 } = NETWORK_CONFIG[networkName];\n    if (fallbackProviderJsonConfig.chainId !== chain.id) {\n      throw new Error('Invalid chain ID');\n    }\n\n    await loadProviderForNetwork(\n      chain,\n      networkName,\n      fallbackProviderJsonConfig,\n      pollingInterval,\n    );\n    WalletPOINodeInterface.unpause(chain);\n    const { shield: shieldFeeV2, unshield: unshieldFeeV2 } =\n      await RailgunVersionedSmartContracts.fees(\n        TXIDVersion.V2_PoseidonMerkle,\n        chain,\n      );\n\n    if (supportsV3) {\n      const { shield: shieldFeeV3, unshield: unshieldFeeV3 } =\n        await RailgunVersionedSmartContracts.fees(\n          TXIDVersion.V3_PoseidonMerkle,\n          chain,\n        );\n\n      const feesSerialized = {\n        shieldFeeV2: shieldFeeV2.toString(),\n        unshieldFeeV2: unshieldFeeV2.toString(),\n        shieldFeeV3: shieldFeeV3?.toString(),\n        unshieldFeeV3: unshieldFeeV3?.toString(),\n      };\n      return { feesSerialized };\n    }\n\n    // Note: Shield and Unshield fees are in basis points.\n    // NFT fee is in wei (though currently 0).\n    const feesSerialized = {\n      shieldFeeV2: shieldFeeV2.toString(),\n      unshieldFeeV2: unshieldFeeV2.toString(),\n      shieldFeeV3: undefined,\n      unshieldFeeV3: undefined,\n    };\n    return { feesSerialized };\n  } catch (err) {\n    throw reportAndSanitizeError(loadProvider.name, err);\n  }\n};\n\nexport const unloadProvider = async (\n  networkName: NetworkName,\n): Promise<void> => {\n  WalletPOINodeInterface.pause(NETWORK_CONFIG[networkName].chain);\n  await fallbackProviderMap[networkName]?.destroy();\n  pollingProviderMap[networkName]?.destroy();\n  delete fallbackProviderMap[networkName];\n  delete pollingProviderMap[networkName];\n};\n\nexport const pauseAllPollingProviders = (\n  excludeNetworkName?: NetworkName,\n): void => {\n  Object.keys(pollingProviderMap).forEach(networkName => {\n    if (networkName === excludeNetworkName) {\n      return;\n    }\n    const pollingProvider = pollingProviderMap[networkName];\n    if (isDefined(pollingProvider) && !pollingProvider.paused) {\n      pollingProvider.pause();\n    }\n  });\n};\n\nexport const resumeIsolatedPollingProviderForNetwork = (\n  networkName: NetworkName,\n): void => {\n  pauseAllPollingProviders(\n    networkName, // excludeNetworkName\n  );\n  const pollingProviderForNetwork = pollingProviderMap[networkName];\n  if (\n    isDefined(pollingProviderForNetwork) &&\n    pollingProviderForNetwork.paused\n  ) {\n    pollingProviderForNetwork.resume();\n  }\n};\n"]}