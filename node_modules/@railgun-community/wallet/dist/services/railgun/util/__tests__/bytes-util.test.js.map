{"version":3,"file":"bytes-util.test.js","sourceRoot":"","sources":["../../../../../src/services/railgun/util/__tests__/bytes-util.test.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,wEAA8C;AAC9C,oCAAoE;AAEpE,cAAI,CAAC,GAAG,CAAC,0BAAc,CAAC,CAAC;AACzB,MAAM,EAAE,MAAM,EAAE,GAAG,cAAI,CAAC;AAExB,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,CAAC,IAAA,gCAAwB,EAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAC7C,4CAA4C,CAC7C,CAAC;QACF,MAAM,CAAC,IAAA,gCAAwB,EAAC,gCAAgC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CACzE,4CAA4C,CAC7C,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,CAAC,IAAA,sBAAc,EAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,IAAA,sBAAc,EAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,IAAA,sBAAc,EAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,IAAA,sBAAc,EAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport { getRandomBytes, parseRailgunTokenAddress } from '../bytes';\n\nchai.use(chaiAsPromised);\nconst { expect } = chai;\n\ndescribe('bytes-util', () => {\n  it('Should parse rail balance addresses', () => {\n    expect(parseRailgunTokenAddress('00')).to.equal(\n      '0x0000000000000000000000000000000000000000',\n    );\n    expect(parseRailgunTokenAddress('123456789012345678901234567890')).to.equal(\n      '0x0000000000123456789012345678901234567890',\n    );\n  });\n\n  it('Should return random bytes of length', () => {\n    expect(getRandomBytes(1).length).to.equal(2);\n    expect(getRandomBytes(16).length).to.equal(32);\n    expect(getRandomBytes(32).length).to.equal(64);\n    expect(getRandomBytes(80).length).to.equal(160);\n  });\n});\n"]}