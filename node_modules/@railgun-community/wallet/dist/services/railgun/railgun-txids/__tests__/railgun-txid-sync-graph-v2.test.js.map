{"version":3,"file":"railgun-txid-sync-graph-v2.test.js","sourceRoot":"","sources":["../../../../../src/services/railgun/railgun-txids/__tests__/railgun-txid-sync-graph-v2.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { RailgunTransactionV2 } from '@railgun-community/engine';\nimport { NetworkName, NETWORK_CONFIG } from '@railgun-community/shared-models';\nimport chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport {\n  getRailgunTxidsForUnshields,\n  quickSyncRailgunTransactionsV2,\n} from '../railgun-txid-sync-graph-v2';\n\nchai.use(chaiAsPromised);\nconst { expect } = chai;\n\ndescribe('railgun-txid-sync-graph', () => {\n  it('Should pull railgun txs subsquid query - Ethereum', async () => {\n    const railgunTxs: RailgunTransactionV2[] =\n      await quickSyncRailgunTransactionsV2(\n        NETWORK_CONFIG[NetworkName.Ethereum].chain,\n        undefined,\n      );\n\n    expect(railgunTxs).to.be.an('array');\n    expect(railgunTxs.length).to.equal(5000);\n\n    expect(railgunTxs[0].commitments).to.deep.equal([\n      '0x1afd01a29faf22dcc5678694092a08d38de99fc97d07b9281fa66f956ce43579',\n      '0x2ffc716d8ae767995961bbde4a208dbae438783065bbd200f51a8d4e97cc2289',\n      '0x078f9824c86b2488714eb76dc15199c3fa21903517d5f3e19ab2035d264400b6',\n    ]);\n    expect(railgunTxs[0].nullifiers).to.deep.equal([\n      '0x1e52cee52f67c37a468458671cddde6b56390dcbdc4cf3b770badc0e78d66401',\n      '0x0ac9f5ab5bcb5a115a3efdd0475f6c22dc6a6841caf35a52ecf86a802bfce8ee',\n    ]);\n    expect(railgunTxs[0].graphID).to.equal(\n      '0x0000000000000000000000000000000000000000000000000000000000e1285000000000000000000000000000000000000000000000000000000000000001500000000000000000000000000000000000000000000000000000000000000000',\n    );\n    expect(railgunTxs[0].boundParamsHash).to.equal(\n      '0x2c72a0bcce4f1169dd988204775483938ded5f5899cec84829b1cc667a683784',\n    );\n    expect(railgunTxs[0].txid).to.equal(\n      'f07a9a458f57f1cc9cc2e5a627c3ef611a18b77e10c2bfc133fceca7743f8d0c',\n    );\n    expect(railgunTxs[0].utxoTreeIn).to.equal(0);\n    expect(railgunTxs[0].utxoTreeOut).to.equal(0);\n    expect(railgunTxs[0].utxoBatchStartPositionOut).to.equal(2);\n    expect(railgunTxs[0].unshield).to.equal(undefined);\n    expect(railgunTxs[0].blockNumber).to.equal(14755920);\n    expect(railgunTxs[0].verificationHash).to.equal(\n      '0x099cd3ebcadaf6ff470d16bc0186fb5f26cd4103e9970effc9b6679478e11c72',\n    );\n  }).timeout(20_000);\n\n  it('Should pull unshield railgun txids - Ethereum', async () => {\n    const unshieldRailgunTxids: string[] = await getRailgunTxidsForUnshields(\n      NETWORK_CONFIG[NetworkName.Ethereum].chain,\n      '0x0b3b7179df1377c0a13058508e7dff2dbe8f73c39d68f569bc90b1c8b277082e',\n    );\n\n    expect(unshieldRailgunTxids).to.deep.equal([\n      '065bcb1a9d4cfa110f05b480f79f27fe2ad672868d3d1bdec05df2ddaec8333d',\n    ]);\n  }).timeout(20000);\n\n  it('Should pull railgun txs subsquid query - Polygon', async () => {\n    const railgunTxs: RailgunTransactionV2[] =\n      await quickSyncRailgunTransactionsV2(\n        NETWORK_CONFIG[NetworkName.Polygon].chain,\n        undefined,\n      );\n\n    expect(railgunTxs).to.be.an('array');\n    expect(railgunTxs.length).to.equal(5000);\n\n    expect(railgunTxs[0].commitments).to.deep.equal([\n      '0x06c764e6221b61792530c5d6d33710b9cd4c4d4f734265a4e9070cf081436079',\n      '0x140459c3519d73d56d292fd6d51292980f640623f008a4df063d387a819a7451',\n      '0x23303173569d99ffd5799f526bd53cb81073e2d6e9ff8f4b07bed8d948722673',\n    ]);\n    expect(railgunTxs[0].nullifiers).to.deep.equal([\n      '0x1e52cee52f67c37a468458671cddde6b56390dcbdc4cf3b770badc0e78d66401',\n    ]);\n    expect(railgunTxs[0].graphID).to.equal(\n      '0x0000000000000000000000000000000000000000000000000000000001ae397e00000000000000000000000000000000000000000000000000000000000000260000000000000000000000000000000000000000000000000000000000000000',\n    );\n    expect(railgunTxs[0].boundParamsHash).to.equal(\n      '0x251fcceba8b19129e88aff1e5214ad6f2a807e4a095075e55873aa59416111a2',\n    );\n    expect(railgunTxs[0].txid).to.equal(\n      '65df130da6a571fbcceb8538400f37bcaa4fe508caec7ab05f3b438f303bfe31',\n    );\n    expect(railgunTxs[0].utxoTreeIn).to.equal(0);\n    expect(railgunTxs[0].utxoTreeOut).to.equal(0);\n    expect(railgunTxs[0].utxoBatchStartPositionOut).to.equal(2);\n    expect(railgunTxs[0].unshield).to.equal(undefined);\n    expect(railgunTxs[0].blockNumber).to.equal(28195198);\n    expect(railgunTxs[0].verificationHash).to.equal(\n      '0x099cd3ebcadaf6ff470d16bc0186fb5f26cd4103e9970effc9b6679478e11c72',\n    );\n  }).timeout(20_000);\n\n  it('Should pull unshield railgun txids - Polygon', async () => {\n    const unshieldRailgunTxids: string[] = await getRailgunTxidsForUnshields(\n      NETWORK_CONFIG[NetworkName.Polygon].chain,\n      '0x7310a30b3a0dcec299917d5cd7ef2feab8c0507c41ec17649f38a21b4093dc32',\n    );\n\n    expect(unshieldRailgunTxids).to.deep.equal([\n      '113827d5fea4ebacffc3ab7289e6185d328c51c5f59ecbcd874d8f73e5638e27',\n    ]);\n  }).timeout(20000);\n\n  it('Should pull railgun txs subsquid query - Arbitrum', async () => {\n    const railgunTxs: RailgunTransactionV2[] =\n      await quickSyncRailgunTransactionsV2(\n        NETWORK_CONFIG[NetworkName.Arbitrum].chain,\n        undefined,\n      );\n\n    expect(railgunTxs).to.be.an('array');\n    expect(railgunTxs.length).to.equal(5000);\n\n    expect(railgunTxs[0].commitments).to.deep.equal([\n      '0x0bb9f2d13f87b8ba19b7f5bb7750148faeb0fed4a97bc6c3e63d7fe2a7b6d63e',\n      '0x217fb14374fcc4eca2d92c204bad0b2b36f6787e3268ae4740c992c632f7691c',\n    ]);\n    expect(railgunTxs[0].nullifiers).to.deep.equal([\n      '0x25234f8100ee0b86e2f331f255d982ba60d05710ceae8f226f6254addd362b1f',\n    ]);\n    expect(railgunTxs[0].graphID).to.equal(\n      '0x00000000000000000000000000000000000000000000000000000000039dd19000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000',\n    );\n    expect(railgunTxs[0].boundParamsHash).to.equal(\n      '0x2bb2954938dfcfdcc47253fd59d2225fc98feab293eb1bc80eff5d9d79de05a2',\n    );\n    expect(railgunTxs[0].txid).to.equal(\n      'cb4293e3a81241ef8b6c48285e4860222d9c147da8583aa1d53a7117f230c368',\n    );\n    expect(railgunTxs[0].utxoTreeIn).to.equal(0);\n    expect(railgunTxs[0].utxoTreeOut).to.equal(0);\n    expect(railgunTxs[0].utxoBatchStartPositionOut).to.equal(1);\n    expect(railgunTxs[0].unshield).to.deep.equal({\n      tokenData: {\n        tokenType: 0,\n        tokenAddress: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n        tokenSubID: '0x00',\n      },\n      toAddress: '0x5ad95c537b002770a39dea342c4bb2b68b1497aa',\n      value: '1000000000000000',\n    });\n    expect(railgunTxs[0].blockNumber).to.equal(60674448);\n    expect(railgunTxs[0].verificationHash).to.equal(\n      '0x4f7406636df927247b46552673d024567d99fd60e5fb50159ba47a170580308a',\n    );\n  }).timeout(20_000);\n\n  it('Should pull unshield railgun txids - Arbitrum', async () => {\n    const unshieldRailgunTxids: string[] = await getRailgunTxidsForUnshields(\n      NETWORK_CONFIG[NetworkName.Arbitrum].chain,\n      '0xcb4293e3a81241ef8b6c48285e4860222d9c147da8583aa1d53a7117f230c368',\n    );\n\n    expect(unshieldRailgunTxids).to.deep.equal([\n      '1bef936762f21323e57539cdf4b87251279b34880881ae003219058dacc258a7',\n    ]);\n  }).timeout(20000);\n\n  it('Should pull railgun txs subsquid query - BNBChain', async () => {\n    const railgunTxs: RailgunTransactionV2[] =\n      await quickSyncRailgunTransactionsV2(\n        NETWORK_CONFIG[NetworkName.BNBChain].chain,\n        undefined,\n      );\n\n    expect(railgunTxs).to.be.an('array');\n    expect(railgunTxs.length).to.equal(5000);\n\n    expect(railgunTxs[0].commitments).to.deep.equal([\n      '0x2f1f83e339c05d14f102088c0c3f2b8f8addbd8497a88ef49a1e9c942bbb0f87',\n      '0x275c216c06fd5e68bb65f46f85e93afb563f9bad08b2eaf222a38ce6d848c004',\n    ]);\n    expect(railgunTxs[0].nullifiers).to.deep.equal([\n      '0x1866ea0094491975f18fa92ba6fac7c2f562bbc49e975866643108dd15f0a6b2',\n    ]);\n    expect(railgunTxs[0].graphID).to.equal(\n      '0x00000000000000000000000000000000000000000000000000000000010f2d7b000000000000000000000000000000000000000000000000000000000000003f0000000000000000000000000000000000000000000000000000000000000000',\n    );\n    expect(railgunTxs[0].boundParamsHash).to.equal(\n      '0x0d0cc0770e4915c2b841f394834c0e3b2d5807642c23a9578a1bbc80f8b47f6a',\n    );\n    expect(railgunTxs[0].txid).to.equal(\n      '4388f3727fe7f9cfd0d57807f7a2a126fbb7e56a25a17e3e99102931ea2e4b33',\n    );\n    expect(railgunTxs[0].utxoTreeIn).to.equal(0);\n    expect(railgunTxs[0].utxoTreeOut).to.equal(0);\n    expect(railgunTxs[0].utxoBatchStartPositionOut).to.equal(4);\n    expect(railgunTxs[0].unshield).to.equal(undefined);\n    expect(railgunTxs[0].blockNumber).to.equal(17771899);\n    expect(railgunTxs[0].verificationHash).to.equal(\n      '0x5052ad94d14b1f0a16fa8ca6680f9736a357cc73798695d3e1247ca95483415c',\n    );\n  }).timeout(20_000);\n\n  it('Should pull unshield railgun txids - BNBChain', async () => {\n    const unshieldRailgunTxids: string[] = await getRailgunTxidsForUnshields(\n      NETWORK_CONFIG[NetworkName.BNBChain].chain,\n      '0xcef99c75d555b81625e5e96304716b04bd6900d99b664fda7d5a89265dca3c38',\n    );\n\n    expect(unshieldRailgunTxids).to.deep.equal([\n      '27fe3f9eef756cba48cf2850935c20dc7faf36911fe2cc43b69b4650912e09e0',\n    ]);\n  }).timeout(20000);\n\n  it('Should pull railgun txs subsquid query - Sepolia', async () => {\n    const railgunTxs: RailgunTransactionV2[] =\n      await quickSyncRailgunTransactionsV2(\n        NETWORK_CONFIG[NetworkName.EthereumSepolia].chain,\n        undefined,\n      );\n\n    expect(railgunTxs).to.be.an('array');\n    expect(railgunTxs.length).to.be.greaterThanOrEqual(10);\n\n    expect(railgunTxs[0].commitments).to.deep.equal([\n      '0x213b8672321b8b6d4165528e3146b1c25da4656fd93db74efa3258416e20b5d9',\n      '0x14b55264849684c1d549c44b469e1047d67f06bfdb6aa22f1d14e1c545d749a5',\n    ]);\n    expect(railgunTxs[0].nullifiers).to.deep.equal([\n      '0x25234f8100ee0b86e2f331f255d982ba60d05710ceae8f226f6254addd362b1f',\n    ]);\n    expect(railgunTxs[0].graphID).to.equal(\n      '0x00000000000000000000000000000000000000000000000000000000005b001e000000000000000000000000000000000000000000000000000000000000003b0000000000000000000000000000000000000000000000000000000000000000',\n    );\n    expect(railgunTxs[0].boundParamsHash).to.equal(\n      '0x1a2fec90b4354f18153226a457bc24fe480fa816f2cf8ae13419be7938f80b51',\n    );\n    expect(railgunTxs[0].txid).to.equal(\n      'e629e8f89ab98fee9dadacb9323746e4c150dee57917218509e94d9e35cc1db0',\n    );\n    expect(railgunTxs[0].utxoTreeIn).to.equal(0);\n    expect(railgunTxs[0].utxoTreeOut).to.equal(0);\n    expect(railgunTxs[0].utxoBatchStartPositionOut).to.equal(1);\n    expect(railgunTxs[0].unshield).to.deep.equal({\n      tokenData: {\n        tokenType: 0,\n        tokenAddress: '0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14',\n        tokenSubID: '0x00',\n      },\n      toAddress: '0x7e3d929ebd5bdc84d02bd3205c777578f33a214d',\n      value: '10025062656641604',\n    });\n    expect(railgunTxs[0].blockNumber).to.equal(5963806);\n    expect(railgunTxs[0].verificationHash).to.equal(\n      '0x4f7406636df927247b46552673d024567d99fd60e5fb50159ba47a170580308a',\n    );\n  }).timeout(20_000);\n\n  it('Should pull unshield railgun txids - Sepolia', async () => {\n    const unshieldRailgunTxids: string[] = await getRailgunTxidsForUnshields(\n      NETWORK_CONFIG[NetworkName.EthereumSepolia].chain,\n      '0xe629e8f89ab98fee9dadacb9323746e4c150dee57917218509e94d9e35cc1db0',\n    );\n\n    expect(unshieldRailgunTxids).to.deep.equal([\n      '1acb0bd1981ecdf3652d3580b72bcb97cbfe635abf66e339d8e6d8577184f65e',\n    ]);\n  }).timeout(20000);\n});\n"]}