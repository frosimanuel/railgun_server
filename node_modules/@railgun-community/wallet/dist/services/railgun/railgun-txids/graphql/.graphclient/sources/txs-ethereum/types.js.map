{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../../../../src/services/railgun/railgun-txids/graphql/.graphclient/sources/txs-ethereum/types.ts"],"names":[],"mappings":";AAAA,cAAc","sourcesContent":["// @ts-nocheck\n\nimport { InContextSdkMethod } from '@graphql-mesh/types';\nimport { MeshContext } from '@graphql-mesh/runtime';\n\nexport namespace TxsEthereumTypes {\n  export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Bytes: any;\n  BigInt: any;\n};\n\nexport type Query = {\n  tokens: Array<Token>;\n  tokenById?: Maybe<Token>;\n  /** @deprecated Use tokenById */\n  tokenByUniqueInput?: Maybe<Token>;\n  tokensConnection: TokensConnection;\n  commitmentPreimages: Array<CommitmentPreimage>;\n  commitmentPreimageById?: Maybe<CommitmentPreimage>;\n  /** @deprecated Use commitmentPreimageById */\n  commitmentPreimageByUniqueInput?: Maybe<CommitmentPreimage>;\n  commitmentPreimagesConnection: CommitmentPreimagesConnection;\n  ciphertexts: Array<Ciphertext>;\n  ciphertextById?: Maybe<Ciphertext>;\n  /** @deprecated Use ciphertextById */\n  ciphertextByUniqueInput?: Maybe<Ciphertext>;\n  ciphertextsConnection: CiphertextsConnection;\n  legacyCommitmentCiphertexts: Array<LegacyCommitmentCiphertext>;\n  legacyCommitmentCiphertextById?: Maybe<LegacyCommitmentCiphertext>;\n  /** @deprecated Use legacyCommitmentCiphertextById */\n  legacyCommitmentCiphertextByUniqueInput?: Maybe<LegacyCommitmentCiphertext>;\n  legacyCommitmentCiphertextsConnection: LegacyCommitmentCiphertextsConnection;\n  commitmentCiphertexts: Array<CommitmentCiphertext>;\n  commitmentCiphertextById?: Maybe<CommitmentCiphertext>;\n  /** @deprecated Use commitmentCiphertextById */\n  commitmentCiphertextByUniqueInput?: Maybe<CommitmentCiphertext>;\n  commitmentCiphertextsConnection: CommitmentCiphertextsConnection;\n  legacyGeneratedCommitments: Array<LegacyGeneratedCommitment>;\n  legacyGeneratedCommitmentById?: Maybe<LegacyGeneratedCommitment>;\n  /** @deprecated Use legacyGeneratedCommitmentById */\n  legacyGeneratedCommitmentByUniqueInput?: Maybe<LegacyGeneratedCommitment>;\n  legacyGeneratedCommitmentsConnection: LegacyGeneratedCommitmentsConnection;\n  commitments: Array<Commitment>;\n  commitmentsConnection: CommitmentsConnection;\n  legacyEncryptedCommitments: Array<LegacyEncryptedCommitment>;\n  legacyEncryptedCommitmentById?: Maybe<LegacyEncryptedCommitment>;\n  /** @deprecated Use legacyEncryptedCommitmentById */\n  legacyEncryptedCommitmentByUniqueInput?: Maybe<LegacyEncryptedCommitment>;\n  legacyEncryptedCommitmentsConnection: LegacyEncryptedCommitmentsConnection;\n  shieldCommitments: Array<ShieldCommitment>;\n  shieldCommitmentById?: Maybe<ShieldCommitment>;\n  /** @deprecated Use shieldCommitmentById */\n  shieldCommitmentByUniqueInput?: Maybe<ShieldCommitment>;\n  shieldCommitmentsConnection: ShieldCommitmentsConnection;\n  transactCommitments: Array<TransactCommitment>;\n  transactCommitmentById?: Maybe<TransactCommitment>;\n  /** @deprecated Use transactCommitmentById */\n  transactCommitmentByUniqueInput?: Maybe<TransactCommitment>;\n  transactCommitmentsConnection: TransactCommitmentsConnection;\n  unshields: Array<Unshield>;\n  unshieldById?: Maybe<Unshield>;\n  /** @deprecated Use unshieldById */\n  unshieldByUniqueInput?: Maybe<Unshield>;\n  unshieldsConnection: UnshieldsConnection;\n  nullifiers: Array<Nullifier>;\n  nullifierById?: Maybe<Nullifier>;\n  /** @deprecated Use nullifierById */\n  nullifierByUniqueInput?: Maybe<Nullifier>;\n  nullifiersConnection: NullifiersConnection;\n  transactions: Array<Transaction>;\n  transactionById?: Maybe<Transaction>;\n  /** @deprecated Use transactionById */\n  transactionByUniqueInput?: Maybe<Transaction>;\n  transactionsConnection: TransactionsConnection;\n  verificationHashes: Array<VerificationHash>;\n  verificationHashById?: Maybe<VerificationHash>;\n  /** @deprecated Use verificationHashById */\n  verificationHashByUniqueInput?: Maybe<VerificationHash>;\n  verificationHashesConnection: VerificationHashesConnection;\n  commitmentBatchEventNews: Array<CommitmentBatchEventNew>;\n  commitmentBatchEventNewById?: Maybe<CommitmentBatchEventNew>;\n  /** @deprecated Use commitmentBatchEventNewById */\n  commitmentBatchEventNewByUniqueInput?: Maybe<CommitmentBatchEventNew>;\n  commitmentBatchEventNewsConnection: CommitmentBatchEventNewsConnection;\n  squidStatus?: Maybe<SquidStatus>;\n};\n\n\nexport type QuerytokensArgs = {\n  where?: InputMaybe<TokenWhereInput>;\n  orderBy?: InputMaybe<Array<TokenOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerytokenByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerytokenByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerytokensConnectionArgs = {\n  orderBy: Array<TokenOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<TokenWhereInput>;\n};\n\n\nexport type QuerycommitmentPreimagesArgs = {\n  where?: InputMaybe<CommitmentPreimageWhereInput>;\n  orderBy?: InputMaybe<Array<CommitmentPreimageOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerycommitmentPreimageByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerycommitmentPreimageByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerycommitmentPreimagesConnectionArgs = {\n  orderBy: Array<CommitmentPreimageOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<CommitmentPreimageWhereInput>;\n};\n\n\nexport type QueryciphertextsArgs = {\n  where?: InputMaybe<CiphertextWhereInput>;\n  orderBy?: InputMaybe<Array<CiphertextOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryciphertextByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryciphertextByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryciphertextsConnectionArgs = {\n  orderBy: Array<CiphertextOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<CiphertextWhereInput>;\n};\n\n\nexport type QuerylegacyCommitmentCiphertextsArgs = {\n  where?: InputMaybe<LegacyCommitmentCiphertextWhereInput>;\n  orderBy?: InputMaybe<Array<LegacyCommitmentCiphertextOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerylegacyCommitmentCiphertextByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerylegacyCommitmentCiphertextByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerylegacyCommitmentCiphertextsConnectionArgs = {\n  orderBy: Array<LegacyCommitmentCiphertextOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<LegacyCommitmentCiphertextWhereInput>;\n};\n\n\nexport type QuerycommitmentCiphertextsArgs = {\n  where?: InputMaybe<CommitmentCiphertextWhereInput>;\n  orderBy?: InputMaybe<Array<CommitmentCiphertextOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerycommitmentCiphertextByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerycommitmentCiphertextByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerycommitmentCiphertextsConnectionArgs = {\n  orderBy: Array<CommitmentCiphertextOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<CommitmentCiphertextWhereInput>;\n};\n\n\nexport type QuerylegacyGeneratedCommitmentsArgs = {\n  where?: InputMaybe<LegacyGeneratedCommitmentWhereInput>;\n  orderBy?: InputMaybe<Array<LegacyGeneratedCommitmentOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerylegacyGeneratedCommitmentByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerylegacyGeneratedCommitmentByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerylegacyGeneratedCommitmentsConnectionArgs = {\n  orderBy: Array<LegacyGeneratedCommitmentOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<LegacyGeneratedCommitmentWhereInput>;\n};\n\n\nexport type QuerycommitmentsArgs = {\n  where?: InputMaybe<CommitmentWhereInput>;\n  orderBy?: InputMaybe<Array<CommitmentOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerycommitmentsConnectionArgs = {\n  orderBy: Array<CommitmentOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<CommitmentWhereInput>;\n};\n\n\nexport type QuerylegacyEncryptedCommitmentsArgs = {\n  where?: InputMaybe<LegacyEncryptedCommitmentWhereInput>;\n  orderBy?: InputMaybe<Array<LegacyEncryptedCommitmentOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerylegacyEncryptedCommitmentByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerylegacyEncryptedCommitmentByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerylegacyEncryptedCommitmentsConnectionArgs = {\n  orderBy: Array<LegacyEncryptedCommitmentOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<LegacyEncryptedCommitmentWhereInput>;\n};\n\n\nexport type QueryshieldCommitmentsArgs = {\n  where?: InputMaybe<ShieldCommitmentWhereInput>;\n  orderBy?: InputMaybe<Array<ShieldCommitmentOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryshieldCommitmentByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryshieldCommitmentByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryshieldCommitmentsConnectionArgs = {\n  orderBy: Array<ShieldCommitmentOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ShieldCommitmentWhereInput>;\n};\n\n\nexport type QuerytransactCommitmentsArgs = {\n  where?: InputMaybe<TransactCommitmentWhereInput>;\n  orderBy?: InputMaybe<Array<TransactCommitmentOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerytransactCommitmentByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerytransactCommitmentByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerytransactCommitmentsConnectionArgs = {\n  orderBy: Array<TransactCommitmentOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<TransactCommitmentWhereInput>;\n};\n\n\nexport type QueryunshieldsArgs = {\n  where?: InputMaybe<UnshieldWhereInput>;\n  orderBy?: InputMaybe<Array<UnshieldOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryunshieldByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryunshieldByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryunshieldsConnectionArgs = {\n  orderBy: Array<UnshieldOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<UnshieldWhereInput>;\n};\n\n\nexport type QuerynullifiersArgs = {\n  where?: InputMaybe<NullifierWhereInput>;\n  orderBy?: InputMaybe<Array<NullifierOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerynullifierByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerynullifierByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerynullifiersConnectionArgs = {\n  orderBy: Array<NullifierOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<NullifierWhereInput>;\n};\n\n\nexport type QuerytransactionsArgs = {\n  where?: InputMaybe<TransactionWhereInput>;\n  orderBy?: InputMaybe<Array<TransactionOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerytransactionByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerytransactionByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerytransactionsConnectionArgs = {\n  orderBy: Array<TransactionOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<TransactionWhereInput>;\n};\n\n\nexport type QueryverificationHashesArgs = {\n  where?: InputMaybe<VerificationHashWhereInput>;\n  orderBy?: InputMaybe<Array<VerificationHashOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryverificationHashByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryverificationHashByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryverificationHashesConnectionArgs = {\n  orderBy: Array<VerificationHashOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<VerificationHashWhereInput>;\n};\n\n\nexport type QuerycommitmentBatchEventNewsArgs = {\n  where?: InputMaybe<CommitmentBatchEventNewWhereInput>;\n  orderBy?: InputMaybe<Array<CommitmentBatchEventNewOrderByInput>>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QuerycommitmentBatchEventNewByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QuerycommitmentBatchEventNewByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QuerycommitmentBatchEventNewsConnectionArgs = {\n  orderBy: Array<CommitmentBatchEventNewOrderByInput>;\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<CommitmentBatchEventNewWhereInput>;\n};\n\nexport type Token = {\n  id: Scalars['String'];\n  tokenType: TokenType;\n  tokenAddress: Scalars['Bytes'];\n  tokenSubID: Scalars['String'];\n};\n\nexport type TokenType =\n  | 'ERC20'\n  | 'ERC721'\n  | 'ERC1155';\n\nexport type TokenWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  tokenType_isNull?: InputMaybe<Scalars['Boolean']>;\n  tokenType_eq?: InputMaybe<TokenType>;\n  tokenType_not_eq?: InputMaybe<TokenType>;\n  tokenType_in?: InputMaybe<Array<TokenType>>;\n  tokenType_not_in?: InputMaybe<Array<TokenType>>;\n  tokenAddress_isNull?: InputMaybe<Scalars['Boolean']>;\n  tokenAddress_eq?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_not_eq?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_isNull?: InputMaybe<Scalars['Boolean']>;\n  tokenSubID_eq?: InputMaybe<Scalars['String']>;\n  tokenSubID_not_eq?: InputMaybe<Scalars['String']>;\n  tokenSubID_gt?: InputMaybe<Scalars['String']>;\n  tokenSubID_gte?: InputMaybe<Scalars['String']>;\n  tokenSubID_lt?: InputMaybe<Scalars['String']>;\n  tokenSubID_lte?: InputMaybe<Scalars['String']>;\n  tokenSubID_in?: InputMaybe<Array<Scalars['String']>>;\n  tokenSubID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  tokenSubID_contains?: InputMaybe<Scalars['String']>;\n  tokenSubID_not_contains?: InputMaybe<Scalars['String']>;\n  tokenSubID_containsInsensitive?: InputMaybe<Scalars['String']>;\n  tokenSubID_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  tokenSubID_startsWith?: InputMaybe<Scalars['String']>;\n  tokenSubID_not_startsWith?: InputMaybe<Scalars['String']>;\n  tokenSubID_endsWith?: InputMaybe<Scalars['String']>;\n  tokenSubID_not_endsWith?: InputMaybe<Scalars['String']>;\n  AND?: InputMaybe<Array<TokenWhereInput>>;\n  OR?: InputMaybe<Array<TokenWhereInput>>;\n};\n\nexport type TokenOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'tokenType_ASC'\n  | 'tokenType_DESC'\n  | 'tokenType_ASC_NULLS_FIRST'\n  | 'tokenType_DESC_NULLS_LAST'\n  | 'tokenAddress_ASC'\n  | 'tokenAddress_DESC'\n  | 'tokenAddress_ASC_NULLS_FIRST'\n  | 'tokenAddress_DESC_NULLS_LAST'\n  | 'tokenSubID_ASC'\n  | 'tokenSubID_DESC'\n  | 'tokenSubID_ASC_NULLS_FIRST'\n  | 'tokenSubID_DESC_NULLS_LAST';\n\nexport type WhereIdInput = {\n  id: Scalars['String'];\n};\n\nexport type TokensConnection = {\n  edges: Array<TokenEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type TokenEdge = {\n  node: Token;\n  cursor: Scalars['String'];\n};\n\nexport type PageInfo = {\n  hasNextPage: Scalars['Boolean'];\n  hasPreviousPage: Scalars['Boolean'];\n  startCursor: Scalars['String'];\n  endCursor: Scalars['String'];\n};\n\nexport type CommitmentPreimage = {\n  id: Scalars['String'];\n  npk: Scalars['Bytes'];\n  token: Token;\n  value: Scalars['BigInt'];\n};\n\nexport type CommitmentPreimageWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  npk_isNull?: InputMaybe<Scalars['Boolean']>;\n  npk_eq?: InputMaybe<Scalars['Bytes']>;\n  npk_not_eq?: InputMaybe<Scalars['Bytes']>;\n  token_isNull?: InputMaybe<Scalars['Boolean']>;\n  token?: InputMaybe<TokenWhereInput>;\n  value_isNull?: InputMaybe<Scalars['Boolean']>;\n  value_eq?: InputMaybe<Scalars['BigInt']>;\n  value_not_eq?: InputMaybe<Scalars['BigInt']>;\n  value_gt?: InputMaybe<Scalars['BigInt']>;\n  value_gte?: InputMaybe<Scalars['BigInt']>;\n  value_lt?: InputMaybe<Scalars['BigInt']>;\n  value_lte?: InputMaybe<Scalars['BigInt']>;\n  value_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  value_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  AND?: InputMaybe<Array<CommitmentPreimageWhereInput>>;\n  OR?: InputMaybe<Array<CommitmentPreimageWhereInput>>;\n};\n\nexport type CommitmentPreimageOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'npk_ASC'\n  | 'npk_DESC'\n  | 'npk_ASC_NULLS_FIRST'\n  | 'npk_DESC_NULLS_LAST'\n  | 'token_id_ASC'\n  | 'token_id_DESC'\n  | 'token_id_ASC_NULLS_FIRST'\n  | 'token_id_DESC_NULLS_LAST'\n  | 'token_tokenType_ASC'\n  | 'token_tokenType_DESC'\n  | 'token_tokenType_ASC_NULLS_FIRST'\n  | 'token_tokenType_DESC_NULLS_LAST'\n  | 'token_tokenAddress_ASC'\n  | 'token_tokenAddress_DESC'\n  | 'token_tokenAddress_ASC_NULLS_FIRST'\n  | 'token_tokenAddress_DESC_NULLS_LAST'\n  | 'token_tokenSubID_ASC'\n  | 'token_tokenSubID_DESC'\n  | 'token_tokenSubID_ASC_NULLS_FIRST'\n  | 'token_tokenSubID_DESC_NULLS_LAST'\n  | 'value_ASC'\n  | 'value_DESC'\n  | 'value_ASC_NULLS_FIRST'\n  | 'value_DESC_NULLS_LAST';\n\nexport type CommitmentPreimagesConnection = {\n  edges: Array<CommitmentPreimageEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type CommitmentPreimageEdge = {\n  node: CommitmentPreimage;\n  cursor: Scalars['String'];\n};\n\nexport type Ciphertext = {\n  id: Scalars['String'];\n  iv: Scalars['Bytes'];\n  tag: Scalars['Bytes'];\n  data: Array<Scalars['Bytes']>;\n};\n\nexport type CiphertextWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  iv_isNull?: InputMaybe<Scalars['Boolean']>;\n  iv_eq?: InputMaybe<Scalars['Bytes']>;\n  iv_not_eq?: InputMaybe<Scalars['Bytes']>;\n  tag_isNull?: InputMaybe<Scalars['Boolean']>;\n  tag_eq?: InputMaybe<Scalars['Bytes']>;\n  tag_not_eq?: InputMaybe<Scalars['Bytes']>;\n  data_isNull?: InputMaybe<Scalars['Boolean']>;\n  data_containsAll?: InputMaybe<Array<Scalars['Bytes']>>;\n  data_containsAny?: InputMaybe<Array<Scalars['Bytes']>>;\n  data_containsNone?: InputMaybe<Array<Scalars['Bytes']>>;\n  AND?: InputMaybe<Array<CiphertextWhereInput>>;\n  OR?: InputMaybe<Array<CiphertextWhereInput>>;\n};\n\nexport type CiphertextOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'iv_ASC'\n  | 'iv_DESC'\n  | 'iv_ASC_NULLS_FIRST'\n  | 'iv_DESC_NULLS_LAST'\n  | 'tag_ASC'\n  | 'tag_DESC'\n  | 'tag_ASC_NULLS_FIRST'\n  | 'tag_DESC_NULLS_LAST';\n\nexport type CiphertextsConnection = {\n  edges: Array<CiphertextEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type CiphertextEdge = {\n  node: Ciphertext;\n  cursor: Scalars['String'];\n};\n\nexport type LegacyCommitmentCiphertext = {\n  id: Scalars['String'];\n  ciphertext: Ciphertext;\n  ephemeralKeys: Array<Scalars['Bytes']>;\n  memo: Array<Scalars['Bytes']>;\n};\n\nexport type LegacyCommitmentCiphertextWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  ciphertext_isNull?: InputMaybe<Scalars['Boolean']>;\n  ciphertext?: InputMaybe<CiphertextWhereInput>;\n  ephemeralKeys_isNull?: InputMaybe<Scalars['Boolean']>;\n  ephemeralKeys_containsAll?: InputMaybe<Array<Scalars['Bytes']>>;\n  ephemeralKeys_containsAny?: InputMaybe<Array<Scalars['Bytes']>>;\n  ephemeralKeys_containsNone?: InputMaybe<Array<Scalars['Bytes']>>;\n  memo_isNull?: InputMaybe<Scalars['Boolean']>;\n  memo_containsAll?: InputMaybe<Array<Scalars['Bytes']>>;\n  memo_containsAny?: InputMaybe<Array<Scalars['Bytes']>>;\n  memo_containsNone?: InputMaybe<Array<Scalars['Bytes']>>;\n  AND?: InputMaybe<Array<LegacyCommitmentCiphertextWhereInput>>;\n  OR?: InputMaybe<Array<LegacyCommitmentCiphertextWhereInput>>;\n};\n\nexport type LegacyCommitmentCiphertextOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'ciphertext_id_ASC'\n  | 'ciphertext_id_DESC'\n  | 'ciphertext_id_ASC_NULLS_FIRST'\n  | 'ciphertext_id_DESC_NULLS_LAST'\n  | 'ciphertext_iv_ASC'\n  | 'ciphertext_iv_DESC'\n  | 'ciphertext_iv_ASC_NULLS_FIRST'\n  | 'ciphertext_iv_DESC_NULLS_LAST'\n  | 'ciphertext_tag_ASC'\n  | 'ciphertext_tag_DESC'\n  | 'ciphertext_tag_ASC_NULLS_FIRST'\n  | 'ciphertext_tag_DESC_NULLS_LAST';\n\nexport type LegacyCommitmentCiphertextsConnection = {\n  edges: Array<LegacyCommitmentCiphertextEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type LegacyCommitmentCiphertextEdge = {\n  node: LegacyCommitmentCiphertext;\n  cursor: Scalars['String'];\n};\n\nexport type CommitmentCiphertext = {\n  id: Scalars['String'];\n  ciphertext: Ciphertext;\n  blindedSenderViewingKey: Scalars['Bytes'];\n  blindedReceiverViewingKey: Scalars['Bytes'];\n  annotationData: Scalars['Bytes'];\n  memo: Scalars['Bytes'];\n};\n\nexport type CommitmentCiphertextWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  ciphertext_isNull?: InputMaybe<Scalars['Boolean']>;\n  ciphertext?: InputMaybe<CiphertextWhereInput>;\n  blindedSenderViewingKey_isNull?: InputMaybe<Scalars['Boolean']>;\n  blindedSenderViewingKey_eq?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_not_eq?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_isNull?: InputMaybe<Scalars['Boolean']>;\n  blindedReceiverViewingKey_eq?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_not_eq?: InputMaybe<Scalars['Bytes']>;\n  annotationData_isNull?: InputMaybe<Scalars['Boolean']>;\n  annotationData_eq?: InputMaybe<Scalars['Bytes']>;\n  annotationData_not_eq?: InputMaybe<Scalars['Bytes']>;\n  memo_isNull?: InputMaybe<Scalars['Boolean']>;\n  memo_eq?: InputMaybe<Scalars['Bytes']>;\n  memo_not_eq?: InputMaybe<Scalars['Bytes']>;\n  AND?: InputMaybe<Array<CommitmentCiphertextWhereInput>>;\n  OR?: InputMaybe<Array<CommitmentCiphertextWhereInput>>;\n};\n\nexport type CommitmentCiphertextOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'ciphertext_id_ASC'\n  | 'ciphertext_id_DESC'\n  | 'ciphertext_id_ASC_NULLS_FIRST'\n  | 'ciphertext_id_DESC_NULLS_LAST'\n  | 'ciphertext_iv_ASC'\n  | 'ciphertext_iv_DESC'\n  | 'ciphertext_iv_ASC_NULLS_FIRST'\n  | 'ciphertext_iv_DESC_NULLS_LAST'\n  | 'ciphertext_tag_ASC'\n  | 'ciphertext_tag_DESC'\n  | 'ciphertext_tag_ASC_NULLS_FIRST'\n  | 'ciphertext_tag_DESC_NULLS_LAST'\n  | 'blindedSenderViewingKey_ASC'\n  | 'blindedSenderViewingKey_DESC'\n  | 'blindedSenderViewingKey_ASC_NULLS_FIRST'\n  | 'blindedSenderViewingKey_DESC_NULLS_LAST'\n  | 'blindedReceiverViewingKey_ASC'\n  | 'blindedReceiverViewingKey_DESC'\n  | 'blindedReceiverViewingKey_ASC_NULLS_FIRST'\n  | 'blindedReceiverViewingKey_DESC_NULLS_LAST'\n  | 'annotationData_ASC'\n  | 'annotationData_DESC'\n  | 'annotationData_ASC_NULLS_FIRST'\n  | 'annotationData_DESC_NULLS_LAST'\n  | 'memo_ASC'\n  | 'memo_DESC'\n  | 'memo_ASC_NULLS_FIRST'\n  | 'memo_DESC_NULLS_LAST';\n\nexport type CommitmentCiphertextsConnection = {\n  edges: Array<CommitmentCiphertextEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type CommitmentCiphertextEdge = {\n  node: CommitmentCiphertext;\n  cursor: Scalars['String'];\n};\n\nexport type LegacyGeneratedCommitment = Commitment & {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  batchStartTreePosition: Scalars['Int'];\n  treePosition: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hash: Scalars['BigInt'];\n  preimage: CommitmentPreimage;\n  encryptedRandom: Array<Scalars['Bytes']>;\n};\n\nexport type Commitment = {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  batchStartTreePosition: Scalars['Int'];\n  treePosition: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hash: Scalars['BigInt'];\n};\n\nexport type CommitmentType =\n  | 'ShieldCommitment'\n  | 'TransactCommitment'\n  | 'LegacyGeneratedCommitment'\n  | 'LegacyEncryptedCommitment';\n\nexport type LegacyGeneratedCommitmentWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  treeNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  treeNumber_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  batchStartTreePosition_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  treePosition_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_gt?: InputMaybe<Scalars['Int']>;\n  treePosition_gte?: InputMaybe<Scalars['Int']>;\n  treePosition_lt?: InputMaybe<Scalars['Int']>;\n  treePosition_lte?: InputMaybe<Scalars['Int']>;\n  treePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType_isNull?: InputMaybe<Scalars['Boolean']>;\n  commitmentType_eq?: InputMaybe<CommitmentType>;\n  commitmentType_not_eq?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hash_isNull?: InputMaybe<Scalars['Boolean']>;\n  hash_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_not_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_gt?: InputMaybe<Scalars['BigInt']>;\n  hash_gte?: InputMaybe<Scalars['BigInt']>;\n  hash_lt?: InputMaybe<Scalars['BigInt']>;\n  hash_lte?: InputMaybe<Scalars['BigInt']>;\n  hash_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  preimage_isNull?: InputMaybe<Scalars['Boolean']>;\n  preimage?: InputMaybe<CommitmentPreimageWhereInput>;\n  encryptedRandom_isNull?: InputMaybe<Scalars['Boolean']>;\n  encryptedRandom_containsAll?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedRandom_containsAny?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedRandom_containsNone?: InputMaybe<Array<Scalars['Bytes']>>;\n  AND?: InputMaybe<Array<LegacyGeneratedCommitmentWhereInput>>;\n  OR?: InputMaybe<Array<LegacyGeneratedCommitmentWhereInput>>;\n};\n\nexport type LegacyGeneratedCommitmentOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'treeNumber_ASC'\n  | 'treeNumber_DESC'\n  | 'treeNumber_ASC_NULLS_FIRST'\n  | 'treeNumber_DESC_NULLS_LAST'\n  | 'batchStartTreePosition_ASC'\n  | 'batchStartTreePosition_DESC'\n  | 'batchStartTreePosition_ASC_NULLS_FIRST'\n  | 'batchStartTreePosition_DESC_NULLS_LAST'\n  | 'treePosition_ASC'\n  | 'treePosition_DESC'\n  | 'treePosition_ASC_NULLS_FIRST'\n  | 'treePosition_DESC_NULLS_LAST'\n  | 'commitmentType_ASC'\n  | 'commitmentType_DESC'\n  | 'commitmentType_ASC_NULLS_FIRST'\n  | 'commitmentType_DESC_NULLS_LAST'\n  | 'hash_ASC'\n  | 'hash_DESC'\n  | 'hash_ASC_NULLS_FIRST'\n  | 'hash_DESC_NULLS_LAST'\n  | 'preimage_id_ASC'\n  | 'preimage_id_DESC'\n  | 'preimage_id_ASC_NULLS_FIRST'\n  | 'preimage_id_DESC_NULLS_LAST'\n  | 'preimage_npk_ASC'\n  | 'preimage_npk_DESC'\n  | 'preimage_npk_ASC_NULLS_FIRST'\n  | 'preimage_npk_DESC_NULLS_LAST'\n  | 'preimage_value_ASC'\n  | 'preimage_value_DESC'\n  | 'preimage_value_ASC_NULLS_FIRST'\n  | 'preimage_value_DESC_NULLS_LAST';\n\nexport type LegacyGeneratedCommitmentsConnection = {\n  edges: Array<LegacyGeneratedCommitmentEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type LegacyGeneratedCommitmentEdge = {\n  node: LegacyGeneratedCommitment;\n  cursor: Scalars['String'];\n};\n\nexport type CommitmentWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  treeNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  treeNumber_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  batchStartTreePosition_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  treePosition_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_gt?: InputMaybe<Scalars['Int']>;\n  treePosition_gte?: InputMaybe<Scalars['Int']>;\n  treePosition_lt?: InputMaybe<Scalars['Int']>;\n  treePosition_lte?: InputMaybe<Scalars['Int']>;\n  treePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType_isNull?: InputMaybe<Scalars['Boolean']>;\n  commitmentType_eq?: InputMaybe<CommitmentType>;\n  commitmentType_not_eq?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hash_isNull?: InputMaybe<Scalars['Boolean']>;\n  hash_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_not_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_gt?: InputMaybe<Scalars['BigInt']>;\n  hash_gte?: InputMaybe<Scalars['BigInt']>;\n  hash_lt?: InputMaybe<Scalars['BigInt']>;\n  hash_lte?: InputMaybe<Scalars['BigInt']>;\n  hash_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  AND?: InputMaybe<Array<CommitmentWhereInput>>;\n  OR?: InputMaybe<Array<CommitmentWhereInput>>;\n};\n\nexport type CommitmentOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'treeNumber_ASC'\n  | 'treeNumber_DESC'\n  | 'treeNumber_ASC_NULLS_FIRST'\n  | 'treeNumber_DESC_NULLS_LAST'\n  | 'batchStartTreePosition_ASC'\n  | 'batchStartTreePosition_DESC'\n  | 'batchStartTreePosition_ASC_NULLS_FIRST'\n  | 'batchStartTreePosition_DESC_NULLS_LAST'\n  | 'treePosition_ASC'\n  | 'treePosition_DESC'\n  | 'treePosition_ASC_NULLS_FIRST'\n  | 'treePosition_DESC_NULLS_LAST'\n  | 'commitmentType_ASC'\n  | 'commitmentType_DESC'\n  | 'commitmentType_ASC_NULLS_FIRST'\n  | 'commitmentType_DESC_NULLS_LAST'\n  | 'hash_ASC'\n  | 'hash_DESC'\n  | 'hash_ASC_NULLS_FIRST'\n  | 'hash_DESC_NULLS_LAST'\n  | '_type_ASC'\n  | '_type_DESC';\n\nexport type CommitmentsConnection = {\n  edges: Array<CommitmentEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type CommitmentEdge = {\n  node: Commitment;\n  cursor: Scalars['String'];\n};\n\nexport type LegacyEncryptedCommitment = Commitment & {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  batchStartTreePosition: Scalars['Int'];\n  treePosition: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hash: Scalars['BigInt'];\n  ciphertext: LegacyCommitmentCiphertext;\n};\n\nexport type LegacyEncryptedCommitmentWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  treeNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  treeNumber_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  batchStartTreePosition_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  treePosition_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_gt?: InputMaybe<Scalars['Int']>;\n  treePosition_gte?: InputMaybe<Scalars['Int']>;\n  treePosition_lt?: InputMaybe<Scalars['Int']>;\n  treePosition_lte?: InputMaybe<Scalars['Int']>;\n  treePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType_isNull?: InputMaybe<Scalars['Boolean']>;\n  commitmentType_eq?: InputMaybe<CommitmentType>;\n  commitmentType_not_eq?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hash_isNull?: InputMaybe<Scalars['Boolean']>;\n  hash_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_not_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_gt?: InputMaybe<Scalars['BigInt']>;\n  hash_gte?: InputMaybe<Scalars['BigInt']>;\n  hash_lt?: InputMaybe<Scalars['BigInt']>;\n  hash_lte?: InputMaybe<Scalars['BigInt']>;\n  hash_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  ciphertext_isNull?: InputMaybe<Scalars['Boolean']>;\n  ciphertext?: InputMaybe<LegacyCommitmentCiphertextWhereInput>;\n  AND?: InputMaybe<Array<LegacyEncryptedCommitmentWhereInput>>;\n  OR?: InputMaybe<Array<LegacyEncryptedCommitmentWhereInput>>;\n};\n\nexport type LegacyEncryptedCommitmentOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'treeNumber_ASC'\n  | 'treeNumber_DESC'\n  | 'treeNumber_ASC_NULLS_FIRST'\n  | 'treeNumber_DESC_NULLS_LAST'\n  | 'batchStartTreePosition_ASC'\n  | 'batchStartTreePosition_DESC'\n  | 'batchStartTreePosition_ASC_NULLS_FIRST'\n  | 'batchStartTreePosition_DESC_NULLS_LAST'\n  | 'treePosition_ASC'\n  | 'treePosition_DESC'\n  | 'treePosition_ASC_NULLS_FIRST'\n  | 'treePosition_DESC_NULLS_LAST'\n  | 'commitmentType_ASC'\n  | 'commitmentType_DESC'\n  | 'commitmentType_ASC_NULLS_FIRST'\n  | 'commitmentType_DESC_NULLS_LAST'\n  | 'hash_ASC'\n  | 'hash_DESC'\n  | 'hash_ASC_NULLS_FIRST'\n  | 'hash_DESC_NULLS_LAST'\n  | 'ciphertext_id_ASC'\n  | 'ciphertext_id_DESC'\n  | 'ciphertext_id_ASC_NULLS_FIRST'\n  | 'ciphertext_id_DESC_NULLS_LAST';\n\nexport type LegacyEncryptedCommitmentsConnection = {\n  edges: Array<LegacyEncryptedCommitmentEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type LegacyEncryptedCommitmentEdge = {\n  node: LegacyEncryptedCommitment;\n  cursor: Scalars['String'];\n};\n\nexport type ShieldCommitment = Commitment & {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  batchStartTreePosition: Scalars['Int'];\n  treePosition: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hash: Scalars['BigInt'];\n  preimage: CommitmentPreimage;\n  encryptedBundle: Array<Scalars['Bytes']>;\n  shieldKey: Scalars['Bytes'];\n  fee?: Maybe<Scalars['BigInt']>;\n};\n\nexport type ShieldCommitmentWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  treeNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  treeNumber_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  batchStartTreePosition_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  treePosition_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_gt?: InputMaybe<Scalars['Int']>;\n  treePosition_gte?: InputMaybe<Scalars['Int']>;\n  treePosition_lt?: InputMaybe<Scalars['Int']>;\n  treePosition_lte?: InputMaybe<Scalars['Int']>;\n  treePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType_isNull?: InputMaybe<Scalars['Boolean']>;\n  commitmentType_eq?: InputMaybe<CommitmentType>;\n  commitmentType_not_eq?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hash_isNull?: InputMaybe<Scalars['Boolean']>;\n  hash_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_not_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_gt?: InputMaybe<Scalars['BigInt']>;\n  hash_gte?: InputMaybe<Scalars['BigInt']>;\n  hash_lt?: InputMaybe<Scalars['BigInt']>;\n  hash_lte?: InputMaybe<Scalars['BigInt']>;\n  hash_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  preimage_isNull?: InputMaybe<Scalars['Boolean']>;\n  preimage?: InputMaybe<CommitmentPreimageWhereInput>;\n  encryptedBundle_isNull?: InputMaybe<Scalars['Boolean']>;\n  encryptedBundle_containsAll?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedBundle_containsAny?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedBundle_containsNone?: InputMaybe<Array<Scalars['Bytes']>>;\n  shieldKey_isNull?: InputMaybe<Scalars['Boolean']>;\n  shieldKey_eq?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_not_eq?: InputMaybe<Scalars['Bytes']>;\n  fee_isNull?: InputMaybe<Scalars['Boolean']>;\n  fee_eq?: InputMaybe<Scalars['BigInt']>;\n  fee_not_eq?: InputMaybe<Scalars['BigInt']>;\n  fee_gt?: InputMaybe<Scalars['BigInt']>;\n  fee_gte?: InputMaybe<Scalars['BigInt']>;\n  fee_lt?: InputMaybe<Scalars['BigInt']>;\n  fee_lte?: InputMaybe<Scalars['BigInt']>;\n  fee_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  fee_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  AND?: InputMaybe<Array<ShieldCommitmentWhereInput>>;\n  OR?: InputMaybe<Array<ShieldCommitmentWhereInput>>;\n};\n\nexport type ShieldCommitmentOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'treeNumber_ASC'\n  | 'treeNumber_DESC'\n  | 'treeNumber_ASC_NULLS_FIRST'\n  | 'treeNumber_DESC_NULLS_LAST'\n  | 'batchStartTreePosition_ASC'\n  | 'batchStartTreePosition_DESC'\n  | 'batchStartTreePosition_ASC_NULLS_FIRST'\n  | 'batchStartTreePosition_DESC_NULLS_LAST'\n  | 'treePosition_ASC'\n  | 'treePosition_DESC'\n  | 'treePosition_ASC_NULLS_FIRST'\n  | 'treePosition_DESC_NULLS_LAST'\n  | 'commitmentType_ASC'\n  | 'commitmentType_DESC'\n  | 'commitmentType_ASC_NULLS_FIRST'\n  | 'commitmentType_DESC_NULLS_LAST'\n  | 'hash_ASC'\n  | 'hash_DESC'\n  | 'hash_ASC_NULLS_FIRST'\n  | 'hash_DESC_NULLS_LAST'\n  | 'preimage_id_ASC'\n  | 'preimage_id_DESC'\n  | 'preimage_id_ASC_NULLS_FIRST'\n  | 'preimage_id_DESC_NULLS_LAST'\n  | 'preimage_npk_ASC'\n  | 'preimage_npk_DESC'\n  | 'preimage_npk_ASC_NULLS_FIRST'\n  | 'preimage_npk_DESC_NULLS_LAST'\n  | 'preimage_value_ASC'\n  | 'preimage_value_DESC'\n  | 'preimage_value_ASC_NULLS_FIRST'\n  | 'preimage_value_DESC_NULLS_LAST'\n  | 'shieldKey_ASC'\n  | 'shieldKey_DESC'\n  | 'shieldKey_ASC_NULLS_FIRST'\n  | 'shieldKey_DESC_NULLS_LAST'\n  | 'fee_ASC'\n  | 'fee_DESC'\n  | 'fee_ASC_NULLS_FIRST'\n  | 'fee_DESC_NULLS_LAST';\n\nexport type ShieldCommitmentsConnection = {\n  edges: Array<ShieldCommitmentEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type ShieldCommitmentEdge = {\n  node: ShieldCommitment;\n  cursor: Scalars['String'];\n};\n\nexport type TransactCommitment = Commitment & {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  batchStartTreePosition: Scalars['Int'];\n  treePosition: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hash: Scalars['BigInt'];\n  ciphertext: CommitmentCiphertext;\n};\n\nexport type TransactCommitmentWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  treeNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  treeNumber_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  batchStartTreePosition_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  treePosition_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_not_eq?: InputMaybe<Scalars['Int']>;\n  treePosition_gt?: InputMaybe<Scalars['Int']>;\n  treePosition_gte?: InputMaybe<Scalars['Int']>;\n  treePosition_lt?: InputMaybe<Scalars['Int']>;\n  treePosition_lte?: InputMaybe<Scalars['Int']>;\n  treePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType_isNull?: InputMaybe<Scalars['Boolean']>;\n  commitmentType_eq?: InputMaybe<CommitmentType>;\n  commitmentType_not_eq?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hash_isNull?: InputMaybe<Scalars['Boolean']>;\n  hash_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_not_eq?: InputMaybe<Scalars['BigInt']>;\n  hash_gt?: InputMaybe<Scalars['BigInt']>;\n  hash_gte?: InputMaybe<Scalars['BigInt']>;\n  hash_lt?: InputMaybe<Scalars['BigInt']>;\n  hash_lte?: InputMaybe<Scalars['BigInt']>;\n  hash_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  hash_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  ciphertext_isNull?: InputMaybe<Scalars['Boolean']>;\n  ciphertext?: InputMaybe<CommitmentCiphertextWhereInput>;\n  AND?: InputMaybe<Array<TransactCommitmentWhereInput>>;\n  OR?: InputMaybe<Array<TransactCommitmentWhereInput>>;\n};\n\nexport type TransactCommitmentOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'treeNumber_ASC'\n  | 'treeNumber_DESC'\n  | 'treeNumber_ASC_NULLS_FIRST'\n  | 'treeNumber_DESC_NULLS_LAST'\n  | 'batchStartTreePosition_ASC'\n  | 'batchStartTreePosition_DESC'\n  | 'batchStartTreePosition_ASC_NULLS_FIRST'\n  | 'batchStartTreePosition_DESC_NULLS_LAST'\n  | 'treePosition_ASC'\n  | 'treePosition_DESC'\n  | 'treePosition_ASC_NULLS_FIRST'\n  | 'treePosition_DESC_NULLS_LAST'\n  | 'commitmentType_ASC'\n  | 'commitmentType_DESC'\n  | 'commitmentType_ASC_NULLS_FIRST'\n  | 'commitmentType_DESC_NULLS_LAST'\n  | 'hash_ASC'\n  | 'hash_DESC'\n  | 'hash_ASC_NULLS_FIRST'\n  | 'hash_DESC_NULLS_LAST'\n  | 'ciphertext_id_ASC'\n  | 'ciphertext_id_DESC'\n  | 'ciphertext_id_ASC_NULLS_FIRST'\n  | 'ciphertext_id_DESC_NULLS_LAST'\n  | 'ciphertext_blindedSenderViewingKey_ASC'\n  | 'ciphertext_blindedSenderViewingKey_DESC'\n  | 'ciphertext_blindedSenderViewingKey_ASC_NULLS_FIRST'\n  | 'ciphertext_blindedSenderViewingKey_DESC_NULLS_LAST'\n  | 'ciphertext_blindedReceiverViewingKey_ASC'\n  | 'ciphertext_blindedReceiverViewingKey_DESC'\n  | 'ciphertext_blindedReceiverViewingKey_ASC_NULLS_FIRST'\n  | 'ciphertext_blindedReceiverViewingKey_DESC_NULLS_LAST'\n  | 'ciphertext_annotationData_ASC'\n  | 'ciphertext_annotationData_DESC'\n  | 'ciphertext_annotationData_ASC_NULLS_FIRST'\n  | 'ciphertext_annotationData_DESC_NULLS_LAST'\n  | 'ciphertext_memo_ASC'\n  | 'ciphertext_memo_DESC'\n  | 'ciphertext_memo_ASC_NULLS_FIRST'\n  | 'ciphertext_memo_DESC_NULLS_LAST';\n\nexport type TransactCommitmentsConnection = {\n  edges: Array<TransactCommitmentEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type TransactCommitmentEdge = {\n  node: TransactCommitment;\n  cursor: Scalars['String'];\n};\n\nexport type Unshield = {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  to: Scalars['Bytes'];\n  token: Token;\n  amount: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  eventLogIndex: Scalars['BigInt'];\n};\n\nexport type UnshieldWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  to_isNull?: InputMaybe<Scalars['Boolean']>;\n  to_eq?: InputMaybe<Scalars['Bytes']>;\n  to_not_eq?: InputMaybe<Scalars['Bytes']>;\n  token_isNull?: InputMaybe<Scalars['Boolean']>;\n  token?: InputMaybe<TokenWhereInput>;\n  amount_isNull?: InputMaybe<Scalars['Boolean']>;\n  amount_eq?: InputMaybe<Scalars['BigInt']>;\n  amount_not_eq?: InputMaybe<Scalars['BigInt']>;\n  amount_gt?: InputMaybe<Scalars['BigInt']>;\n  amount_gte?: InputMaybe<Scalars['BigInt']>;\n  amount_lt?: InputMaybe<Scalars['BigInt']>;\n  amount_lte?: InputMaybe<Scalars['BigInt']>;\n  amount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  fee_isNull?: InputMaybe<Scalars['Boolean']>;\n  fee_eq?: InputMaybe<Scalars['BigInt']>;\n  fee_not_eq?: InputMaybe<Scalars['BigInt']>;\n  fee_gt?: InputMaybe<Scalars['BigInt']>;\n  fee_gte?: InputMaybe<Scalars['BigInt']>;\n  fee_lt?: InputMaybe<Scalars['BigInt']>;\n  fee_lte?: InputMaybe<Scalars['BigInt']>;\n  fee_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  fee_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  eventLogIndex_isNull?: InputMaybe<Scalars['Boolean']>;\n  eventLogIndex_eq?: InputMaybe<Scalars['BigInt']>;\n  eventLogIndex_not_eq?: InputMaybe<Scalars['BigInt']>;\n  eventLogIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  eventLogIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  eventLogIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  eventLogIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  eventLogIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  eventLogIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  AND?: InputMaybe<Array<UnshieldWhereInput>>;\n  OR?: InputMaybe<Array<UnshieldWhereInput>>;\n};\n\nexport type UnshieldOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'to_ASC'\n  | 'to_DESC'\n  | 'to_ASC_NULLS_FIRST'\n  | 'to_DESC_NULLS_LAST'\n  | 'token_id_ASC'\n  | 'token_id_DESC'\n  | 'token_id_ASC_NULLS_FIRST'\n  | 'token_id_DESC_NULLS_LAST'\n  | 'token_tokenType_ASC'\n  | 'token_tokenType_DESC'\n  | 'token_tokenType_ASC_NULLS_FIRST'\n  | 'token_tokenType_DESC_NULLS_LAST'\n  | 'token_tokenAddress_ASC'\n  | 'token_tokenAddress_DESC'\n  | 'token_tokenAddress_ASC_NULLS_FIRST'\n  | 'token_tokenAddress_DESC_NULLS_LAST'\n  | 'token_tokenSubID_ASC'\n  | 'token_tokenSubID_DESC'\n  | 'token_tokenSubID_ASC_NULLS_FIRST'\n  | 'token_tokenSubID_DESC_NULLS_LAST'\n  | 'amount_ASC'\n  | 'amount_DESC'\n  | 'amount_ASC_NULLS_FIRST'\n  | 'amount_DESC_NULLS_LAST'\n  | 'fee_ASC'\n  | 'fee_DESC'\n  | 'fee_ASC_NULLS_FIRST'\n  | 'fee_DESC_NULLS_LAST'\n  | 'eventLogIndex_ASC'\n  | 'eventLogIndex_DESC'\n  | 'eventLogIndex_ASC_NULLS_FIRST'\n  | 'eventLogIndex_DESC_NULLS_LAST';\n\nexport type UnshieldsConnection = {\n  edges: Array<UnshieldEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type UnshieldEdge = {\n  node: Unshield;\n  cursor: Scalars['String'];\n};\n\nexport type Nullifier = {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  nullifier: Scalars['Bytes'];\n};\n\nexport type NullifierWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  treeNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  treeNumber_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  nullifier_isNull?: InputMaybe<Scalars['Boolean']>;\n  nullifier_eq?: InputMaybe<Scalars['Bytes']>;\n  nullifier_not_eq?: InputMaybe<Scalars['Bytes']>;\n  AND?: InputMaybe<Array<NullifierWhereInput>>;\n  OR?: InputMaybe<Array<NullifierWhereInput>>;\n};\n\nexport type NullifierOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'treeNumber_ASC'\n  | 'treeNumber_DESC'\n  | 'treeNumber_ASC_NULLS_FIRST'\n  | 'treeNumber_DESC_NULLS_LAST'\n  | 'nullifier_ASC'\n  | 'nullifier_DESC'\n  | 'nullifier_ASC_NULLS_FIRST'\n  | 'nullifier_DESC_NULLS_LAST';\n\nexport type NullifiersConnection = {\n  edges: Array<NullifierEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type NullifierEdge = {\n  node: Nullifier;\n  cursor: Scalars['String'];\n};\n\nexport type Transaction = TransactionInterface & {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  merkleRoot: Scalars['Bytes'];\n  nullifiers: Array<Scalars['Bytes']>;\n  commitments: Array<Scalars['Bytes']>;\n  boundParamsHash: Scalars['Bytes'];\n  hasUnshield: Scalars['Boolean'];\n  utxoTreeIn: Scalars['BigInt'];\n  utxoTreeOut: Scalars['BigInt'];\n  utxoBatchStartPositionOut: Scalars['BigInt'];\n  unshieldToken: Token;\n  unshieldToAddress: Scalars['Bytes'];\n  unshieldValue: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  verificationHash: Scalars['Bytes'];\n};\n\nexport type TransactionInterface = {\n  id: Scalars['String'];\n  blockNumber: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  merkleRoot: Scalars['Bytes'];\n  nullifiers: Array<Scalars['Bytes']>;\n  commitments: Array<Scalars['Bytes']>;\n  boundParamsHash: Scalars['Bytes'];\n  hasUnshield: Scalars['Boolean'];\n  utxoTreeIn: Scalars['BigInt'];\n  utxoTreeOut: Scalars['BigInt'];\n  utxoBatchStartPositionOut: Scalars['BigInt'];\n  unshieldToken: Token;\n  unshieldToAddress: Scalars['Bytes'];\n  unshieldValue: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  verificationHash: Scalars['Bytes'];\n};\n\nexport type TransactionWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  transactionHash_eq?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  merkleRoot_isNull?: InputMaybe<Scalars['Boolean']>;\n  merkleRoot_eq?: InputMaybe<Scalars['Bytes']>;\n  merkleRoot_not_eq?: InputMaybe<Scalars['Bytes']>;\n  nullifiers_isNull?: InputMaybe<Scalars['Boolean']>;\n  nullifiers_containsAll?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifiers_containsAny?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifiers_containsNone?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_isNull?: InputMaybe<Scalars['Boolean']>;\n  commitments_containsAll?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_containsAny?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_containsNone?: InputMaybe<Array<Scalars['Bytes']>>;\n  boundParamsHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  boundParamsHash_eq?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  hasUnshield_isNull?: InputMaybe<Scalars['Boolean']>;\n  hasUnshield_eq?: InputMaybe<Scalars['Boolean']>;\n  hasUnshield_not_eq?: InputMaybe<Scalars['Boolean']>;\n  utxoTreeIn_isNull?: InputMaybe<Scalars['Boolean']>;\n  utxoTreeIn_eq?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_not_eq?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_gt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_gte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_lt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_lte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoTreeIn_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoTreeOut_isNull?: InputMaybe<Scalars['Boolean']>;\n  utxoTreeOut_eq?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_not_eq?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_gt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_gte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_lt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_lte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoTreeOut_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoBatchStartPositionOut_isNull?: InputMaybe<Scalars['Boolean']>;\n  utxoBatchStartPositionOut_eq?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_not_eq?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_gt?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_gte?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_lt?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_lte?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoBatchStartPositionOut_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  unshieldToken_isNull?: InputMaybe<Scalars['Boolean']>;\n  unshieldToken?: InputMaybe<TokenWhereInput>;\n  unshieldToAddress_isNull?: InputMaybe<Scalars['Boolean']>;\n  unshieldToAddress_eq?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_not_eq?: InputMaybe<Scalars['Bytes']>;\n  unshieldValue_isNull?: InputMaybe<Scalars['Boolean']>;\n  unshieldValue_eq?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_not_eq?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_gt?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_gte?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_lt?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_lte?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  unshieldValue_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockTimestamp_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not_eq?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  verificationHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  verificationHash_eq?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  AND?: InputMaybe<Array<TransactionWhereInput>>;\n  OR?: InputMaybe<Array<TransactionWhereInput>>;\n};\n\nexport type TransactionOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'blockNumber_ASC'\n  | 'blockNumber_DESC'\n  | 'blockNumber_ASC_NULLS_FIRST'\n  | 'blockNumber_DESC_NULLS_LAST'\n  | 'transactionHash_ASC'\n  | 'transactionHash_DESC'\n  | 'transactionHash_ASC_NULLS_FIRST'\n  | 'transactionHash_DESC_NULLS_LAST'\n  | 'merkleRoot_ASC'\n  | 'merkleRoot_DESC'\n  | 'merkleRoot_ASC_NULLS_FIRST'\n  | 'merkleRoot_DESC_NULLS_LAST'\n  | 'boundParamsHash_ASC'\n  | 'boundParamsHash_DESC'\n  | 'boundParamsHash_ASC_NULLS_FIRST'\n  | 'boundParamsHash_DESC_NULLS_LAST'\n  | 'hasUnshield_ASC'\n  | 'hasUnshield_DESC'\n  | 'hasUnshield_ASC_NULLS_FIRST'\n  | 'hasUnshield_DESC_NULLS_LAST'\n  | 'utxoTreeIn_ASC'\n  | 'utxoTreeIn_DESC'\n  | 'utxoTreeIn_ASC_NULLS_FIRST'\n  | 'utxoTreeIn_DESC_NULLS_LAST'\n  | 'utxoTreeOut_ASC'\n  | 'utxoTreeOut_DESC'\n  | 'utxoTreeOut_ASC_NULLS_FIRST'\n  | 'utxoTreeOut_DESC_NULLS_LAST'\n  | 'utxoBatchStartPositionOut_ASC'\n  | 'utxoBatchStartPositionOut_DESC'\n  | 'utxoBatchStartPositionOut_ASC_NULLS_FIRST'\n  | 'utxoBatchStartPositionOut_DESC_NULLS_LAST'\n  | 'unshieldToken_id_ASC'\n  | 'unshieldToken_id_DESC'\n  | 'unshieldToken_id_ASC_NULLS_FIRST'\n  | 'unshieldToken_id_DESC_NULLS_LAST'\n  | 'unshieldToken_tokenType_ASC'\n  | 'unshieldToken_tokenType_DESC'\n  | 'unshieldToken_tokenType_ASC_NULLS_FIRST'\n  | 'unshieldToken_tokenType_DESC_NULLS_LAST'\n  | 'unshieldToken_tokenAddress_ASC'\n  | 'unshieldToken_tokenAddress_DESC'\n  | 'unshieldToken_tokenAddress_ASC_NULLS_FIRST'\n  | 'unshieldToken_tokenAddress_DESC_NULLS_LAST'\n  | 'unshieldToken_tokenSubID_ASC'\n  | 'unshieldToken_tokenSubID_DESC'\n  | 'unshieldToken_tokenSubID_ASC_NULLS_FIRST'\n  | 'unshieldToken_tokenSubID_DESC_NULLS_LAST'\n  | 'unshieldToAddress_ASC'\n  | 'unshieldToAddress_DESC'\n  | 'unshieldToAddress_ASC_NULLS_FIRST'\n  | 'unshieldToAddress_DESC_NULLS_LAST'\n  | 'unshieldValue_ASC'\n  | 'unshieldValue_DESC'\n  | 'unshieldValue_ASC_NULLS_FIRST'\n  | 'unshieldValue_DESC_NULLS_LAST'\n  | 'blockTimestamp_ASC'\n  | 'blockTimestamp_DESC'\n  | 'blockTimestamp_ASC_NULLS_FIRST'\n  | 'blockTimestamp_DESC_NULLS_LAST'\n  | 'verificationHash_ASC'\n  | 'verificationHash_DESC'\n  | 'verificationHash_ASC_NULLS_FIRST'\n  | 'verificationHash_DESC_NULLS_LAST';\n\nexport type TransactionsConnection = {\n  edges: Array<TransactionEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type TransactionEdge = {\n  node: Transaction;\n  cursor: Scalars['String'];\n};\n\nexport type VerificationHash = {\n  id: Scalars['String'];\n  verificationHash: Scalars['Bytes'];\n};\n\nexport type VerificationHashWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  verificationHash_isNull?: InputMaybe<Scalars['Boolean']>;\n  verificationHash_eq?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_not_eq?: InputMaybe<Scalars['Bytes']>;\n  AND?: InputMaybe<Array<VerificationHashWhereInput>>;\n  OR?: InputMaybe<Array<VerificationHashWhereInput>>;\n};\n\nexport type VerificationHashOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'verificationHash_ASC'\n  | 'verificationHash_DESC'\n  | 'verificationHash_ASC_NULLS_FIRST'\n  | 'verificationHash_DESC_NULLS_LAST';\n\nexport type VerificationHashesConnection = {\n  edges: Array<VerificationHashEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type VerificationHashEdge = {\n  node: VerificationHash;\n  cursor: Scalars['String'];\n};\n\nexport type CommitmentBatchEventNew = {\n  id: Scalars['String'];\n  treeNumber: Scalars['BigInt'];\n  batchStartTreePosition: Scalars['BigInt'];\n};\n\nexport type CommitmentBatchEventNewWhereInput = {\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  treeNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  treeNumber_eq?: InputMaybe<Scalars['BigInt']>;\n  treeNumber_not_eq?: InputMaybe<Scalars['BigInt']>;\n  treeNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  treeNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  treeNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  treeNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  batchStartTreePosition_isNull?: InputMaybe<Scalars['Boolean']>;\n  batchStartTreePosition_eq?: InputMaybe<Scalars['BigInt']>;\n  batchStartTreePosition_not_eq?: InputMaybe<Scalars['BigInt']>;\n  batchStartTreePosition_gt?: InputMaybe<Scalars['BigInt']>;\n  batchStartTreePosition_gte?: InputMaybe<Scalars['BigInt']>;\n  batchStartTreePosition_lt?: InputMaybe<Scalars['BigInt']>;\n  batchStartTreePosition_lte?: InputMaybe<Scalars['BigInt']>;\n  batchStartTreePosition_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  batchStartTreePosition_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  AND?: InputMaybe<Array<CommitmentBatchEventNewWhereInput>>;\n  OR?: InputMaybe<Array<CommitmentBatchEventNewWhereInput>>;\n};\n\nexport type CommitmentBatchEventNewOrderByInput =\n  | 'id_ASC'\n  | 'id_DESC'\n  | 'id_ASC_NULLS_FIRST'\n  | 'id_DESC_NULLS_LAST'\n  | 'treeNumber_ASC'\n  | 'treeNumber_DESC'\n  | 'treeNumber_ASC_NULLS_FIRST'\n  | 'treeNumber_DESC_NULLS_LAST'\n  | 'batchStartTreePosition_ASC'\n  | 'batchStartTreePosition_DESC'\n  | 'batchStartTreePosition_ASC_NULLS_FIRST'\n  | 'batchStartTreePosition_DESC_NULLS_LAST';\n\nexport type CommitmentBatchEventNewsConnection = {\n  edges: Array<CommitmentBatchEventNewEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type CommitmentBatchEventNewEdge = {\n  node: CommitmentBatchEventNew;\n  cursor: Scalars['String'];\n};\n\nexport type SquidStatus = {\n  /** The height of the processed part of the chain */\n  height?: Maybe<Scalars['Int']>;\n};\n\n  export type QuerySdk = {\n      /** null **/\n  tokens: InContextSdkMethod<Query['tokens'], QuerytokensArgs, MeshContext>,\n  /** null **/\n  tokenById: InContextSdkMethod<Query['tokenById'], QuerytokenByIdArgs, MeshContext>,\n  /** null **/\n  tokenByUniqueInput: InContextSdkMethod<Query['tokenByUniqueInput'], QuerytokenByUniqueInputArgs, MeshContext>,\n  /** null **/\n  tokensConnection: InContextSdkMethod<Query['tokensConnection'], QuerytokensConnectionArgs, MeshContext>,\n  /** null **/\n  commitmentPreimages: InContextSdkMethod<Query['commitmentPreimages'], QuerycommitmentPreimagesArgs, MeshContext>,\n  /** null **/\n  commitmentPreimageById: InContextSdkMethod<Query['commitmentPreimageById'], QuerycommitmentPreimageByIdArgs, MeshContext>,\n  /** null **/\n  commitmentPreimageByUniqueInput: InContextSdkMethod<Query['commitmentPreimageByUniqueInput'], QuerycommitmentPreimageByUniqueInputArgs, MeshContext>,\n  /** null **/\n  commitmentPreimagesConnection: InContextSdkMethod<Query['commitmentPreimagesConnection'], QuerycommitmentPreimagesConnectionArgs, MeshContext>,\n  /** null **/\n  ciphertexts: InContextSdkMethod<Query['ciphertexts'], QueryciphertextsArgs, MeshContext>,\n  /** null **/\n  ciphertextById: InContextSdkMethod<Query['ciphertextById'], QueryciphertextByIdArgs, MeshContext>,\n  /** null **/\n  ciphertextByUniqueInput: InContextSdkMethod<Query['ciphertextByUniqueInput'], QueryciphertextByUniqueInputArgs, MeshContext>,\n  /** null **/\n  ciphertextsConnection: InContextSdkMethod<Query['ciphertextsConnection'], QueryciphertextsConnectionArgs, MeshContext>,\n  /** null **/\n  legacyCommitmentCiphertexts: InContextSdkMethod<Query['legacyCommitmentCiphertexts'], QuerylegacyCommitmentCiphertextsArgs, MeshContext>,\n  /** null **/\n  legacyCommitmentCiphertextById: InContextSdkMethod<Query['legacyCommitmentCiphertextById'], QuerylegacyCommitmentCiphertextByIdArgs, MeshContext>,\n  /** null **/\n  legacyCommitmentCiphertextByUniqueInput: InContextSdkMethod<Query['legacyCommitmentCiphertextByUniqueInput'], QuerylegacyCommitmentCiphertextByUniqueInputArgs, MeshContext>,\n  /** null **/\n  legacyCommitmentCiphertextsConnection: InContextSdkMethod<Query['legacyCommitmentCiphertextsConnection'], QuerylegacyCommitmentCiphertextsConnectionArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertexts: InContextSdkMethod<Query['commitmentCiphertexts'], QuerycommitmentCiphertextsArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertextById: InContextSdkMethod<Query['commitmentCiphertextById'], QuerycommitmentCiphertextByIdArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertextByUniqueInput: InContextSdkMethod<Query['commitmentCiphertextByUniqueInput'], QuerycommitmentCiphertextByUniqueInputArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertextsConnection: InContextSdkMethod<Query['commitmentCiphertextsConnection'], QuerycommitmentCiphertextsConnectionArgs, MeshContext>,\n  /** null **/\n  legacyGeneratedCommitments: InContextSdkMethod<Query['legacyGeneratedCommitments'], QuerylegacyGeneratedCommitmentsArgs, MeshContext>,\n  /** null **/\n  legacyGeneratedCommitmentById: InContextSdkMethod<Query['legacyGeneratedCommitmentById'], QuerylegacyGeneratedCommitmentByIdArgs, MeshContext>,\n  /** null **/\n  legacyGeneratedCommitmentByUniqueInput: InContextSdkMethod<Query['legacyGeneratedCommitmentByUniqueInput'], QuerylegacyGeneratedCommitmentByUniqueInputArgs, MeshContext>,\n  /** null **/\n  legacyGeneratedCommitmentsConnection: InContextSdkMethod<Query['legacyGeneratedCommitmentsConnection'], QuerylegacyGeneratedCommitmentsConnectionArgs, MeshContext>,\n  /** null **/\n  commitments: InContextSdkMethod<Query['commitments'], QuerycommitmentsArgs, MeshContext>,\n  /** null **/\n  commitmentsConnection: InContextSdkMethod<Query['commitmentsConnection'], QuerycommitmentsConnectionArgs, MeshContext>,\n  /** null **/\n  legacyEncryptedCommitments: InContextSdkMethod<Query['legacyEncryptedCommitments'], QuerylegacyEncryptedCommitmentsArgs, MeshContext>,\n  /** null **/\n  legacyEncryptedCommitmentById: InContextSdkMethod<Query['legacyEncryptedCommitmentById'], QuerylegacyEncryptedCommitmentByIdArgs, MeshContext>,\n  /** null **/\n  legacyEncryptedCommitmentByUniqueInput: InContextSdkMethod<Query['legacyEncryptedCommitmentByUniqueInput'], QuerylegacyEncryptedCommitmentByUniqueInputArgs, MeshContext>,\n  /** null **/\n  legacyEncryptedCommitmentsConnection: InContextSdkMethod<Query['legacyEncryptedCommitmentsConnection'], QuerylegacyEncryptedCommitmentsConnectionArgs, MeshContext>,\n  /** null **/\n  shieldCommitments: InContextSdkMethod<Query['shieldCommitments'], QueryshieldCommitmentsArgs, MeshContext>,\n  /** null **/\n  shieldCommitmentById: InContextSdkMethod<Query['shieldCommitmentById'], QueryshieldCommitmentByIdArgs, MeshContext>,\n  /** null **/\n  shieldCommitmentByUniqueInput: InContextSdkMethod<Query['shieldCommitmentByUniqueInput'], QueryshieldCommitmentByUniqueInputArgs, MeshContext>,\n  /** null **/\n  shieldCommitmentsConnection: InContextSdkMethod<Query['shieldCommitmentsConnection'], QueryshieldCommitmentsConnectionArgs, MeshContext>,\n  /** null **/\n  transactCommitments: InContextSdkMethod<Query['transactCommitments'], QuerytransactCommitmentsArgs, MeshContext>,\n  /** null **/\n  transactCommitmentById: InContextSdkMethod<Query['transactCommitmentById'], QuerytransactCommitmentByIdArgs, MeshContext>,\n  /** null **/\n  transactCommitmentByUniqueInput: InContextSdkMethod<Query['transactCommitmentByUniqueInput'], QuerytransactCommitmentByUniqueInputArgs, MeshContext>,\n  /** null **/\n  transactCommitmentsConnection: InContextSdkMethod<Query['transactCommitmentsConnection'], QuerytransactCommitmentsConnectionArgs, MeshContext>,\n  /** null **/\n  unshields: InContextSdkMethod<Query['unshields'], QueryunshieldsArgs, MeshContext>,\n  /** null **/\n  unshieldById: InContextSdkMethod<Query['unshieldById'], QueryunshieldByIdArgs, MeshContext>,\n  /** null **/\n  unshieldByUniqueInput: InContextSdkMethod<Query['unshieldByUniqueInput'], QueryunshieldByUniqueInputArgs, MeshContext>,\n  /** null **/\n  unshieldsConnection: InContextSdkMethod<Query['unshieldsConnection'], QueryunshieldsConnectionArgs, MeshContext>,\n  /** null **/\n  nullifiers: InContextSdkMethod<Query['nullifiers'], QuerynullifiersArgs, MeshContext>,\n  /** null **/\n  nullifierById: InContextSdkMethod<Query['nullifierById'], QuerynullifierByIdArgs, MeshContext>,\n  /** null **/\n  nullifierByUniqueInput: InContextSdkMethod<Query['nullifierByUniqueInput'], QuerynullifierByUniqueInputArgs, MeshContext>,\n  /** null **/\n  nullifiersConnection: InContextSdkMethod<Query['nullifiersConnection'], QuerynullifiersConnectionArgs, MeshContext>,\n  /** null **/\n  transactions: InContextSdkMethod<Query['transactions'], QuerytransactionsArgs, MeshContext>,\n  /** null **/\n  transactionById: InContextSdkMethod<Query['transactionById'], QuerytransactionByIdArgs, MeshContext>,\n  /** null **/\n  transactionByUniqueInput: InContextSdkMethod<Query['transactionByUniqueInput'], QuerytransactionByUniqueInputArgs, MeshContext>,\n  /** null **/\n  transactionsConnection: InContextSdkMethod<Query['transactionsConnection'], QuerytransactionsConnectionArgs, MeshContext>,\n  /** null **/\n  verificationHashes: InContextSdkMethod<Query['verificationHashes'], QueryverificationHashesArgs, MeshContext>,\n  /** null **/\n  verificationHashById: InContextSdkMethod<Query['verificationHashById'], QueryverificationHashByIdArgs, MeshContext>,\n  /** null **/\n  verificationHashByUniqueInput: InContextSdkMethod<Query['verificationHashByUniqueInput'], QueryverificationHashByUniqueInputArgs, MeshContext>,\n  /** null **/\n  verificationHashesConnection: InContextSdkMethod<Query['verificationHashesConnection'], QueryverificationHashesConnectionArgs, MeshContext>,\n  /** null **/\n  commitmentBatchEventNews: InContextSdkMethod<Query['commitmentBatchEventNews'], QuerycommitmentBatchEventNewsArgs, MeshContext>,\n  /** null **/\n  commitmentBatchEventNewById: InContextSdkMethod<Query['commitmentBatchEventNewById'], QuerycommitmentBatchEventNewByIdArgs, MeshContext>,\n  /** null **/\n  commitmentBatchEventNewByUniqueInput: InContextSdkMethod<Query['commitmentBatchEventNewByUniqueInput'], QuerycommitmentBatchEventNewByUniqueInputArgs, MeshContext>,\n  /** null **/\n  commitmentBatchEventNewsConnection: InContextSdkMethod<Query['commitmentBatchEventNewsConnection'], QuerycommitmentBatchEventNewsConnectionArgs, MeshContext>,\n  /** null **/\n  squidStatus: InContextSdkMethod<Query['squidStatus'], {}, MeshContext>\n  };\n\n  export type MutationSdk = {\n    \n  };\n\n  export type SubscriptionSdk = {\n    \n  };\n\n  export type Context = {\n      [\"txs-ethereum\"]: { Query: QuerySdk, Mutation: MutationSdk, Subscription: SubscriptionSdk },\n      \n    };\n}\n"]}