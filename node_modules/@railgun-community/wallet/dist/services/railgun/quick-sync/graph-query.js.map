{"version":3,"file":"graph-query.js","sourceRoot":"","sources":["../../../../src/services/railgun/quick-sync/graph-query.ts"],"names":[],"mappings":";;;AACA,oEAAyE;AAE5D,QAAA,YAAY,GAAsB;IAC7C,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,EAAE;IAClB,eAAe,EAAE,EAAE;CACpB,CAAC;AAEK,MAAM,mBAAmB,GAAG,KAAK,EAGtC,KAAqD,EACrD,WAAmB,EACnB,eAAuB,EACvB,cAA4B,EAAE,EACP,EAAE;IACzB,MAAM,UAAU,GAAG,MAAM,IAAA,8BAAc,EACrC,KAAK,CAAC,WAAW,CAAC,EAClB,KAAK,EACL,IAAI,KAAK,CAAC,wDAAwD,CAAC,CACpE,CAAC;IACF,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;QAC3B,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,YAAY,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAEpD,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM,IAAI,eAAe,CAAC;IACzD,MAAM,UAAU,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAEzD,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,KAAK,KAAK,CAAC;IACpD,IAAI,CAAC,SAAS,IAAI,eAAe,EAAE;QACjC,MAAM,IAAA,qBAAK,EAAC,GAAG,CAAC,CAAC;QACjB,OAAO,IAAA,2BAAmB,EACxB,KAAK,EACL,UAAU,CAAC,WAAW,EACtB,eAAe,EACf,YAAY,CACb,CAAC;KACH;IAED,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC;AAlCW,QAAA,mBAAmB,uBAkC9B","sourcesContent":["import { AccumulatedEvents } from '@railgun-community/engine';\nimport { delay, promiseTimeout } from '@railgun-community/shared-models';\n\nexport const EMPTY_EVENTS: AccumulatedEvents = {\n  commitmentEvents: [],\n  unshieldEvents: [],\n  nullifierEvents: [],\n};\n\nexport const autoPaginatingQuery = async <\n  ReturnType extends { blockNumber: string },\n>(\n  query: (blockNumber: string) => Promise<ReturnType[]>,\n  blockNumber: string,\n  maxQueryResults: number,\n  prevResults: ReturnType[] = [],\n): Promise<ReturnType[]> => {\n  const newResults = await promiseTimeout(\n    query(blockNumber),\n    20000,\n    new Error('Timeout querying Graph for QuickSync of RAILGUN Events'),\n  );\n  if (newResults.length === 0) {\n    return prevResults;\n  }\n\n  const totalResults = prevResults.concat(newResults); \n\n  const overLimit = totalResults.length >= maxQueryResults;\n  const lastResult = totalResults[totalResults.length - 1];\n\n  const shouldQueryMore = newResults.length === 10000;\n  if (!overLimit && shouldQueryMore) {\n    await delay(250);\n    return autoPaginatingQuery(\n      query,\n      lastResult.blockNumber,\n      maxQueryResults,\n      totalResults,\n    );\n  }\n\n  return totalResults;\n};\n"]}