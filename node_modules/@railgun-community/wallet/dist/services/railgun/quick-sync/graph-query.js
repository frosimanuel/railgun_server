"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.autoPaginatingQuery = exports.EMPTY_EVENTS = void 0;
const shared_models_1 = require("@railgun-community/shared-models");
exports.EMPTY_EVENTS = {
    commitmentEvents: [],
    unshieldEvents: [],
    nullifierEvents: [],
};
const autoPaginatingQuery = async (query, blockNumber, maxQueryResults, prevResults = []) => {
    const newResults = await (0, shared_models_1.promiseTimeout)(query(blockNumber), 20000, new Error('Timeout querying Graph for QuickSync of RAILGUN Events'));
    if (newResults.length === 0) {
        return prevResults;
    }
    const totalResults = prevResults.concat(newResults);
    const overLimit = totalResults.length >= maxQueryResults;
    const lastResult = totalResults[totalResults.length - 1];
    const shouldQueryMore = newResults.length === 10000;
    if (!overLimit && shouldQueryMore) {
        await (0, shared_models_1.delay)(250);
        return (0, exports.autoPaginatingQuery)(query, lastResult.blockNumber, maxQueryResults, totalResults);
    }
    return totalResults;
};
exports.autoPaginatingQuery = autoPaginatingQuery;
//# sourceMappingURL=graph-query.js.map