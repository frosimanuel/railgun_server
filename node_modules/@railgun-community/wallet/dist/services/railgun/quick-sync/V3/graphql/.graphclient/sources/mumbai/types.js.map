{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../../../../../src/services/railgun/quick-sync/V3/graphql/.graphclient/sources/mumbai/types.ts"],"names":[],"mappings":";AAAA,cAAc","sourcesContent":["// @ts-nocheck\n\nimport { InContextSdkMethod } from '@graphql-mesh/types';\nimport { MeshContext } from '@graphql-mesh/runtime';\n\nexport namespace MumbaiTypes {\n  export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BigDecimal: any;\n  BigInt: any;\n  Bytes: any;\n  Int8: any;\n};\n\nexport type BlockChangedFilter = {\n  number_gte: Scalars['Int'];\n};\n\nexport type Block_height = {\n  hash?: InputMaybe<Scalars['Bytes']>;\n  number?: InputMaybe<Scalars['Int']>;\n  number_gte?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Commitment = {\n  id: Scalars['Bytes'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hashes: Array<Scalars['Bytes']>;\n};\n\nexport type CommitmentCiphertext = {\n  id: Scalars['Bytes'];\n  ciphertext: Scalars['Bytes'];\n  blindedSenderViewingKey: Scalars['Bytes'];\n  blindedReceiverViewingKey: Scalars['Bytes'];\n};\n\nexport type CommitmentCiphertext_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  ciphertext?: InputMaybe<Scalars['Bytes']>;\n  ciphertext_not?: InputMaybe<Scalars['Bytes']>;\n  ciphertext_gt?: InputMaybe<Scalars['Bytes']>;\n  ciphertext_lt?: InputMaybe<Scalars['Bytes']>;\n  ciphertext_gte?: InputMaybe<Scalars['Bytes']>;\n  ciphertext_lte?: InputMaybe<Scalars['Bytes']>;\n  ciphertext_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  ciphertext_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  ciphertext_contains?: InputMaybe<Scalars['Bytes']>;\n  ciphertext_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_not?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_gt?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_lt?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_gte?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_lte?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  blindedSenderViewingKey_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  blindedSenderViewingKey_contains?: InputMaybe<Scalars['Bytes']>;\n  blindedSenderViewingKey_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_not?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_gt?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_lt?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_gte?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_lte?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  blindedReceiverViewingKey_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  blindedReceiverViewingKey_contains?: InputMaybe<Scalars['Bytes']>;\n  blindedReceiverViewingKey_not_contains?: InputMaybe<Scalars['Bytes']>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<CommitmentCiphertext_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<CommitmentCiphertext_filter>>>;\n};\n\nexport type CommitmentCiphertext_orderBy =\n  | 'id'\n  | 'ciphertext'\n  | 'blindedSenderViewingKey'\n  | 'blindedReceiverViewingKey';\n\nexport type CommitmentPreimage = {\n  id: Scalars['Bytes'];\n  npk: Scalars['Bytes'];\n  token: Token;\n  value: Scalars['BigInt'];\n};\n\nexport type CommitmentPreimage_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  npk?: InputMaybe<Scalars['Bytes']>;\n  npk_not?: InputMaybe<Scalars['Bytes']>;\n  npk_gt?: InputMaybe<Scalars['Bytes']>;\n  npk_lt?: InputMaybe<Scalars['Bytes']>;\n  npk_gte?: InputMaybe<Scalars['Bytes']>;\n  npk_lte?: InputMaybe<Scalars['Bytes']>;\n  npk_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  npk_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  npk_contains?: InputMaybe<Scalars['Bytes']>;\n  npk_not_contains?: InputMaybe<Scalars['Bytes']>;\n  token?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_?: InputMaybe<Token_filter>;\n  value?: InputMaybe<Scalars['BigInt']>;\n  value_not?: InputMaybe<Scalars['BigInt']>;\n  value_gt?: InputMaybe<Scalars['BigInt']>;\n  value_lt?: InputMaybe<Scalars['BigInt']>;\n  value_gte?: InputMaybe<Scalars['BigInt']>;\n  value_lte?: InputMaybe<Scalars['BigInt']>;\n  value_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  value_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<CommitmentPreimage_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<CommitmentPreimage_filter>>>;\n};\n\nexport type CommitmentPreimage_orderBy =\n  | 'id'\n  | 'npk'\n  | 'token'\n  | 'token__id'\n  | 'token__tokenType'\n  | 'token__tokenAddress'\n  | 'token__tokenSubID'\n  | 'value';\n\nexport type CommitmentType =\n  | 'ShieldCommitment'\n  | 'TransactCommitment'\n  | 'LegacyGeneratedCommitment'\n  | 'LegacyEncryptedCommitment';\n\nexport type Commitment_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_contains?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  treeNumber?: InputMaybe<Scalars['Int']>;\n  treeNumber_not?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType?: InputMaybe<CommitmentType>;\n  commitmentType_not?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hashes?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<Commitment_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<Commitment_filter>>>;\n};\n\nexport type Commitment_orderBy =\n  | 'id'\n  | 'blockNumber'\n  | 'blockTimestamp'\n  | 'transactionHash'\n  | 'treeNumber'\n  | 'commitmentType'\n  | 'hashes';\n\nexport type Nullifier = {\n  id: Scalars['Bytes'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  nullifier: Scalars['Bytes'];\n};\n\nexport type Nullifier_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_contains?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  treeNumber?: InputMaybe<Scalars['Int']>;\n  treeNumber_not?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  nullifier?: InputMaybe<Scalars['Bytes']>;\n  nullifier_not?: InputMaybe<Scalars['Bytes']>;\n  nullifier_gt?: InputMaybe<Scalars['Bytes']>;\n  nullifier_lt?: InputMaybe<Scalars['Bytes']>;\n  nullifier_gte?: InputMaybe<Scalars['Bytes']>;\n  nullifier_lte?: InputMaybe<Scalars['Bytes']>;\n  nullifier_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifier_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifier_contains?: InputMaybe<Scalars['Bytes']>;\n  nullifier_not_contains?: InputMaybe<Scalars['Bytes']>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<Nullifier_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<Nullifier_filter>>>;\n};\n\nexport type Nullifier_orderBy =\n  | 'id'\n  | 'blockNumber'\n  | 'blockTimestamp'\n  | 'transactionHash'\n  | 'treeNumber'\n  | 'nullifier';\n\n/** Defines the order direction, either ascending or descending */\nexport type OrderDirection =\n  | 'asc'\n  | 'desc';\n\nexport type Query = {\n  token?: Maybe<Token>;\n  tokens: Array<Token>;\n  commitmentPreimage?: Maybe<CommitmentPreimage>;\n  commitmentPreimages: Array<CommitmentPreimage>;\n  commitmentCiphertext?: Maybe<CommitmentCiphertext>;\n  commitmentCiphertexts: Array<CommitmentCiphertext>;\n  shieldCommitment?: Maybe<ShieldCommitment>;\n  shieldCommitments: Array<ShieldCommitment>;\n  transactCommitment?: Maybe<TransactCommitment>;\n  transactCommitments: Array<TransactCommitment>;\n  unshield?: Maybe<Unshield>;\n  unshields: Array<Unshield>;\n  nullifier?: Maybe<Nullifier>;\n  nullifiers: Array<Nullifier>;\n  railgunTransaction?: Maybe<RailgunTransaction>;\n  railgunTransactions: Array<RailgunTransaction>;\n  verificationHash?: Maybe<VerificationHash>;\n  verificationHashes: Array<VerificationHash>;\n  commitment?: Maybe<Commitment>;\n  commitments: Array<Commitment>;\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n};\n\n\nexport type QuerytokenArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerytokensArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Token_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Token_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerycommitmentPreimageArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerycommitmentPreimagesArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<CommitmentPreimage_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<CommitmentPreimage_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerycommitmentCiphertextArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerycommitmentCiphertextsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<CommitmentCiphertext_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<CommitmentCiphertext_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryshieldCommitmentArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryshieldCommitmentsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ShieldCommitment_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<ShieldCommitment_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerytransactCommitmentArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerytransactCommitmentsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TransactCommitment_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<TransactCommitment_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryunshieldArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryunshieldsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Unshield_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Unshield_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerynullifierArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerynullifiersArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Nullifier_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Nullifier_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryrailgunTransactionArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryrailgunTransactionsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RailgunTransaction_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<RailgunTransaction_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryverificationHashArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryverificationHashesArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VerificationHash_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<VerificationHash_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerycommitmentArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerycommitmentsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Commitment_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Commitment_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type Query_metaArgs = {\n  block?: InputMaybe<Block_height>;\n};\n\nexport type RailgunTransaction = {\n  id: Scalars['Bytes'];\n  blockNumber: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  nullifiers: Array<Scalars['Bytes']>;\n  commitments: Array<Scalars['Bytes']>;\n  boundParamsHash: Scalars['Bytes'];\n  hasUnshield: Scalars['Boolean'];\n  utxoTreeIn: Scalars['BigInt'];\n  utxoTreeOut: Scalars['BigInt'];\n  utxoBatchStartPositionOut: Scalars['BigInt'];\n  unshieldToken: Token;\n  unshieldToAddress: Scalars['Bytes'];\n  unshieldValue: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  verificationHash: Scalars['Bytes'];\n};\n\nexport type RailgunTransaction_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_contains?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  nullifiers?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifiers_not?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifiers_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifiers_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifiers_not_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  nullifiers_not_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_not?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_not_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitments_not_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  boundParamsHash?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_not?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_gt?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_lt?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_gte?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_lte?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  boundParamsHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  boundParamsHash_contains?: InputMaybe<Scalars['Bytes']>;\n  boundParamsHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  hasUnshield?: InputMaybe<Scalars['Boolean']>;\n  hasUnshield_not?: InputMaybe<Scalars['Boolean']>;\n  hasUnshield_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  hasUnshield_not_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  utxoTreeIn?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_not?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_gt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_lt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_gte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_lte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeIn_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoTreeIn_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoTreeOut?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_not?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_gt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_lt?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_gte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_lte?: InputMaybe<Scalars['BigInt']>;\n  utxoTreeOut_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoTreeOut_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoBatchStartPositionOut?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_not?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_gt?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_lt?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_gte?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_lte?: InputMaybe<Scalars['BigInt']>;\n  utxoBatchStartPositionOut_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  utxoBatchStartPositionOut_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  unshieldToken?: InputMaybe<Scalars['String']>;\n  unshieldToken_not?: InputMaybe<Scalars['String']>;\n  unshieldToken_gt?: InputMaybe<Scalars['String']>;\n  unshieldToken_lt?: InputMaybe<Scalars['String']>;\n  unshieldToken_gte?: InputMaybe<Scalars['String']>;\n  unshieldToken_lte?: InputMaybe<Scalars['String']>;\n  unshieldToken_in?: InputMaybe<Array<Scalars['String']>>;\n  unshieldToken_not_in?: InputMaybe<Array<Scalars['String']>>;\n  unshieldToken_contains?: InputMaybe<Scalars['String']>;\n  unshieldToken_contains_nocase?: InputMaybe<Scalars['String']>;\n  unshieldToken_not_contains?: InputMaybe<Scalars['String']>;\n  unshieldToken_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  unshieldToken_starts_with?: InputMaybe<Scalars['String']>;\n  unshieldToken_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  unshieldToken_not_starts_with?: InputMaybe<Scalars['String']>;\n  unshieldToken_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  unshieldToken_ends_with?: InputMaybe<Scalars['String']>;\n  unshieldToken_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  unshieldToken_not_ends_with?: InputMaybe<Scalars['String']>;\n  unshieldToken_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  unshieldToken_?: InputMaybe<Token_filter>;\n  unshieldToAddress?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_not?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_gt?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_lt?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_gte?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_lte?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  unshieldToAddress_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  unshieldToAddress_contains?: InputMaybe<Scalars['Bytes']>;\n  unshieldToAddress_not_contains?: InputMaybe<Scalars['Bytes']>;\n  unshieldValue?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_not?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_gt?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_lt?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_gte?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_lte?: InputMaybe<Scalars['BigInt']>;\n  unshieldValue_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  unshieldValue_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  verificationHash?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_not?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_gt?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_lt?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_gte?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_lte?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  verificationHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  verificationHash_contains?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<RailgunTransaction_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<RailgunTransaction_filter>>>;\n};\n\nexport type RailgunTransaction_orderBy =\n  | 'id'\n  | 'blockNumber'\n  | 'transactionHash'\n  | 'nullifiers'\n  | 'commitments'\n  | 'boundParamsHash'\n  | 'hasUnshield'\n  | 'utxoTreeIn'\n  | 'utxoTreeOut'\n  | 'utxoBatchStartPositionOut'\n  | 'unshieldToken'\n  | 'unshieldToken__id'\n  | 'unshieldToken__tokenType'\n  | 'unshieldToken__tokenAddress'\n  | 'unshieldToken__tokenSubID'\n  | 'unshieldToAddress'\n  | 'unshieldValue'\n  | 'blockTimestamp'\n  | 'verificationHash';\n\nexport type ShieldCommitment = Commitment & {\n  id: Scalars['Bytes'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hashes: Array<Scalars['Bytes']>;\n  from: Scalars['Bytes'];\n  treePosition: Scalars['Int'];\n  preimage: CommitmentPreimage;\n  encryptedBundle: Array<Scalars['Bytes']>;\n  shieldKey: Scalars['Bytes'];\n  fee: Scalars['BigInt'];\n};\n\nexport type ShieldCommitment_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_contains?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  treeNumber?: InputMaybe<Scalars['Int']>;\n  treeNumber_not?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType?: InputMaybe<CommitmentType>;\n  commitmentType_not?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hashes?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  from?: InputMaybe<Scalars['Bytes']>;\n  from_not?: InputMaybe<Scalars['Bytes']>;\n  from_gt?: InputMaybe<Scalars['Bytes']>;\n  from_lt?: InputMaybe<Scalars['Bytes']>;\n  from_gte?: InputMaybe<Scalars['Bytes']>;\n  from_lte?: InputMaybe<Scalars['Bytes']>;\n  from_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  from_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  from_contains?: InputMaybe<Scalars['Bytes']>;\n  from_not_contains?: InputMaybe<Scalars['Bytes']>;\n  treePosition?: InputMaybe<Scalars['Int']>;\n  treePosition_not?: InputMaybe<Scalars['Int']>;\n  treePosition_gt?: InputMaybe<Scalars['Int']>;\n  treePosition_lt?: InputMaybe<Scalars['Int']>;\n  treePosition_gte?: InputMaybe<Scalars['Int']>;\n  treePosition_lte?: InputMaybe<Scalars['Int']>;\n  treePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  treePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  preimage?: InputMaybe<Scalars['String']>;\n  preimage_not?: InputMaybe<Scalars['String']>;\n  preimage_gt?: InputMaybe<Scalars['String']>;\n  preimage_lt?: InputMaybe<Scalars['String']>;\n  preimage_gte?: InputMaybe<Scalars['String']>;\n  preimage_lte?: InputMaybe<Scalars['String']>;\n  preimage_in?: InputMaybe<Array<Scalars['String']>>;\n  preimage_not_in?: InputMaybe<Array<Scalars['String']>>;\n  preimage_contains?: InputMaybe<Scalars['String']>;\n  preimage_contains_nocase?: InputMaybe<Scalars['String']>;\n  preimage_not_contains?: InputMaybe<Scalars['String']>;\n  preimage_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  preimage_starts_with?: InputMaybe<Scalars['String']>;\n  preimage_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  preimage_not_starts_with?: InputMaybe<Scalars['String']>;\n  preimage_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  preimage_ends_with?: InputMaybe<Scalars['String']>;\n  preimage_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  preimage_not_ends_with?: InputMaybe<Scalars['String']>;\n  preimage_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  preimage_?: InputMaybe<CommitmentPreimage_filter>;\n  encryptedBundle?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedBundle_not?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedBundle_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedBundle_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedBundle_not_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  encryptedBundle_not_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  shieldKey?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_not?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_gt?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_lt?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_gte?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_lte?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  shieldKey_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  shieldKey_contains?: InputMaybe<Scalars['Bytes']>;\n  shieldKey_not_contains?: InputMaybe<Scalars['Bytes']>;\n  fee?: InputMaybe<Scalars['BigInt']>;\n  fee_not?: InputMaybe<Scalars['BigInt']>;\n  fee_gt?: InputMaybe<Scalars['BigInt']>;\n  fee_lt?: InputMaybe<Scalars['BigInt']>;\n  fee_gte?: InputMaybe<Scalars['BigInt']>;\n  fee_lte?: InputMaybe<Scalars['BigInt']>;\n  fee_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  fee_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<ShieldCommitment_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<ShieldCommitment_filter>>>;\n};\n\nexport type ShieldCommitment_orderBy =\n  | 'id'\n  | 'blockNumber'\n  | 'blockTimestamp'\n  | 'transactionHash'\n  | 'treeNumber'\n  | 'commitmentType'\n  | 'hashes'\n  | 'from'\n  | 'treePosition'\n  | 'preimage'\n  | 'preimage__id'\n  | 'preimage__npk'\n  | 'preimage__value'\n  | 'encryptedBundle'\n  | 'shieldKey'\n  | 'fee';\n\nexport type Subscription = {\n  token?: Maybe<Token>;\n  tokens: Array<Token>;\n  commitmentPreimage?: Maybe<CommitmentPreimage>;\n  commitmentPreimages: Array<CommitmentPreimage>;\n  commitmentCiphertext?: Maybe<CommitmentCiphertext>;\n  commitmentCiphertexts: Array<CommitmentCiphertext>;\n  shieldCommitment?: Maybe<ShieldCommitment>;\n  shieldCommitments: Array<ShieldCommitment>;\n  transactCommitment?: Maybe<TransactCommitment>;\n  transactCommitments: Array<TransactCommitment>;\n  unshield?: Maybe<Unshield>;\n  unshields: Array<Unshield>;\n  nullifier?: Maybe<Nullifier>;\n  nullifiers: Array<Nullifier>;\n  railgunTransaction?: Maybe<RailgunTransaction>;\n  railgunTransactions: Array<RailgunTransaction>;\n  verificationHash?: Maybe<VerificationHash>;\n  verificationHashes: Array<VerificationHash>;\n  commitment?: Maybe<Commitment>;\n  commitments: Array<Commitment>;\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n};\n\n\nexport type SubscriptiontokenArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptiontokensArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Token_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Token_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptioncommitmentPreimageArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptioncommitmentPreimagesArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<CommitmentPreimage_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<CommitmentPreimage_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptioncommitmentCiphertextArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptioncommitmentCiphertextsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<CommitmentCiphertext_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<CommitmentCiphertext_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionshieldCommitmentArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionshieldCommitmentsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ShieldCommitment_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<ShieldCommitment_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptiontransactCommitmentArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptiontransactCommitmentsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TransactCommitment_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<TransactCommitment_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionunshieldArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionunshieldsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Unshield_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Unshield_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionnullifierArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionnullifiersArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Nullifier_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Nullifier_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionrailgunTransactionArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionrailgunTransactionsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RailgunTransaction_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<RailgunTransaction_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionverificationHashArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionverificationHashesArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VerificationHash_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<VerificationHash_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptioncommitmentArgs = {\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptioncommitmentsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Commitment_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Commitment_filter>;\n  block?: InputMaybe<Block_height>;\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type Subscription_metaArgs = {\n  block?: InputMaybe<Block_height>;\n};\n\nexport type Token = {\n  id: Scalars['Bytes'];\n  tokenType: TokenType;\n  tokenAddress: Scalars['Bytes'];\n  tokenSubID: Scalars['Bytes'];\n};\n\nexport type TokenType =\n  | 'ERC20'\n  | 'ERC721'\n  | 'ERC1155';\n\nexport type Token_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenType?: InputMaybe<TokenType>;\n  tokenType_not?: InputMaybe<TokenType>;\n  tokenType_in?: InputMaybe<Array<TokenType>>;\n  tokenType_not_in?: InputMaybe<Array<TokenType>>;\n  tokenAddress?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_not?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_gt?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_lt?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_gte?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_lte?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokenAddress_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokenAddress_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenAddress_not_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_not?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_gt?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_lt?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_gte?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_lte?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokenSubID_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokenSubID_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenSubID_not_contains?: InputMaybe<Scalars['Bytes']>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<Token_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<Token_filter>>>;\n};\n\nexport type Token_orderBy =\n  | 'id'\n  | 'tokenType'\n  | 'tokenAddress'\n  | 'tokenSubID';\n\nexport type TransactCommitment = Commitment & {\n  id: Scalars['Bytes'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  treeNumber: Scalars['Int'];\n  commitmentType: CommitmentType;\n  hashes: Array<Scalars['Bytes']>;\n  commitmentCiphertexts: Array<CommitmentCiphertext>;\n  batchStartTreePosition: Scalars['Int'];\n  transactIndex: Scalars['Int'];\n  senderCiphertext: Scalars['Bytes'];\n};\n\n\nexport type TransactCommitmentcommitmentCiphertextsArgs = {\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<CommitmentCiphertext_orderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<CommitmentCiphertext_filter>;\n};\n\nexport type TransactCommitment_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_contains?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  treeNumber?: InputMaybe<Scalars['Int']>;\n  treeNumber_not?: InputMaybe<Scalars['Int']>;\n  treeNumber_gt?: InputMaybe<Scalars['Int']>;\n  treeNumber_lt?: InputMaybe<Scalars['Int']>;\n  treeNumber_gte?: InputMaybe<Scalars['Int']>;\n  treeNumber_lte?: InputMaybe<Scalars['Int']>;\n  treeNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  treeNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  commitmentType?: InputMaybe<CommitmentType>;\n  commitmentType_not?: InputMaybe<CommitmentType>;\n  commitmentType_in?: InputMaybe<Array<CommitmentType>>;\n  commitmentType_not_in?: InputMaybe<Array<CommitmentType>>;\n  hashes?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  hashes_not_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  commitmentCiphertexts?: InputMaybe<Array<Scalars['String']>>;\n  commitmentCiphertexts_not?: InputMaybe<Array<Scalars['String']>>;\n  commitmentCiphertexts_contains?: InputMaybe<Array<Scalars['String']>>;\n  commitmentCiphertexts_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  commitmentCiphertexts_not_contains?: InputMaybe<Array<Scalars['String']>>;\n  commitmentCiphertexts_not_contains_nocase?: InputMaybe<Array<Scalars['String']>>;\n  commitmentCiphertexts_?: InputMaybe<CommitmentCiphertext_filter>;\n  batchStartTreePosition?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_not?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lt?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_gte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_lte?: InputMaybe<Scalars['Int']>;\n  batchStartTreePosition_in?: InputMaybe<Array<Scalars['Int']>>;\n  batchStartTreePosition_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  transactIndex?: InputMaybe<Scalars['Int']>;\n  transactIndex_not?: InputMaybe<Scalars['Int']>;\n  transactIndex_gt?: InputMaybe<Scalars['Int']>;\n  transactIndex_lt?: InputMaybe<Scalars['Int']>;\n  transactIndex_gte?: InputMaybe<Scalars['Int']>;\n  transactIndex_lte?: InputMaybe<Scalars['Int']>;\n  transactIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  transactIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  senderCiphertext?: InputMaybe<Scalars['Bytes']>;\n  senderCiphertext_not?: InputMaybe<Scalars['Bytes']>;\n  senderCiphertext_gt?: InputMaybe<Scalars['Bytes']>;\n  senderCiphertext_lt?: InputMaybe<Scalars['Bytes']>;\n  senderCiphertext_gte?: InputMaybe<Scalars['Bytes']>;\n  senderCiphertext_lte?: InputMaybe<Scalars['Bytes']>;\n  senderCiphertext_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  senderCiphertext_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  senderCiphertext_contains?: InputMaybe<Scalars['Bytes']>;\n  senderCiphertext_not_contains?: InputMaybe<Scalars['Bytes']>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<TransactCommitment_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<TransactCommitment_filter>>>;\n};\n\nexport type TransactCommitment_orderBy =\n  | 'id'\n  | 'blockNumber'\n  | 'blockTimestamp'\n  | 'transactionHash'\n  | 'treeNumber'\n  | 'commitmentType'\n  | 'hashes'\n  | 'commitmentCiphertexts'\n  | 'batchStartTreePosition'\n  | 'transactIndex'\n  | 'senderCiphertext';\n\nexport type Unshield = {\n  id: Scalars['Bytes'];\n  blockNumber: Scalars['BigInt'];\n  blockTimestamp: Scalars['BigInt'];\n  transactionHash: Scalars['Bytes'];\n  to: Scalars['Bytes'];\n  token: Token;\n  value: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  transactIndex: Scalars['BigInt'];\n};\n\nexport type Unshield_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  blockNumber?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_not?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lt?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_gte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_lte?: InputMaybe<Scalars['BigInt']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactionHash?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lt?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_gte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_lte?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  transactionHash_contains?: InputMaybe<Scalars['Bytes']>;\n  transactionHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  to?: InputMaybe<Scalars['Bytes']>;\n  to_not?: InputMaybe<Scalars['Bytes']>;\n  to_gt?: InputMaybe<Scalars['Bytes']>;\n  to_lt?: InputMaybe<Scalars['Bytes']>;\n  to_gte?: InputMaybe<Scalars['Bytes']>;\n  to_lte?: InputMaybe<Scalars['Bytes']>;\n  to_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  to_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  to_contains?: InputMaybe<Scalars['Bytes']>;\n  to_not_contains?: InputMaybe<Scalars['Bytes']>;\n  token?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_?: InputMaybe<Token_filter>;\n  value?: InputMaybe<Scalars['BigInt']>;\n  value_not?: InputMaybe<Scalars['BigInt']>;\n  value_gt?: InputMaybe<Scalars['BigInt']>;\n  value_lt?: InputMaybe<Scalars['BigInt']>;\n  value_gte?: InputMaybe<Scalars['BigInt']>;\n  value_lte?: InputMaybe<Scalars['BigInt']>;\n  value_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  value_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  fee?: InputMaybe<Scalars['BigInt']>;\n  fee_not?: InputMaybe<Scalars['BigInt']>;\n  fee_gt?: InputMaybe<Scalars['BigInt']>;\n  fee_lt?: InputMaybe<Scalars['BigInt']>;\n  fee_gte?: InputMaybe<Scalars['BigInt']>;\n  fee_lte?: InputMaybe<Scalars['BigInt']>;\n  fee_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  fee_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactIndex?: InputMaybe<Scalars['BigInt']>;\n  transactIndex_not?: InputMaybe<Scalars['BigInt']>;\n  transactIndex_gt?: InputMaybe<Scalars['BigInt']>;\n  transactIndex_lt?: InputMaybe<Scalars['BigInt']>;\n  transactIndex_gte?: InputMaybe<Scalars['BigInt']>;\n  transactIndex_lte?: InputMaybe<Scalars['BigInt']>;\n  transactIndex_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  transactIndex_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<Unshield_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<Unshield_filter>>>;\n};\n\nexport type Unshield_orderBy =\n  | 'id'\n  | 'blockNumber'\n  | 'blockTimestamp'\n  | 'transactionHash'\n  | 'to'\n  | 'token'\n  | 'token__id'\n  | 'token__tokenType'\n  | 'token__tokenAddress'\n  | 'token__tokenSubID'\n  | 'value'\n  | 'fee'\n  | 'transactIndex';\n\nexport type VerificationHash = {\n  id: Scalars['Bytes'];\n  verificationHash: Scalars['Bytes'];\n};\n\nexport type VerificationHash_filter = {\n  id?: InputMaybe<Scalars['Bytes']>;\n  id_not?: InputMaybe<Scalars['Bytes']>;\n  id_gt?: InputMaybe<Scalars['Bytes']>;\n  id_lt?: InputMaybe<Scalars['Bytes']>;\n  id_gte?: InputMaybe<Scalars['Bytes']>;\n  id_lte?: InputMaybe<Scalars['Bytes']>;\n  id_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id_contains?: InputMaybe<Scalars['Bytes']>;\n  id_not_contains?: InputMaybe<Scalars['Bytes']>;\n  verificationHash?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_not?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_gt?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_lt?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_gte?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_lte?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  verificationHash_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  verificationHash_contains?: InputMaybe<Scalars['Bytes']>;\n  verificationHash_not_contains?: InputMaybe<Scalars['Bytes']>;\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  and?: InputMaybe<Array<InputMaybe<VerificationHash_filter>>>;\n  or?: InputMaybe<Array<InputMaybe<VerificationHash_filter>>>;\n};\n\nexport type VerificationHash_orderBy =\n  | 'id'\n  | 'verificationHash';\n\nexport type _Block_ = {\n  /** The hash of the block */\n  hash?: Maybe<Scalars['Bytes']>;\n  /** The block number */\n  number: Scalars['Int'];\n  /** Integer representation of the timestamp stored in blocks for the chain */\n  timestamp?: Maybe<Scalars['Int']>;\n};\n\n/** The type for the top-level _meta field */\nexport type _Meta_ = {\n  /**\n   * Information about a specific subgraph block. The hash of the block\n   * will be null if the _meta field has a block constraint that asks for\n   * a block number. It will be filled if the _meta field has no block constraint\n   * and therefore asks for the latest  block\n   *\n   */\n  block: _Block_;\n  /** The deployment ID */\n  deployment: Scalars['String'];\n  /** If `true`, the subgraph encountered indexing errors at some past block */\n  hasIndexingErrors: Scalars['Boolean'];\n};\n\nexport type _SubgraphErrorPolicy_ =\n  /** Data will be returned even if the subgraph has indexing errors */\n  | 'allow'\n  /** If the subgraph has indexing errors, data will be omitted. The default. */\n  | 'deny';\n\n  export type QuerySdk = {\n      /** null **/\n  token: InContextSdkMethod<Query['token'], QuerytokenArgs, MeshContext>,\n  /** null **/\n  tokens: InContextSdkMethod<Query['tokens'], QuerytokensArgs, MeshContext>,\n  /** null **/\n  commitmentPreimage: InContextSdkMethod<Query['commitmentPreimage'], QuerycommitmentPreimageArgs, MeshContext>,\n  /** null **/\n  commitmentPreimages: InContextSdkMethod<Query['commitmentPreimages'], QuerycommitmentPreimagesArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertext: InContextSdkMethod<Query['commitmentCiphertext'], QuerycommitmentCiphertextArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertexts: InContextSdkMethod<Query['commitmentCiphertexts'], QuerycommitmentCiphertextsArgs, MeshContext>,\n  /** null **/\n  shieldCommitment: InContextSdkMethod<Query['shieldCommitment'], QueryshieldCommitmentArgs, MeshContext>,\n  /** null **/\n  shieldCommitments: InContextSdkMethod<Query['shieldCommitments'], QueryshieldCommitmentsArgs, MeshContext>,\n  /** null **/\n  transactCommitment: InContextSdkMethod<Query['transactCommitment'], QuerytransactCommitmentArgs, MeshContext>,\n  /** null **/\n  transactCommitments: InContextSdkMethod<Query['transactCommitments'], QuerytransactCommitmentsArgs, MeshContext>,\n  /** null **/\n  unshield: InContextSdkMethod<Query['unshield'], QueryunshieldArgs, MeshContext>,\n  /** null **/\n  unshields: InContextSdkMethod<Query['unshields'], QueryunshieldsArgs, MeshContext>,\n  /** null **/\n  nullifier: InContextSdkMethod<Query['nullifier'], QuerynullifierArgs, MeshContext>,\n  /** null **/\n  nullifiers: InContextSdkMethod<Query['nullifiers'], QuerynullifiersArgs, MeshContext>,\n  /** null **/\n  railgunTransaction: InContextSdkMethod<Query['railgunTransaction'], QueryrailgunTransactionArgs, MeshContext>,\n  /** null **/\n  railgunTransactions: InContextSdkMethod<Query['railgunTransactions'], QueryrailgunTransactionsArgs, MeshContext>,\n  /** null **/\n  verificationHash: InContextSdkMethod<Query['verificationHash'], QueryverificationHashArgs, MeshContext>,\n  /** null **/\n  verificationHashes: InContextSdkMethod<Query['verificationHashes'], QueryverificationHashesArgs, MeshContext>,\n  /** null **/\n  commitment: InContextSdkMethod<Query['commitment'], QuerycommitmentArgs, MeshContext>,\n  /** null **/\n  commitments: InContextSdkMethod<Query['commitments'], QuerycommitmentsArgs, MeshContext>,\n  /** Access to subgraph metadata **/\n  _meta: InContextSdkMethod<Query['_meta'], Query_metaArgs, MeshContext>\n  };\n\n  export type MutationSdk = {\n    \n  };\n\n  export type SubscriptionSdk = {\n      /** null **/\n  token: InContextSdkMethod<Subscription['token'], SubscriptiontokenArgs, MeshContext>,\n  /** null **/\n  tokens: InContextSdkMethod<Subscription['tokens'], SubscriptiontokensArgs, MeshContext>,\n  /** null **/\n  commitmentPreimage: InContextSdkMethod<Subscription['commitmentPreimage'], SubscriptioncommitmentPreimageArgs, MeshContext>,\n  /** null **/\n  commitmentPreimages: InContextSdkMethod<Subscription['commitmentPreimages'], SubscriptioncommitmentPreimagesArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertext: InContextSdkMethod<Subscription['commitmentCiphertext'], SubscriptioncommitmentCiphertextArgs, MeshContext>,\n  /** null **/\n  commitmentCiphertexts: InContextSdkMethod<Subscription['commitmentCiphertexts'], SubscriptioncommitmentCiphertextsArgs, MeshContext>,\n  /** null **/\n  shieldCommitment: InContextSdkMethod<Subscription['shieldCommitment'], SubscriptionshieldCommitmentArgs, MeshContext>,\n  /** null **/\n  shieldCommitments: InContextSdkMethod<Subscription['shieldCommitments'], SubscriptionshieldCommitmentsArgs, MeshContext>,\n  /** null **/\n  transactCommitment: InContextSdkMethod<Subscription['transactCommitment'], SubscriptiontransactCommitmentArgs, MeshContext>,\n  /** null **/\n  transactCommitments: InContextSdkMethod<Subscription['transactCommitments'], SubscriptiontransactCommitmentsArgs, MeshContext>,\n  /** null **/\n  unshield: InContextSdkMethod<Subscription['unshield'], SubscriptionunshieldArgs, MeshContext>,\n  /** null **/\n  unshields: InContextSdkMethod<Subscription['unshields'], SubscriptionunshieldsArgs, MeshContext>,\n  /** null **/\n  nullifier: InContextSdkMethod<Subscription['nullifier'], SubscriptionnullifierArgs, MeshContext>,\n  /** null **/\n  nullifiers: InContextSdkMethod<Subscription['nullifiers'], SubscriptionnullifiersArgs, MeshContext>,\n  /** null **/\n  railgunTransaction: InContextSdkMethod<Subscription['railgunTransaction'], SubscriptionrailgunTransactionArgs, MeshContext>,\n  /** null **/\n  railgunTransactions: InContextSdkMethod<Subscription['railgunTransactions'], SubscriptionrailgunTransactionsArgs, MeshContext>,\n  /** null **/\n  verificationHash: InContextSdkMethod<Subscription['verificationHash'], SubscriptionverificationHashArgs, MeshContext>,\n  /** null **/\n  verificationHashes: InContextSdkMethod<Subscription['verificationHashes'], SubscriptionverificationHashesArgs, MeshContext>,\n  /** null **/\n  commitment: InContextSdkMethod<Subscription['commitment'], SubscriptioncommitmentArgs, MeshContext>,\n  /** null **/\n  commitments: InContextSdkMethod<Subscription['commitments'], SubscriptioncommitmentsArgs, MeshContext>,\n  /** Access to subgraph metadata **/\n  _meta: InContextSdkMethod<Subscription['_meta'], Subscription_metaArgs, MeshContext>\n  };\n\n  export type Context = {\n      [\"mumbai\"]: { Query: QuerySdk, Mutation: MutationSdk, Subscription: SubscriptionSdk },\n      \n    };\n}\n"]}