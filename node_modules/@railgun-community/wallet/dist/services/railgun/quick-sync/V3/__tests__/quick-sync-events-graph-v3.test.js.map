{"version":3,"file":"quick-sync-events-graph-v3.test.js","sourceRoot":"","sources":["../../../../../../src/services/railgun/quick-sync/V3/__tests__/quick-sync-events-graph-v3.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Chain, CommitmentEvent, TXIDVersion } from '@railgun-community/engine';\nimport { NetworkName, NETWORK_CONFIG } from '@railgun-community/shared-models';\nimport chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport { quickSyncEventsGraph } from '../../quick-sync-events';\nimport { isV2Test } from '../../../../../tests/helper.test';\n\nchai.use(chaiAsPromised);\nconst { expect } = chai;\n\nconst txidVersion = TXIDVersion.V3_PoseidonMerkle;\n\nconst POLYGON_MUMBAI_CHAIN: Chain =\n  NETWORK_CONFIG[NetworkName.PolygonMumbai_DEPRECATED].chain;\nconst EXPECTED_COMMITMENT_GROUP_EVENTS_POLYGON_MUMBAI = 1;\nconst EXPECTED_NULLIFIER_EVENTS_POLYGON_MUMBAI = 1;\nconst EXPECTED_UNSHIELD_EVENTS_POLYGON_MUMBAI = 1;\nconst EXPECTED_RAILGUN_TRANSACTION_EVENTS_POLYGON_MUMBAI = 1;\n\nconst assertContiguousCommitmentEvents = (\n  commitmentEvents: CommitmentEvent[],\n  shouldThrow: boolean,\n) => {\n  let nextTreeNumber = commitmentEvents[0].treeNumber;\n  let nextStartPosition = commitmentEvents[0].startPosition;\n  for (const event of commitmentEvents) {\n    if (\n      event.treeNumber !== nextTreeNumber ||\n      event.startPosition !== nextStartPosition\n    ) {\n      if (shouldThrow) {\n        throw new Error(\n          `Could not find treeNumber ${nextTreeNumber}, startPosition ${nextStartPosition}`,\n        );\n      } else {\n        // eslint-disable-next-line no-console\n        console.log(\n          `Could not find treeNumber ${nextTreeNumber}, startPosition ${nextStartPosition}`,\n        );\n        nextStartPosition = event.startPosition + event.commitments.length;\n      }\n    } else {\n      nextStartPosition += event.commitments.length;\n    }\n\n    // TODO: This logic may need an update if the tree is less than 65536 commitments.\n    if (nextStartPosition >= 65536) {\n      // Roll over to next tree.\n      nextTreeNumber += 1;\n      nextStartPosition = 0;\n    }\n  }\n};\n\ndescribe('quick-sync-events-graph-v3', () => {\n  it('[V3] Should make sure Graph V3 query has no data gaps in commitments - Polygon Mumbai', async function run() {\n    if (isV2Test()) {\n      this.skip();\n      return;\n    }\n\n    const eventLog = await quickSyncEventsGraph(\n      txidVersion,\n      POLYGON_MUMBAI_CHAIN,\n      0,\n    );\n    expect(eventLog).to.be.an('object');\n    expect(eventLog.commitmentEvents).to.be.an('array');\n    expect(eventLog.commitmentEvents.length).to.be.at.least(\n      EXPECTED_COMMITMENT_GROUP_EVENTS_POLYGON_MUMBAI,\n    );\n    expect(eventLog.nullifierEvents.length).to.be.at.least(\n      EXPECTED_NULLIFIER_EVENTS_POLYGON_MUMBAI,\n    );\n    expect(eventLog.unshieldEvents.length).to.be.at.least(\n      EXPECTED_UNSHIELD_EVENTS_POLYGON_MUMBAI,\n    );\n    expect(eventLog.railgunTransactionEvents?.length).to.be.at.least(\n      EXPECTED_UNSHIELD_EVENTS_POLYGON_MUMBAI,\n    );\n\n    const shouldThrow = true;\n    assertContiguousCommitmentEvents(eventLog.commitmentEvents, shouldThrow);\n  }).timeout(45_000);\n});\n"]}