{"version":3,"file":"transaction-history.test.js","sourceRoot":"","sources":["../../../../../src/services/railgun/history/__tests__/transaction-history.test.ts"],"names":[],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport sinon from 'sinon';\nimport { createRailgunWallet, fullWalletForID } from '../../wallets/wallets';\nimport {\n  categoryForTransactionHistoryItem,\n  getWalletTransactionHistory,\n} from '../transaction-history';\nimport {\n  MOCK_DB_ENCRYPTION_KEY,\n  MOCK_MNEMONIC_2,\n} from '../../../../tests/mocks.test';\nimport {\n  closeTestEngine,\n  initTestEngine,\n  initTestEngineNetworks,\n  pollUntilUTXOMerkletreeScanned,\n} from '../../../../tests/setup.test';\nimport { RailgunWallet, TransactionHistoryEntry } from '@railgun-community/engine';\nimport {\n  Chain,\n  ChainType,\n  NetworkName,\n  RailgunHistoryReceiveERC20Amount,\n  RailgunHistorySendERC20Amount,\n  RailgunHistoryUnshieldERC20Amount,\n  RailgunWalletBalanceBucket,\n  TXIDVersion,\n  TransactionHistoryItem,\n  TransactionHistoryItemCategory,\n  isDefined,\n} from '@railgun-community/shared-models';\nimport { getTestTXIDVersion, isV2Test } from '../../../../tests/helper.test';\n\nchai.use(chaiAsPromised);\nconst { expect } = chai;\n\nconst SEPOLIA_CHAIN: Chain = { type: ChainType.EVM, id: 11155111 };\n\nlet wallet: RailgunWallet;\n\nconst txidVersion = getTestTXIDVersion();\n\nconst transferERC20AmountsSend: RailgunHistorySendERC20Amount[] = [\n  {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x435532c61b0800'),\n    recipientAddress:\n      '0zk1qygxrr7l92f6wltkpqlqcqstftfn0cn0x5ckyl5tjz6a4kyxnwy9arv7j6fe3z53llg8qt4s7axfdazyrrps78np9pylk4055gkz9e2gd8ulmk0urqt55y3m07t',\n    walletSource: 'railway web',\n    memoText: '',\n    hasValidPOIForActiveLists: true,\n  },\n  {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x01626218b4586000'),\n    recipientAddress:\n      '0zk1qygxrr7l92f6wltkpqlqcqstftfn0cn0x5ckyl5tjz6a4kyxnwy9arv7j6fe3z53llg8qt4s7axfdazyrrps78np9pylk4055gkz9e2gd8ulmk0urqt55y3m07t',\n    walletSource: 'railway web',\n    memoText: '',\n    hasValidPOIForActiveLists: true,\n  },\n  {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x0120d3a540a09800'),\n    recipientAddress:\n      '0zk1qygxrr7l92f6wltkpqlqcqstftfn0cn0x5ckyl5tjz6a4kyxnwy9arv7j6fe3z53llg8qt4s7axfdazyrrps78np9pylk4055gkz9e2gd8ulmk0urqt55y3m07t',\n    walletSource: 'railway web',\n    memoText: '',\n    hasValidPOIForActiveLists: true,\n  },\n];\nconst MOCKED_TRANSFER_SEND_TRX: TransactionHistoryItem = {\n  txidVersion,\n  txid: '0x2cedf31ad89e317dab2bc522333c58e9d644e4977c9c7249ca99e3846eb5d652',\n  blockNumber: 100,\n  transferERC20Amounts: transferERC20AmountsSend,\n  changeERC20Amounts: [\n    {\n      tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n      amount: BigInt('0xabdf14769f1800'),\n      hasValidPOIForActiveLists: true,\n    },\n  ],\n  receiveERC20Amounts: [],\n  unshieldERC20Amounts: [],\n  receiveNFTAmounts: [],\n  transferNFTAmounts: [],\n  unshieldNFTAmounts: [],\n  version: 3,\n  category: TransactionHistoryItemCategory.TransferSendERC20s,\n  timestamp: 1678801493,\n};\n\nconst receiveERC20AmountsReceive: RailgunHistoryReceiveERC20Amount[] = [\n  {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x0b470553066cd0f8'),\n    memoText: 'este va a ser un memo corto',\n    senderAddress:\n      '0zk1qyy0deg6tdmfum0dcxj8j69p9ue9emvyyuv46ltdrxcmfr06wafh8rv7j6fe3z53lalv6k0cvxsap0xqpcgjnplrkrz5nsykud3u5nstfclh96k4uwwcq8un6tm',\n    shieldFee: '',\n    hasValidPOIForActiveLists: true,\n    balanceBucket: RailgunWalletBalanceBucket.MissingExternalPOI,\n  },\n];\nconst MOCKED_TRANSFER_RECEIVE_TRX: TransactionHistoryItem = {\n  txidVersion,\n  txid: '0x3245173576d6fdd6032915e9d742498e08b327cd4fbdeb0d7bb1858455698fa4',\n  blockNumber: 100,\n  transferERC20Amounts: [],\n  changeERC20Amounts: [],\n  receiveERC20Amounts: receiveERC20AmountsReceive,\n  unshieldERC20Amounts: [],\n  receiveNFTAmounts: [],\n  transferNFTAmounts: [],\n  unshieldNFTAmounts: [],\n  version: 0,\n  category: TransactionHistoryItemCategory.TransferReceiveERC20s,\n  timestamp: 1681132187.844,\n};\n\nconst receiveERC20AmountsShield: RailgunHistoryReceiveERC20Amount[] = [\n  {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x1bafa9ee16e78000'),\n    shieldFee: '0x11c37937e08000',\n    senderAddress: '',\n    memoText: '',\n    hasValidPOIForActiveLists: true,\n    balanceBucket: RailgunWalletBalanceBucket.ShieldPending,\n  },\n];\nconst MOCKED_SHIELD_TRX: TransactionHistoryItem = {\n  txidVersion,\n  txid: '0x19a6a73d658c7517625ce16ab554ccb6dc3dbed85dfae8e7ced42b42ad71692c',\n  blockNumber: 100,\n  transferERC20Amounts: [],\n  changeERC20Amounts: [],\n  receiveERC20Amounts: receiveERC20AmountsShield,\n  unshieldERC20Amounts: [],\n  receiveNFTAmounts: [],\n  transferNFTAmounts: [],\n  unshieldNFTAmounts: [],\n  version: 0,\n  category: TransactionHistoryItemCategory.ShieldERC20s,\n  timestamp: 1680269703,\n};\n\nconst unshieldERC20AmountsUnshield: RailgunHistoryUnshieldERC20Amount[] = [\n  {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x06316e3f4d951280'),\n    recipientAddress: '0xc7FfA542736321A3dd69246d73987566a5486968',\n    unshieldFee: '0x03f937fa6b8580',\n    walletSource: 'railway web',\n    memoText: '',\n    hasValidPOIForActiveLists: true,\n  },\n];\nconst MOCKED_UNSHIELD_TRX: TransactionHistoryItem = {\n  txidVersion,\n  txid: '0xefcff65175d3dc33b7d384951fbeeb7698f8b86a29c635704e3ee78a9d947b66',\n  blockNumber: 100,\n  transferERC20Amounts: [],\n  changeERC20Amounts: [],\n  receiveERC20Amounts: [],\n  unshieldERC20Amounts: unshieldERC20AmountsUnshield,\n  receiveNFTAmounts: [],\n  transferNFTAmounts: [],\n  unshieldNFTAmounts: [],\n  version: 3,\n  category: TransactionHistoryItemCategory.UnshieldERC20s,\n  timestamp: 1678821969,\n};\n\nconst receiveERC20AmountsUnknow: RailgunHistoryReceiveERC20Amount[] = [\n  {\n    tokenAddress: '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',\n    amount: BigInt('0x0f3603f585000c34'),\n    shieldFee: '0x09c26a7ae13400',\n    senderAddress: '',\n    memoText: '',\n    hasValidPOIForActiveLists: true,\n    balanceBucket: RailgunWalletBalanceBucket.Spendable,\n  },\n];\nconst unshieldERC20AmountsUnknow: RailgunHistoryUnshieldERC20Amount[] = [\n  {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x0dd7d4f70b73c000'),\n    recipientAddress: '0xc7FfA542736321A3dd69246d73987566a5486968',\n    unshieldFee: '0x08e1bc9bf04000',\n    memoText: '',\n    walletSource: 'railway web',\n    hasValidPOIForActiveLists: true,\n  },\n];\nconst MOCKED_UNKNOWN_SWAP_TRX: TransactionHistoryItem = {\n  txidVersion,\n  txid: '0xf12496efa5966edb39308b424038a2fec0235a01a2cb469908bc0b4bda7e1cbe',\n  blockNumber: 100,\n  transferERC20Amounts: [],\n  broadcasterFeeERC20Amount: {\n    tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    amount: BigInt('0x14b8daefd04c0000'),\n    hasValidPOIForActiveLists: true,\n  },\n  changeERC20Amounts: [\n    {\n      tokenAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n      amount: BigInt('0x012d2a0caec49380'),\n      hasValidPOIForActiveLists: true,\n    },\n  ],\n  receiveERC20Amounts: receiveERC20AmountsUnknow,\n  unshieldERC20Amounts: unshieldERC20AmountsUnknow,\n  receiveNFTAmounts: [],\n  transferNFTAmounts: [],\n  unshieldNFTAmounts: [],\n  version: 3,\n  category: TransactionHistoryItemCategory.Unknown,\n  timestamp: 1680269870,\n};\n\nconst MOCK_HISTORY_ENTRY: TransactionHistoryEntry[] = [\n  {\n    txidVersion: TXIDVersion.V2_PoseidonMerkle,\n    txid: MOCKED_TRANSFER_SEND_TRX.txid,\n    blockNumber: MOCKED_TRANSFER_SEND_TRX.blockNumber,\n    transferTokenAmounts: [],\n    changeTokenAmounts: [],\n    receiveTokenAmounts: [], \n    unshieldTokenAmounts: [],\n    version: MOCKED_TRANSFER_SEND_TRX.version,\n    timestamp: MOCKED_TRANSFER_SEND_TRX.timestamp\n  },\n  {\n    txidVersion: TXIDVersion.V2_PoseidonMerkle,\n    txid: MOCKED_TRANSFER_RECEIVE_TRX.txid,\n    blockNumber: MOCKED_TRANSFER_RECEIVE_TRX.blockNumber,\n    transferTokenAmounts: [],\n    changeTokenAmounts: [],\n    receiveTokenAmounts: [],\n    unshieldTokenAmounts: [],\n    version: MOCKED_TRANSFER_RECEIVE_TRX.version,\n    timestamp: MOCKED_TRANSFER_RECEIVE_TRX.timestamp\n  },\n  {\n    txidVersion: TXIDVersion.V2_PoseidonMerkle,\n    txid: MOCKED_SHIELD_TRX.txid,\n    blockNumber: MOCKED_SHIELD_TRX.blockNumber,\n    transferTokenAmounts: [],\n    changeTokenAmounts: [],\n    receiveTokenAmounts: [],\n    unshieldTokenAmounts: [],\n    version: MOCKED_SHIELD_TRX.version,\n    timestamp: MOCKED_SHIELD_TRX.timestamp\n  }\n ];\n\n\ndescribe('transaction-history', () => {\n  before(async function run() {\n    this.timeout(6 * 60_000); // The scanning nowadays can take a long time\n    await initTestEngine();\n    await initTestEngineNetworks();\n    const railgunWalletInfo = await createRailgunWallet(\n      MOCK_DB_ENCRYPTION_KEY,\n      MOCK_MNEMONIC_2,\n      { [NetworkName.EthereumSepolia]: 0 }, // creationBlockNumbers\n    );\n    if (!isDefined(railgunWalletInfo)) {\n      throw new Error(`Could not create wallet`);\n    }\n    wallet = fullWalletForID(railgunWalletInfo.id);\n\n    await pollUntilUTXOMerkletreeScanned();\n  });\n  after(async () => {\n    await closeTestEngine();\n  });\n\n  it('[V2] Should get wallet transaction history', async function run() {\n    if (!isV2Test()) {\n      this.skip();\n      return;\n    }\n     \n    const mockGetHistory = sinon.stub(wallet, 'getTransactionHistory').resolves(MOCK_HISTORY_ENTRY);\n\n    const items = await getWalletTransactionHistory(\n      SEPOLIA_CHAIN,\n      wallet.id,\n      undefined,\n    );\n\n    expect(mockGetHistory.calledWith(SEPOLIA_CHAIN, undefined)).to.be.true;\n    expect(items.length).to.be.greaterThanOrEqual(3);\n    for (const item of items) {\n      expect(item.txidVersion).to.equal(TXIDVersion.V2_PoseidonMerkle);\n      expect(item.txid.length).to.equal(66); // '0x' + 32 bytes\n    }\n  });\n\n  it('Should get Unknown category for transaction history item', () => {\n    const category = categoryForTransactionHistoryItem(MOCKED_UNKNOWN_SWAP_TRX);\n    expect(category).to.equal(TransactionHistoryItemCategory.Unknown);\n  });\n\n  it('Should get TransferSendERC20s category for transaction history item', () => {\n    const category = categoryForTransactionHistoryItem(\n      MOCKED_TRANSFER_SEND_TRX,\n    );\n    expect(category).to.equal(\n      TransactionHistoryItemCategory.TransferSendERC20s,\n    );\n  });\n\n  it('Should get ShieldERC20s category for transaction history item', () => {\n    const category = categoryForTransactionHistoryItem(MOCKED_SHIELD_TRX);\n    expect(category).to.equal(TransactionHistoryItemCategory.ShieldERC20s);\n  });\n\n  it('Should get TransferReceiveERC20s category for transaction history item', () => {\n    const category = categoryForTransactionHistoryItem(\n      MOCKED_TRANSFER_RECEIVE_TRX,\n    );\n    expect(category).to.equal(\n      TransactionHistoryItemCategory.TransferReceiveERC20s,\n    );\n  });\n\n  it('Should get UnshieldERC20s category for transaction history item', () => {\n    const category = categoryForTransactionHistoryItem(MOCKED_UNSHIELD_TRX);\n    expect(category).to.equal(TransactionHistoryItemCategory.UnshieldERC20s);\n  });\n});\n\n"]}