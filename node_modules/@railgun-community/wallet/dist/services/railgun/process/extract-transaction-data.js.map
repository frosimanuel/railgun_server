{"version":3,"file":"extract-transaction-data.js","sourceRoot":"","sources":["../../../../src/services/railgun/process/extract-transaction-data.ts"],"names":[],"mappings":";;;AAAA,sDAA2E;AAG3E,gDAAiD;AAE1C,MAAM,oDAAoD,GAAG,CAClE,eAAuB,EACvB,WAAwB,EACxB,OAAgB,EAChB,kBAAuC,EACvC,aAAsB,EACI,EAAE;IAC5B,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAE5B,IAAI,eAAuB,CAAC;IAC5B,IAAI,aAAa,EAAE;QACjB,eAAe,GAAG,uCAA8B,CAAC,qBAAqB,CACpE,WAAW,EACX,KAAK,CACN,CAAC,OAAO,CAAC;KACX;SAAM;QACL,eAAe,GAAG,uCAA8B,CAAC,WAAW,CAC1D,WAAW,EACX,KAAK,CACN,CAAC,OAAO,CAAC;KACX;IAED,MAAM,MAAM,GAAG,IAAA,qBAAW,EAAC,eAAe,CAAC,CAAC;IAC5C,OAAO,MAAM,CAAC,8BAA8B,CAC1C,WAAW,EACX,KAAK,EACL,kBAAkB,EAClB,aAAa,EACb,eAAe,CAChB,CAAC;AACJ,CAAC,CAAC;AA9BW,QAAA,oDAAoD,wDA8B/D","sourcesContent":["import { RailgunVersionedSmartContracts } from '@railgun-community/engine';\nimport { Network, TXIDVersion } from '@railgun-community/shared-models';\nimport { ContractTransaction } from 'ethers';\nimport { walletForID } from '../wallets/wallets';\n\nexport const extractFirstNoteERC20AmountMapFromTransactionRequest = (\n  railgunWalletID: string,\n  txidVersion: TXIDVersion,\n  network: Network,\n  transactionRequest: ContractTransaction,\n  useRelayAdapt: boolean,\n): Promise<MapType<bigint>> => {\n  const chain = network.chain;\n\n  let contractAddress: string;\n  if (useRelayAdapt) {\n    contractAddress = RailgunVersionedSmartContracts.getRelayAdaptContract(\n      txidVersion,\n      chain,\n    ).address;\n  } else {\n    contractAddress = RailgunVersionedSmartContracts.getVerifier(\n      txidVersion,\n      chain,\n    ).address;\n  }\n\n  const wallet = walletForID(railgunWalletID);\n  return wallet.extractFirstNoteERC20AmountMap(\n    txidVersion,\n    chain,\n    transactionRequest,\n    useRelayAdapt,\n    contractAddress,\n  );\n};\n"]}