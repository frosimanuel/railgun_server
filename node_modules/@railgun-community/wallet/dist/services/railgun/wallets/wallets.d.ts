import { RailgunWallet, AbstractWallet, AddressData } from '@railgun-community/engine';
import { RailgunWalletInfo, Chain } from '@railgun-community/shared-models';
export declare const awaitWalletScan: (walletID: string, chain: Chain) => Promise<unknown>;
export declare const awaitMultipleWalletScans: (walletID: string, chain: Chain, numScans: number) => Promise<void>;
export declare const walletForID: (id: string) => AbstractWallet;
export declare const fullWalletForID: (id: string) => RailgunWallet;
export declare const viewOnlyWalletForID: (id: string) => RailgunWallet;
export declare const createRailgunWallet: (encryptionKey: string, mnemonic: string, creationBlockNumbers: Optional<MapType<number>>, railgunWalletDerivationIndex?: number) => Promise<RailgunWalletInfo>;
export declare const createViewOnlyRailgunWallet: (encryptionKey: string, shareableViewingKey: string, creationBlockNumbers: Optional<MapType<number>>) => Promise<RailgunWalletInfo>;
export declare const loadWalletByID: (encryptionKey: string, railgunWalletID: string, isViewOnlyWallet: boolean) => Promise<RailgunWalletInfo>;
export declare const unloadWalletByID: (railgunWalletID: string) => void;
export declare const deleteWalletByID: (railgunWalletID: string) => Promise<void>;
export declare const getWalletMnemonic: (encryptionKey: string, railgunWalletID: string) => Promise<string>;
export declare const getRailgunWalletAddressData: (address: string) => AddressData;
export declare const getRailgunWalletPrivateViewingKey: (railgunWalletID: string) => Uint8Array;
export declare const signWithWalletViewingKey: (railgunWalletID: string, message: string) => Promise<string>;
export declare const assertValidRailgunAddress: (address: string) => void;
export declare const validateRailgunAddress: (address: string) => boolean;
export declare const assertValidEthAddress: (address: string) => void;
export declare const validateEthAddress: (address: string) => boolean;
export declare const getRailgunAddress: (railgunWalletID: string) => Optional<string>;
export declare const getWalletShareableViewingKey: (railgunWalletID: string) => Promise<Optional<string>>;
