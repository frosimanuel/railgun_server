import { RailgunPopulateTransactionResponse, RailgunTransactionGasEstimateResponse, NetworkName, FeeTokenDetails, RailgunERC20AmountRecipient, RailgunNFTAmountRecipient, TransactionGasDetails, TXIDVersion } from '@railgun-community/shared-models';
export declare const populateProvedTransfer: (txidVersion: TXIDVersion, networkName: NetworkName, railgunWalletID: string, showSenderAddressToRecipient: boolean, memoText: Optional<string>, erc20AmountRecipients: RailgunERC20AmountRecipient[], nftAmountRecipients: RailgunNFTAmountRecipient[], broadcasterFeeERC20AmountRecipient: Optional<RailgunERC20AmountRecipient>, sendWithPublicWallet: boolean, overallBatchMinGasPrice: Optional<bigint>, gasDetails: TransactionGasDetails) => Promise<RailgunPopulateTransactionResponse>;
export declare const gasEstimateForUnprovenTransfer: (txidVersion: TXIDVersion, networkName: NetworkName, railgunWalletID: string, encryptionKey: string, memoText: Optional<string>, erc20AmountRecipients: RailgunERC20AmountRecipient[], nftAmountRecipients: RailgunNFTAmountRecipient[], originalGasDetails: TransactionGasDetails, feeTokenDetails: Optional<FeeTokenDetails>, sendWithPublicWallet: boolean) => Promise<RailgunTransactionGasEstimateResponse>;
