{"version":3,"file":"tx-nullifiers.js","sourceRoot":"","sources":["../../../src/services/transactions/tx-nullifiers.ts"],"names":[],"mappings":";;;AAKA,6CAA2D;AAC3D,mDAAmD;AAE5C,MAAM,8BAA8B,GAAG,KAAK,EACjD,WAAwB,EACxB,KAAY,EACZ,UAAoB,EACwB,EAAE;IAC9C,IAAI;QACF,MAAM,MAAM,GAAG,IAAA,kBAAS,GAAE,CAAC;QAC3B,MAAM,IAAI,GAAqB,MAAM,MAAM,CAAC,8BAA8B,CACxE,WAAW,EACX,KAAK,EACL,UAAU,CACX,CAAC;QACF,OAAO,EAAE,IAAI,EAAE,CAAC;KACjB;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,8BAAsB,EAAC,sCAA8B,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACxE;AACH,CAAC,CAAC;AAhBW,QAAA,8BAA8B,kCAgBzC","sourcesContent":["import {\n  Chain,\n  RailgunTxidFromNullifiersResponse,\n  TXIDVersion,\n} from '@railgun-community/shared-models';\nimport { reportAndSanitizeError } from '../../utils/error';\nimport { getEngine } from '../railgun/core/engine';\n\nexport const getCompletedTxidFromNullifiers = async (\n  txidVersion: TXIDVersion,\n  chain: Chain,\n  nullifiers: string[],\n): Promise<RailgunTxidFromNullifiersResponse> => {\n  try {\n    const engine = getEngine();\n    const txid: Optional<string> = await engine.getCompletedTxidFromNullifiers(\n      txidVersion,\n      chain,\n      nullifiers,\n    );\n    return { txid };\n  } catch (err) {\n    throw reportAndSanitizeError(getCompletedTxidFromNullifiers.name, err);\n  }\n};\n"]}