{"version":3,"file":"test-wallet-poi-node-interface.test.js","sourceRoot":"","sources":["../../../src/tests/poi/test-wallet-poi-node-interface.test.ts"],"names":[],"mappings":";AAAA,sDAAsD;;;AAEtD,sDAQmC;AACnC,oEAK0C;AAE7B,QAAA,aAAa,GAAG,WAAW,CAAC;AAEzC,MAAa,0BAA2B,SAAQ,yBAAgB;IAC9D,MAAM,CAAC,sBAAsB,GAAG,yBAAgB,CAAC,OAAO,CAAC;IAEjD,MAAM,CAAC,cAAc,CAAC,KAAY;QACxC,MAAM,OAAO,GAAG,IAAA,+BAAe,EAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACrC;QACD,MAAM,kBAAkB,GAAG,OAAO,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,kBAAkB,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC1C;QACD,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,kDAAkD;IAClD,QAAQ,CAAC,KAAY;QACnB,OAAO,0BAA0B,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;IAClE,CAAC;IAED,kDAAkD;IAClD,KAAK,CAAC,UAAU,CAAC,KAAY;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,kDAAkD;IAClD,KAAK,CAAC,cAAc,CAClB,WAAwB,EACxB,MAAa,EACb,QAAkB,EAClB,sBAA+C;QAE/C,MAAM,UAAU,GAAiD,EAAE,CAAC;QACpE,sBAAsB,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE;YACrD,UAAU,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAC3D,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACzB,sEAAsE;gBACtE,UAAU,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC;oBAC1D,0BAA0B,CAAC,sBAAsB,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,kDAAkD;IAClD,KAAK,CAAC,kBAAkB,CACtB,WAAwB,EACxB,KAAY,EACZ,OAAe,EACf,kBAA4B;QAE5B,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IAC/D,CAAC;IAED,kDAAkD;IAClD,KAAK,CAAC,sBAAsB,CAC1B,WAAwB,EACxB,KAAY,EACZ,OAAe,EACf,cAAwB;QAExB,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;IACtE,CAAC;IAED,kDAAkD;IAClD,KAAK,CAAC,SAAS,CACb,WAAwB,EACxB,KAAY,EACZ,OAAe,EACf,UAAsB,EACtB,cAAwB,EACxB,cAAsB,EACtB,mBAA2B,EAC3B,qBAA+B,EAC/B,wBAAgC;QAEhC,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACxD,CAAC;IAED,kDAAkD;IAClD,KAAK,CAAC,0BAA0B,CAC9B,WAAwB,EACxB,KAAY,EACZ,QAAkB,EAClB,wBAAmD;QAEnD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;;AAvFH,gEAwFC","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport {\n  BlindedCommitmentData,\n  Chain,\n  LegacyTransactProofData,\n  POINodeInterface,\n  POIsPerList,\n  RailgunEngine,\n  TXOPOIListStatus,\n} from '@railgun-community/engine';\nimport {\n  MerkleProof,\n  SnarkProof,\n  TXIDVersion,\n  networkForChain,\n} from '@railgun-community/shared-models';\n\nexport const MOCK_LIST_KEY = 'test_list';\n\nexport class TestWalletPOINodeInterface extends POINodeInterface {\n  static overridePOIsListStatus = TXOPOIListStatus.Missing;\n\n  private static getPOISettings(chain: Chain) {\n    const network = networkForChain(chain);\n    if (!network) {\n      throw new Error(`No network found`);\n    }\n    const networkPOISettings = network.poi;\n    if (!networkPOISettings) {\n      throw new Error(`No POI settings found`);\n    }\n    return networkPOISettings;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isActive(chain: Chain): boolean {\n    return TestWalletPOINodeInterface.getPOISettings(chain) != null;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async isRequired(chain: Chain): Promise<boolean> {\n    return true;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPOIsPerList(\n    txidVersion: TXIDVersion,\n    _chain: Chain,\n    listKeys: string[],\n    blindedCommitmentDatas: BlindedCommitmentData[],\n  ): Promise<{ [blindedCommitment: string]: POIsPerList }> {\n    const allMissing: { [blindedCommitment: string]: POIsPerList } = {};\n    blindedCommitmentDatas.forEach(blindedCommitmentData => {\n      allMissing[blindedCommitmentData.blindedCommitment] ??= {};\n      listKeys.forEach(listKey => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        allMissing[blindedCommitmentData.blindedCommitment][listKey] =\n          TestWalletPOINodeInterface.overridePOIsListStatus;\n      });\n    });\n    return allMissing;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPOIMerkleProofs(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    blindedCommitments: string[],\n  ): Promise<MerkleProof[]> {\n    throw new Error('Could not get merkle proofs - no POI node');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async validatePOIMerkleroots(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    poiMerkleroots: string[],\n  ): Promise<boolean> {\n    throw new Error('Could not validate POI merkleroots - no POI node');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async submitPOI(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKey: string,\n    snarkProof: SnarkProof,\n    poiMerkleroots: string[],\n    txidMerkleroot: string,\n    txidMerklerootIndex: number,\n    blindedCommitmentsOut: string[],\n    railgunTxidIfHasUnshield: string,\n  ): Promise<void> {\n    throw new Error('Could not submit POI - no POI node');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async submitLegacyTransactProofs(\n    txidVersion: TXIDVersion,\n    chain: Chain,\n    listKeys: string[],\n    legacyTransactProofDatas: LegacyTransactProofData[],\n  ): Promise<void> {\n    return Promise.resolve();\n  }\n}\n"]}