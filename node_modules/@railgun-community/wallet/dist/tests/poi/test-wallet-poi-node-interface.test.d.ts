import { BlindedCommitmentData, Chain, LegacyTransactProofData, POINodeInterface, POIsPerList, TXOPOIListStatus } from '@railgun-community/engine';
import { MerkleProof, SnarkProof, TXIDVersion } from '@railgun-community/shared-models';
export declare const MOCK_LIST_KEY = "test_list";
export declare class TestWalletPOINodeInterface extends POINodeInterface {
    static overridePOIsListStatus: TXOPOIListStatus;
    private static getPOISettings;
    isActive(chain: Chain): boolean;
    isRequired(chain: Chain): Promise<boolean>;
    getPOIsPerList(txidVersion: TXIDVersion, _chain: Chain, listKeys: string[], blindedCommitmentDatas: BlindedCommitmentData[]): Promise<{
        [blindedCommitment: string]: POIsPerList;
    }>;
    getPOIMerkleProofs(txidVersion: TXIDVersion, chain: Chain, listKey: string, blindedCommitments: string[]): Promise<MerkleProof[]>;
    validatePOIMerkleroots(txidVersion: TXIDVersion, chain: Chain, listKey: string, poiMerkleroots: string[]): Promise<boolean>;
    submitPOI(txidVersion: TXIDVersion, chain: Chain, listKey: string, snarkProof: SnarkProof, poiMerkleroots: string[], txidMerkleroot: string, txidMerklerootIndex: number, blindedCommitmentsOut: string[], railgunTxidIfHasUnshield: string): Promise<void>;
    submitLegacyTransactProofs(txidVersion: TXIDVersion, chain: Chain, listKeys: string[], legacyTransactProofDatas: LegacyTransactProofData[]): Promise<void>;
}
