{"version":3,"file":"mocks.test.js","sourceRoot":"","sources":["../../src/tests/mocks.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  FallbackProviderJsonConfig,\n  FeeTokenDetails,\n  EVMGasType,\n  RailgunERC20Amount,\n  RailgunNFTAmountRecipient,\n  NFTTokenType,\n  RailgunNFTAmount,\n  TransactionGasDetails,\n  RailgunERC20Recipient,\n  XChaChaEncryptionAlgorithm,\n} from '@railgun-community/shared-models';\nimport {\n  BalancesUpdatedCallback,\n  POIProofProgressCallback,\n} from '../services/railgun/wallets/balance-update';\nimport {\n  CommitmentCiphertextV2,\n  CommitmentCiphertextV3,\n} from '@railgun-community/engine';\n\nexport const MOCK_MNEMONIC =\n  'test test test test test test test test test test test junk';\n\nexport const MOCK_MNEMONIC_2 =\n  'pause crystal tornado alcohol genre cement fade large song like bag where';\n\nexport const MOCK_DB_ENCRYPTION_KEY =\n  '0101010101010101010101010101010101010101010101010101010101010101';\n\nexport const MOCK_MEMO =\n  'A nice little mock memo, and how bout a little more for ya? ðŸ¤©';\n\nexport const MOCK_RAILGUN_WALLET_ADDRESS =\n  '0zk1q8hxknrs97q8pjxaagwthzc0df99rzmhl2xnlxmgv9akv32sua0kfrv7j6fe3z53llhxknrs97q8pjxaagwthzc0df99rzmhl2xnlxmgv9akv32sua0kg0zpzts';\n\nexport const MOCK_ETH_WALLET_ADDRESS =\n  '0x9E9F988356f46744Ee0374A17a5Fa1a3A3cC3777';\n\nexport const MOCK_TOKEN_ADDRESS = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\nexport const MOCK_TOKEN_ADDRESS_2 =\n  '0xe76C6c83af64e4C60245D8C7dE953DF673a7A33D';\n\nexport const MOCK_NFT_ADDRESS = '0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d';\n\nexport const TEST_POLYGON_RPC = 'https://polygon-rpc.com';\n\nexport const TEST_WALLET_SOURCE = 'test engine';\n\nexport const MOCK_TOKEN_AMOUNTS_TOKEN_1_ONLY: RailgunERC20Amount[] = [\n  {\n    tokenAddress: MOCK_TOKEN_ADDRESS,\n    amount: BigInt(0x100),\n  },\n];\n\nexport const MOCK_TOKEN_AMOUNTS: RailgunERC20Amount[] = [\n  {\n    tokenAddress: MOCK_TOKEN_ADDRESS,\n    amount: BigInt(0x100),\n  },\n  {\n    tokenAddress: MOCK_TOKEN_ADDRESS_2,\n    amount: BigInt(0x200),\n  },\n];\n\nexport const MOCK_ERC20_RECIPIENTS: RailgunERC20Recipient[] = [\n  {\n    tokenAddress: MOCK_TOKEN_ADDRESS,\n    recipientAddress: MOCK_RAILGUN_WALLET_ADDRESS,\n  },\n  {\n    tokenAddress: MOCK_TOKEN_ADDRESS_2,\n    recipientAddress: MOCK_RAILGUN_WALLET_ADDRESS,\n  },\n];\n\nexport const MOCK_NFT_AMOUNTS: RailgunNFTAmount[] = [\n  {\n    nftAddress: MOCK_NFT_ADDRESS,\n    nftTokenType: NFTTokenType.ERC721,\n    tokenSubID: '0x01',\n    amount: BigInt(0x01),\n  },\n  {\n    nftAddress: MOCK_NFT_ADDRESS,\n    nftTokenType: NFTTokenType.ERC1155,\n    tokenSubID: '0x02',\n    amount: BigInt(0x02),\n  },\n];\n\nexport const MOCK_COMMITMENTS: string[] = [\n  '0x0000000000000000000000000000000000000000000000000000000000000003',\n];\n\nexport const MOCK_NULLIFIERS: string[] = [\n  '0x0000000000000000000000000000000000000000000000000000000000000001',\n  '0x0000000000000000000000000000000000000000000000000000000000000002',\n];\n\nexport const MOCK_BOUND_PARAMS_V2 = {\n  commitmentCiphertext: [\n    {\n      ciphertext: [\n        '0x7d6854cd1fc49f0602ccd933422ed2e2ee070a9f1806843d5c81c08253134950',\n        '0x8f54329134103720a7dac44d6f2a632ff18e7599b9bc1bf39d639e998a223b80',\n        '0xed1ec36daf72e389fc567b2b5507fb6bff80b601bd3c0c441e4e97f28551f2f2',\n        '0xede74ef3a06347178de5e4204f6bf8c475be62bcdb9911bd31be952f2e8af096',\n      ],\n      blindedSenderViewingKey:\n        '0x898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n      blindedReceiverViewingKey:\n        '0x898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n      memo: '0x',\n      annotationData:\n        '0xfaeb57df19481f9ad59b8619a5687b2623aa2280d0df93aa77258326df9e6657bbdb72d305e1373906a47c6e684c34c2553c7e061baac1f744e8ece042c6',\n    },\n  ],\n};\n\nexport const MOCK_BOUND_PARAMS_V3 = {\n  local: {\n    commitmentCiphertext: [\n      {\n        ciphertext:\n          '0x7d6854cd1fc49f0602ccd933422ed2e2ee070a9f1806843d5c81c082531349508f54329134103720a7dac44d6f2a632ff18e7599b9bc1bf39d639e998a223b80ed1ec36daf72e389fc567b2b5507fb6bff80b601bd3c0c441e4e97f28551f2f2ede74ef3a06347178de5e4204f6bf8c475be62bcdb9911bd31be952f2e8af096',\n        blindedSenderViewingKey:\n          '0x898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n        blindedReceiverViewingKey:\n          '0x898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n      },\n    ],\n  },\n};\n\nexport const MOCK_COMMITMENT_HASH =\n  '0x2b13bccd4974c797df42a89221ed6e19e50c32055058cdcc5a8ea836233e4cab';\n\nexport const MOCK_FORMATTED_BROADCASTER_FEE_COMMITMENT_CIPHERTEXT_V2: CommitmentCiphertextV2 =\n  {\n    annotationData:\n      '0xfaeb57df19481f9ad59b8619a5687b2623aa2280d0df93aa77258326df9e6657bbdb72d305e1373906a47c6e684c34c2553c7e061baac1f744e8ece042c6',\n    blindedReceiverViewingKey:\n      '898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n    blindedSenderViewingKey:\n      '898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n    ciphertext: {\n      data: [\n        '8f54329134103720a7dac44d6f2a632ff18e7599b9bc1bf39d639e998a223b80',\n        'ed1ec36daf72e389fc567b2b5507fb6bff80b601bd3c0c441e4e97f28551f2f2',\n        'ede74ef3a06347178de5e4204f6bf8c475be62bcdb9911bd31be952f2e8af096',\n      ],\n      iv: '7d6854cd1fc49f0602ccd933422ed2e2',\n      tag: 'ee070a9f1806843d5c81c08253134950',\n    },\n    memo: '0x',\n  };\n\nexport const MOCK_FORMATTED_BROADCASTER_FEE_COMMITMENT_CIPHERTEXT_V3: CommitmentCiphertextV3 =\n  {\n    blindedReceiverViewingKey:\n      '898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n    blindedSenderViewingKey:\n      '898bc07d416014a2854f756b9f8873bde925b043e9e01ea6d97183b91217b5b6',\n    ciphertext: {\n      algorithm: XChaChaEncryptionAlgorithm.XChaChaPoly1305,\n      nonce: '7d6854cd1fc49f0602ccd933422ed2e2',\n      bundle:\n        'ee070a9f1806843d5c81c082531349508f54329134103720a7dac44d6f2a632ff18e7599b9bc1bf39d639e998a223b80ed1ec36daf72e389fc567b2b5507fb6bff80b601bd3c0c441e4e97f28551f2f2ede74ef3a06347178de5e4204f6bf8c475be62bcdb9911bd31be952f2e8af096',\n    },\n  };\n\nexport const MOCK_NFT_AMOUNT_RECIPIENTS: RailgunNFTAmountRecipient[] =\n  MOCK_NFT_AMOUNTS.map(nftAmount => ({\n    ...nftAmount,\n    recipientAddress: MOCK_RAILGUN_WALLET_ADDRESS,\n  }));\n\nexport const MOCK_NFT_AMOUNT_RECIPIENTS_UNSHIELD: RailgunNFTAmountRecipient[] =\n  MOCK_NFT_AMOUNT_RECIPIENTS.map(nftAmountRecipient => ({\n    ...nftAmountRecipient,\n    recipientAddress: MOCK_ETH_WALLET_ADDRESS,\n  }));\n\nexport const MOCK_TOKEN_FEE: RailgunERC20Amount = {\n  tokenAddress: MOCK_TOKEN_ADDRESS,\n  amount: BigInt(0x0300),\n};\n\nexport const MOCK_FEE_TOKEN_DETAILS: FeeTokenDetails = {\n  tokenAddress: MOCK_TOKEN_ADDRESS,\n  feePerUnitGas: BigInt('0x2000000000000000000'), // 2x\n};\n\nexport const MOCK_TRANSACTION_GAS_DETAILS_SERIALIZED_TYPE_2: TransactionGasDetails =\n  {\n    evmGasType: EVMGasType.Type2,\n    gasEstimate: 0n,\n    maxFeePerGas: BigInt('0x1234567890'),\n    maxPriorityFeePerGas: BigInt('0x123456'),\n  };\n\nexport const MOCK_BALANCES_UPDATE_CALLBACK: BalancesUpdatedCallback = () => {\n  // noop\n};\n\nexport const MOCK_POI_PROOF_PROGRESS_CALLBACK_CALLBACK: POIProofProgressCallback =\n  () => {\n    // noop\n  };\n\nexport const MOCK_FALLBACK_PROVIDER_JSON_CONFIG_POLYGON: FallbackProviderJsonConfig =\n  {\n    chainId: 137,\n    providers: [\n      {\n        provider: 'https://rpc-mainnet.matic.quiknode.pro',\n        priority: 3,\n        weight: 3,\n        maxLogsPerBatch: 2,\n        stallTimeout: 2500,\n      },\n      {\n        provider: 'https://polygon-bor-rpc.publicnode.com',\n        priority: 3,\n        weight: 2,\n        maxLogsPerBatch: 5,\n        stallTimeout: 2500,\n      },\n      {\n        provider: 'https://rpc.ankr.com/polygon',\n        priority: 3,\n        weight: 2,\n        maxLogsPerBatch: 5,\n      },\n    ],\n  };\n\nexport const MOCK_FALLBACK_PROVIDER_JSON_CONFIG_SEPOLIA: FallbackProviderJsonConfig =\n  {\n    chainId: 11155111,\n    providers: [\n      {\n        provider: 'https://sepolia.drpc.org',\n        priority: 3,\n        weight: 3,\n        maxLogsPerBatch: 2,\n        stallTimeout: 2500,\n      },\n      {\n        provider: 'https://ethereum-sepolia-rpc.publicnode.com',\n        priority: 3,\n        weight: 2,\n        maxLogsPerBatch: 5,\n      },\n    ],\n  };\n\nexport const MOCK_FALLBACK_PROVIDER_JSON_CONFIG_ETHEREUM: FallbackProviderJsonConfig =\n  {\n    chainId: 1,\n    providers: [\n      {\n        provider: 'https://eth.llamarpc.com',\n        priority: 3,\n        weight: 3,\n        maxLogsPerBatch: 2,\n        stallTimeout: 2500,\n      },\n      {\n        provider: 'https://rpc.ankr.com/eth',\n        priority: 3,\n        weight: 2,\n        maxLogsPerBatch: 5,\n      },\n    ],\n  };\n"]}