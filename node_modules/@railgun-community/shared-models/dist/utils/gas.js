"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.calculateMaximumGas = exports.calculateTotalGas = exports.calculateGasPrice = exports.calculateGasLimit = exports.getEVMGasTypeForTransaction = void 0;
const network_config_1 = require("../models/network-config");
const response_types_1 = require("../models/response-types");
const getEVMGasTypeForTransaction = (networkName, sendWithPublicWallet) => {
    const { defaultEVMGasType } = network_config_1.NETWORK_CONFIG[networkName];
    if (defaultEVMGasType === response_types_1.EVMGasType.Type2 && !sendWithPublicWallet) {
        // Broadcaster transactions require overallBatchMinGasPrice.
        // This is only supported by type 1 transactions.
        return response_types_1.EVMGasType.Type1;
    }
    return defaultEVMGasType;
};
exports.getEVMGasTypeForTransaction = getEVMGasTypeForTransaction;
const calculateGasLimit = (gasEstimate) => {
    // Gas Limit: Add 20% to gas estimate.
    return (gasEstimate * 12000n) / 10000n;
};
exports.calculateGasLimit = calculateGasLimit;
const calculateGasPrice = (gasDetails) => {
    switch (gasDetails.evmGasType) {
        case response_types_1.EVMGasType.Type0:
        case response_types_1.EVMGasType.Type1: {
            return gasDetails.gasPrice;
        }
        case response_types_1.EVMGasType.Type2: {
            return gasDetails.maxFeePerGas;
        }
    }
};
exports.calculateGasPrice = calculateGasPrice;
const calculateTotalGas = (transactionGasDetails) => {
    const gasPrice = (0, exports.calculateGasPrice)(transactionGasDetails);
    const { gasEstimate } = transactionGasDetails;
    return gasEstimate * gasPrice;
};
exports.calculateTotalGas = calculateTotalGas;
const calculateMaximumGas = (transactionGasDetails) => {
    const gasPrice = (0, exports.calculateGasPrice)(transactionGasDetails);
    const { gasEstimate } = transactionGasDetails;
    return (0, exports.calculateGasLimit)(gasEstimate) * gasPrice;
};
exports.calculateMaximumGas = calculateMaximumGas;
//# sourceMappingURL=gas.js.map