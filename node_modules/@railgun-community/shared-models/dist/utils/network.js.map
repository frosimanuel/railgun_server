{"version":3,"file":"network.js","sourceRoot":"","sources":["../../src/utils/network.ts"],"names":[],"mappings":";;;AAAA,6DAAgF;AAGzE,MAAM,eAAe,GAAG,CAAC,KAAY,EAAqB,EAAE;IACjE,OAAO,MAAM,CAAC,MAAM,CAAC,+BAAc,CAAC,CAAC,IAAI,CACvC,OAAO,CAAC,EAAE,CACR,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CACrE,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,eAAe,mBAK1B;AAEK,MAAM,qCAAqC,GAAG,CACnD,WAAwB,EACxB,OAAe,EACf,EAAE;IACF,MAAM,OAAO,GAAG,+BAAc,CAAC,WAAW,CAAC,CAAC;IAC5C,OAAO,CACL,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;QACjD,OAAO,iBAAiB,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC;IACnE,CAAC,CAAC,IAAI,IAAI,CACX,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,qCAAqC,yCAUhD","sourcesContent":["import { Network, NETWORK_CONFIG, NetworkName } from '../models/network-config';\nimport { Chain } from '../models/response-types';\n\nexport const networkForChain = (chain: Chain): Optional<Network> => {\n  return Object.values(NETWORK_CONFIG).find(\n    network =>\n      network.chain.type === chain.type && network.chain.id === chain.id,\n  );\n};\n\nexport const isHistoricalRelayAdaptContractAddress = (\n  networkName: NetworkName,\n  address: string,\n) => {\n  const network = NETWORK_CONFIG[networkName];\n  return (\n    network.relayAdaptHistory.find(historicalAddress => {\n      return historicalAddress.toLowerCase() === address.toLowerCase();\n    }) != null\n  );\n};\n"]}