{"version":3,"file":"versions.js","sourceRoot":"","sources":["../../src/utils/versions.ts"],"names":[],"mappings":";;;AAAA,iCAAmC;AAE5B,MAAM,cAAc,GAAG,CAC5B,UAAmB,EACnB,UAAmB,EACX,EAAE;IACV,IAAI,CAAC,IAAA,gBAAS,EAAC,UAAU,CAAC,IAAI,CAAC,IAAA,gBAAS,EAAC,UAAU,CAAC,EAAE;QACpD,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;KAC7D;IAED,mDAAmD;IACnD,MAAM,UAAU,GAAG,IAAI,EACrB,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAC/B,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAElC,SAAS,WAAW,CAAC,CAAS;QAC5B,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;QAC9D,OAAO,GAAG,CAAC;KACZ;IACD,IAAI,UAAU,EAAE;QACd,OAAO,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;YACtC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB;QACD,OAAO,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;YACtC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB;KACF;IAED,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3C,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QAC9C,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,OAAO,CAAC,CAAC;SACV;QACD,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,cAAc,CAAC,CAAC,CAAC,EAAE;YAC3C,SAAS;SACV;aAAM,IAAI,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,EAAE;YAChD,OAAO,CAAC,CAAC;SACV;aAAM;YACL,OAAO,CAAC,CAAC,CAAC;SACX;KACF;IACD,IAAI,cAAc,CAAC,MAAM,KAAK,cAAc,CAAC,MAAM,EAAE;QACnD,OAAO,CAAC,CAAC,CAAC;KACX;IACD,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AAhDW,QAAA,cAAc,kBAgDzB","sourcesContent":["import { isDefined } from './util';\n\nexport const versionCompare = (\n  appVersion?: string,\n  minVersion?: string,\n): number => {\n  if (!isDefined(appVersion) || !isDefined(minVersion)) {\n    throw new Error('Requires two version numbers to compare.');\n  }\n\n  // Adapted from https://stackoverflow.com/a/6832721\n  const zeroExtend = true,\n    v1parts = appVersion.split('.'),\n    v2parts = minVersion.split('.');\n\n  function isValidPart(x: string) {\n    return /^\\d+$/.test(x);\n  }\n\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n    return NaN;\n  }\n  if (zeroExtend) {\n    while (v1parts.length < v2parts.length) {\n      v1parts.push('0');\n    }\n    while (v2parts.length < v1parts.length) {\n      v2parts.push('0');\n    }\n  }\n\n  const v1parts_number = v1parts.map(Number);\n  const v2parts_number = v2parts.map(Number);\n\n  for (let i = 0; i < v1parts_number.length; ++i) {\n    if (v2parts_number.length === i) {\n      return 1;\n    }\n    if (v1parts_number[i] === v2parts_number[i]) {\n      continue;\n    } else if (v1parts_number[i] > v2parts_number[i]) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n  if (v1parts_number.length !== v2parts_number.length) {\n    return -1;\n  }\n  return 0;\n};\n"]}