"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProofCachePOI = void 0;
const debugger_1 = __importDefault(require("../debugger/debugger"));
const stringify_1 = require("../utils/stringify");
class ProofCachePOI {
    static cache = new Map();
    static get(listKey, anyRailgunTxidMerklerootAfterTransaction, blindedCommitmentsOut, poiMerkleroots, railgunTxidIfHasUnshield) {
        try {
            const stringified = (0, stringify_1.stringifySafe)([
                listKey,
                anyRailgunTxidMerklerootAfterTransaction,
                ...blindedCommitmentsOut,
                ...poiMerkleroots,
                railgunTxidIfHasUnshield,
            ]);
            return ProofCachePOI.cache.get(stringified);
        }
        catch (err) {
            if (err instanceof Error) {
                debugger_1.default.error(err);
            }
            return undefined;
        }
    }
    static store(listKey, anyRailgunTxidMerklerootAfterTransaction, blindedCommitmentsOut, poiMerkleroots, railgunTxidIfHasUnshield, proof) {
        try {
            const stringified = (0, stringify_1.stringifySafe)([
                listKey,
                anyRailgunTxidMerklerootAfterTransaction,
                ...blindedCommitmentsOut,
                ...poiMerkleroots,
                railgunTxidIfHasUnshield,
            ]);
            ProofCachePOI.cache.set(stringified, proof);
        }
        catch (err) {
            if (err instanceof Error) {
                debugger_1.default.error(err);
            }
        }
    }
    static clear_TEST_ONLY() {
        ProofCachePOI.cache.clear();
    }
}
exports.ProofCachePOI = ProofCachePOI;
//# sourceMappingURL=proof-cache-poi.js.map