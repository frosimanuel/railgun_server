"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.POIProof = void 0;
const debugger_1 = __importDefault(require("../debugger/debugger"));
class POIProof {
    static verifyTransactProof = async (prover, transactProofData) => {
        // Mini
        if (await this.tryVerifyProof(prover, transactProofData, 3, 3)) {
            return true;
        }
        // Full
        return this.tryVerifyProof(prover, transactProofData, 13, 13);
    };
    static getPublicInputsPOI = (prover, transactProofData, maxInputs, maxOutputs) => {
        return prover.getPublicInputsPOI(transactProofData.txidMerkleroot, transactProofData.blindedCommitmentsOut, transactProofData.poiMerkleroots, transactProofData.railgunTxidIfHasUnshield, maxInputs, maxOutputs);
    };
    static tryVerifyProof = async (prover, transactProofData, maxInputs, maxOutputs) => {
        try {
            const publicInputs = this.getPublicInputsPOI(prover, transactProofData, maxInputs, maxOutputs);
            return await prover.verifyPOIProof(publicInputs, transactProofData.snarkProof, maxInputs, maxOutputs);
        }
        catch (cause) {
            debugger_1.default.error(new Error('Failed to verify POI proof', { cause }));
            return false;
        }
    };
}
exports.POIProof = POIProof;
//# sourceMappingURL=poi-proof.js.map